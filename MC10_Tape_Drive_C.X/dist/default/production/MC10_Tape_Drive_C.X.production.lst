

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 21 19:42:53 2023

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	16F747
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.05
    29                           ; Generated 20/12/2018 GMT
    30                           ; 
    31                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F747 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  018C                     	;# 
   130                           
   131                           	psect	idataBANK0
   132  01FC                     __pidataBANK0:	
   133                           
   134                           ;initializer for _tape_name
   135  01FC  3444               	retlw	68
   136  01FD  3445               	retlw	69
   137  01FE  3452               	retlw	82
   138  01FF  3447               	retlw	71
   139  0200  3441               	retlw	65
   140  0201  344E               	retlw	78
   141  0202  3451               	retlw	81
   142  0203  3451               	retlw	81
   143                           
   144                           	psect	strings
   145  0002                     __pstrings:	
   146  0002                     stringtab:	
   147  0002                     __stringtab:	
   148  0002                     stringcode:	
   149                           ;	String table - string pointers are 1 byte each
   150                           
   151  0002                     stringdir:	
   152  0002  3000               	movlw	high stringdir
   153  0003  008A               	movwf	10
   154  0004  0804               	movf	4,w
   155  0005  0A84               	incf	4,f
   156  0006  0782               	addwf	2,f
   157  0007                     __stringbase:	
   158  0007  3400               	retlw	0
   159  0008                     __end_of__stringtab:	
   160  0008                     _hex_table:	
   161  0008  3430               	retlw	48
   162  0009  3431               	retlw	49
   163  000A  3432               	retlw	50
   164  000B  3433               	retlw	51
   165  000C  3434               	retlw	52
   166  000D  3435               	retlw	53
   167  000E  3436               	retlw	54
   168  000F  3437               	retlw	55
   169  0010  3438               	retlw	56
   170  0011  3439               	retlw	57
   171  0012  3441               	retlw	65
   172  0013  3442               	retlw	66
   173  0014  3443               	retlw	67
   174  0015  3444               	retlw	68
   175  0016  3445               	retlw	69
   176  0017  3446               	retlw	70
   177  0018                     __end_of_hex_table:	
   178  0018                     _str_cmd_mode:	
   179  0018  3443               	retlw	67
   180  0019  346F               	retlw	111
   181  001A  346D               	retlw	109
   182  001B  346D               	retlw	109
   183  001C  3461               	retlw	97
   184  001D  346E               	retlw	110
   185  001E  3464               	retlw	100
   186  001F  3420               	retlw	32
   187  0020  346D               	retlw	109
   188  0021  346F               	retlw	111
   189  0022  3464               	retlw	100
   190  0023  3465               	retlw	101
   191  0024  340A               	retlw	10
   192  0025  3400               	retlw	0
   193  0026                     __end_of_str_cmd_mode:	
   194  0026                     _str_timeout:	
   195  0026  3454               	retlw	84
   196  0027  3469               	retlw	105
   197  0028  346D               	retlw	109
   198  0029  3465               	retlw	101
   199  002A  346F               	retlw	111
   200  002B  3475               	retlw	117
   201  002C  3474               	retlw	116
   202  002D  343A               	retlw	58
   203  002E  3420               	retlw	32
   204  002F  3400               	retlw	0
   205  0030                     __end_of_str_timeout:	
   206  0030                     STR_4:	
   207  0030  3455               	retlw	85	;'U'
   208  0031  3453               	retlw	83	;'S'
   209  0032  3442               	retlw	66	;'B'
   210  0033  3420               	retlw	32	;' '
   211  0034  3441               	retlw	65	;'A'
   212  0035  3475               	retlw	117	;'u'
   213  0036  3474               	retlw	116	;'t'
   214  0037  346F               	retlw	111	;'o'
   215  0038  3463               	retlw	99	;'c'
   216  0039  346F               	retlw	111	;'o'
   217  003A  346E               	retlw	110	;'n'
   218  003B  3466               	retlw	102	;'f'
   219  003C  3469               	retlw	105	;'i'
   220  003D  3467               	retlw	103	;'g'
   221  003E  343A               	retlw	58	;':'
   222  003F  340A               	retlw	10
   223  0040  3400               	retlw	0
   224  0041                     STR_1:	
   225  0041  3450               	retlw	80	;'P'
   226  0042  3468               	retlw	104	;'h'
   227  0043  3479               	retlw	121	;'y'
   228  0044  3473               	retlw	115	;'s'
   229  0045  3469               	retlw	105	;'i'
   230  0046  3463               	retlw	99	;'c'
   231  0047  3461               	retlw	97	;'a'
   232  0048  346C               	retlw	108	;'l'
   233  0049  3420               	retlw	32	;' '
   234  004A  3462               	retlw	98	;'b'
   235  004B  3479               	retlw	121	;'y'
   236  004C  3474               	retlw	116	;'t'
   237  004D  3465               	retlw	101	;'e'
   238  004E  3473               	retlw	115	;'s'
   239  004F  343A               	retlw	58	;':'
   240  0050  3420               	retlw	32	;' '
   241  0051  3400               	retlw	0
   242  0052                     STR_2:	
   243  0052  344C               	retlw	76	;'L'
   244  0053  346F               	retlw	111	;'o'
   245  0054  3467               	retlw	103	;'g'
   246  0055  3469               	retlw	105	;'i'
   247  0056  3463               	retlw	99	;'c'
   248  0057  3461               	retlw	97	;'a'
   249  0058  346C               	retlw	108	;'l'
   250  0059  3420               	retlw	32	;' '
   251  005A  3462               	retlw	98	;'b'
   252  005B  3479               	retlw	121	;'y'
   253  005C  3474               	retlw	116	;'t'
   254  005D  3465               	retlw	101	;'e'
   255  005E  3473               	retlw	115	;'s'
   256  005F  343A               	retlw	58	;':'
   257  0060  3420               	retlw	32	;' '
   258  0061  3400               	retlw	0
   259  0062                     STR_3:	
   260  0062  3446               	retlw	70	;'F'
   261  0063  3472               	retlw	114	;'r'
   262  0064  3465               	retlw	101	;'e'
   263  0065  3465               	retlw	101	;'e'
   264  0066  3420               	retlw	32	;' '
   265  0067  3462               	retlw	98	;'b'
   266  0068  3479               	retlw	121	;'y'
   267  0069  3474               	retlw	116	;'t'
   268  006A  3465               	retlw	101	;'e'
   269  006B  3473               	retlw	115	;'s'
   270  006C  343A               	retlw	58	;':'
   271  006D  3420               	retlw	32	;' '
   272  006E  3400               	retlw	0
   273  006F                     STR_9:	
   274  006F  3446               	retlw	70	;'F'
   275  0070  3469               	retlw	105	;'i'
   276  0071  346C               	retlw	108	;'l'
   277  0072  3465               	retlw	101	;'e'
   278  0073  3420               	retlw	32	;' '
   279  0074  3473               	retlw	115	;'s'
   280  0075  3469               	retlw	105	;'i'
   281  0076  347A               	retlw	122	;'z'
   282  0077  3465               	retlw	101	;'e'
   283  0078  343A               	retlw	58	;':'
   284  0079  3420               	retlw	32	;' '
   285  007A  3400               	retlw	0
   286  007B                     STR_8:	
   287  007B  3464               	retlw	100	;'d'
   288  007C  3465               	retlw	101	;'e'
   289  007D  3461               	retlw	97	;'a'
   290  007E  3464               	retlw	100	;'d'
   291  007F  3462               	retlw	98	;'b'
   292  0080  3465               	retlw	101	;'e'
   293  0081  3465               	retlw	101	;'e'
   294  0082  3466               	retlw	102	;'f'
   295  0083  340A               	retlw	10
   296  0084  3400               	retlw	0
   297  0085                     STR_5:	
   298  0085  3456               	retlw	86	;'V'
   299  0086  3465               	retlw	101	;'e'
   300  0087  3472               	retlw	114	;'r'
   301  0088  3473               	retlw	115	;'s'
   302  0089  3469               	retlw	105	;'i'
   303  008A  346F               	retlw	111	;'o'
   304  008B  346E               	retlw	110	;'n'
   305  008C  343A               	retlw	58	;':'
   306  008D  3420               	retlw	32	;' '
   307  008E  3400               	retlw	0
   308  008F                     STR_6:	
   309  008F  3453               	retlw	83	;'S'
   310  0090  3474               	retlw	116	;'t'
   311  0091  3461               	retlw	97	;'a'
   312  0092  3474               	retlw	116	;'t'
   313  0093  3475               	retlw	117	;'u'
   314  0094  3473               	retlw	115	;'s'
   315  0095  343A               	retlw	58	;':'
   316  0096  3420               	retlw	32	;' '
   317  0097  3400               	retlw	0
   318  0098                     STR_7:	
   319  0098  3444               	retlw	68	;'D'
   320  0099  3472               	retlw	114	;'r'
   321  009A  3461               	retlw	97	;'a'
   322  009B  3467               	retlw	103	;'g'
   323  009C  346F               	retlw	111	;'o'
   324  009D  346E               	retlw	110	;'n'
   325  009E  3473               	retlw	115	;'s'
   326  009F  3400               	retlw	0
   327                           
   328                           ; #config settings
   329  0000                     
   330                           	psect	cinit
   331  07BE                     start_initialization:	
   332  07BE                     __initialization:	
   333                           
   334                           ; Initialize objects allocated to BANK0
   335  07BE  118A  21FC  118A   	fcall	__pidataBANK0	;fetch initializer
   336  07C1  00E1               	movwf	__pdataBANK0& (0+127)
   337  07C2  118A  21FD  118A   	fcall	__pidataBANK0+1	;fetch initializer
   338  07C5  00E2               	movwf	(__pdataBANK0+1)& (0+127)
   339  07C6  118A  21FE  118A   	fcall	__pidataBANK0+2	;fetch initializer
   340  07C9  00E3               	movwf	(__pdataBANK0+2)& (0+127)
   341  07CA  118A  21FF  118A   	fcall	__pidataBANK0+3	;fetch initializer
   342  07CD  00E4               	movwf	(__pdataBANK0+3)& (0+127)
   343  07CE  118A  2200  118A   	fcall	__pidataBANK0+4	;fetch initializer
   344  07D1  00E5               	movwf	(__pdataBANK0+4)& (0+127)
   345  07D2  118A  2201  118A   	fcall	__pidataBANK0+5	;fetch initializer
   346  07D5  00E6               	movwf	(__pdataBANK0+5)& (0+127)
   347  07D6  118A  2202  118A   	fcall	__pidataBANK0+6	;fetch initializer
   348  07D9  00E7               	movwf	(__pdataBANK0+6)& (0+127)
   349  07DA  118A  2203  118A   	fcall	__pidataBANK0+7	;fetch initializer
   350  07DD  00E8               	movwf	(__pdataBANK0+7)& (0+127)
   351                           
   352                           ; Clear objects allocated to BANK3
   353  07DE  1783               	bsf	3,7	;select IRP bank2
   354  07DF  3090               	movlw	low __pbssBANK3
   355  07E0  0084               	movwf	4
   356  07E1  30F0               	movlw	low (__pbssBANK3+96)
   357  07E2  118A  21F4  118A   	fcall	clear_ram0
   358                           
   359                           ; Clear objects allocated to BANK2
   360  07E5  3010               	movlw	low __pbssBANK2
   361  07E6  0084               	movwf	4
   362  07E7  3050               	movlw	low (__pbssBANK2+64)
   363  07E8  118A  21F4  118A   	fcall	clear_ram0
   364                           
   365                           ; Clear objects allocated to BANK1
   366  07EB  1383               	bcf	3,7	;select IRP bank0
   367  07EC  30A0               	movlw	low __pbssBANK1
   368  07ED  0084               	movwf	4
   369  07EE  30E0               	movlw	low (__pbssBANK1+64)
   370  07EF  118A  21F4  118A   	fcall	clear_ram0
   371                           
   372                           ; Clear objects allocated to BANK0
   373  07F2  3020               	movlw	low __pbssBANK0
   374  07F3  0084               	movwf	4
   375  07F4  3061               	movlw	low (__pbssBANK0+65)
   376  07F5  118A  21F4  118A   	fcall	clear_ram0
   377                           
   378                           ; Clear objects allocated to COMMON
   379  07F8  3070               	movlw	low __pbssCOMMON
   380  07F9  0084               	movwf	4
   381  07FA  3077               	movlw	low (__pbssCOMMON+7)
   382  07FB  118A  21F4         	fcall	clear_ram0
   383  07FD                     end_of_initialization:	
   384                           ;End of C runtime variable initialization code
   385                           
   386  07FD                     __end_of__initialization:	
   387  07FD  0183               	clrf	3
   388  07FE  118A  2C3F         	ljmp	_main	;jump to C main() function
   389                           
   390                           	psect	bssCOMMON
   391  0070                     __pbssCOMMON:	
   392  0070                     _fifo_write_idx:	
   393  0070                     	ds	1
   394  0071                     _fifo_read_idx:	
   395  0071                     	ds	1
   396  0072                     _usb_drive_size3:	
   397  0072                     	ds	1
   398  0073                     _usb_drive_size2:	
   399  0073                     	ds	1
   400  0074                     _usb_drive_size1:	
   401  0074                     	ds	1
   402  0075                     _hex_char_low:	
   403  0075                     	ds	1
   404  0076                     _hex_char_high:	
   405  0076                     	ds	1
   406                           
   407                           	psect	bssBANK0
   408  0020                     __pbssBANK0:	
   409  0020                     _fifo_bank_C:	
   410  0020                     	ds	32
   411  0040                     _fifo_num_bytes:	
   412  0040                     	ds	1
   413  0041                     _fifo_write_bank:	
   414  0041                     	ds	1
   415  0042                     _fifo_read_bank:	
   416  0042                     	ds	1
   417  0043                     _flag_reg:	
   418  0043                     	ds	1
   419  0044                     _delay_counter:	
   420  0044                     	ds	1
   421  0045                     _timeout_low:	
   422  0045                     	ds	1
   423  0046                     _timeout_high:	
   424  0046                     	ds	1
   425  0047                     _s_reg_low:	
   426  0047                     	ds	1
   427  0048                     _s_reg_high:	
   428  0048                     	ds	1
   429  0049                     _usb_target_status:	
   430  0049                     	ds	1
   431  004A                     _usb_logical_bytes3:	
   432  004A                     	ds	1
   433  004B                     _usb_logical_bytes2:	
   434  004B                     	ds	1
   435  004C                     _usb_logical_bytes1:	
   436  004C                     	ds	1
   437  004D                     _usb_free_space3:	
   438  004D                     	ds	1
   439  004E                     _usb_free_space2:	
   440  004E                     	ds	1
   441  004F                     _usb_free_space1:	
   442  004F                     	ds	1
   443  0050                     _usb_bytes_read_low:	
   444  0050                     	ds	1
   445  0051                     _usb_bytes_read_high:	
   446  0051                     	ds	1
   447  0052                     _usb_file_size_low:	
   448  0052                     	ds	1
   449  0053                     _usb_file_size_high:	
   450  0053                     	ds	1
   451  0054                     _tape_size_low:	
   452  0054                     	ds	1
   453  0055                     _tape_size_high:	
   454  0055                     	ds	1
   455  0056                     _gen_count4:	
   456  0056                     	ds	1
   457  0057                     _gen_count3:	
   458  0057                     	ds	1
   459  0058                     _gen_count2:	
   460  0058                     	ds	1
   461  0059                     _gen_count:	
   462  0059                     	ds	1
   463  005A                     _ldel_count:	
   464  005A                     	ds	1
   465  005B                     _sdel_count:	
   466  005B                     	ds	1
   467  005C                     _ram_address_l:	
   468  005C                     	ds	1
   469  005D                     _ram_address_h:	
   470  005D                     	ds	1
   471  005E                     _temp5:	
   472  005E                     	ds	1
   473  005F                     _temp4:	
   474  005F                     	ds	1
   475  0060                     _temp3:	
   476  0060                     	ds	1
   477                           
   478                           	psect	dataBANK0
   479  0061                     __pdataBANK0:	
   480  0061                     _tape_name:	
   481  0061                     	ds	8
   482                           
   483                           	psect	bssBANK1
   484  00A0                     __pbssBANK1:	
   485  00A0                     _fifo_bank_E:	
   486  00A0                     	ds	32
   487  00C0                     _fifo_bank_D:	
   488  00C0                     	ds	32
   489                           
   490                           	psect	bssBANK3
   491  0190                     __pbssBANK3:	
   492  0190                     _fifo_bank_A:	
   493  0190                     	ds	64
   494  01D0                     _fifo_bank_F:	
   495  01D0                     	ds	32
   496                           
   497                           	psect	bssBANK2
   498  0110                     __pbssBANK2:	
   499  0110                     _fifo_bank_B:	
   500  0110                     	ds	64
   501                           
   502                           	psect	clrtext
   503  01F4                     clear_ram0:	
   504                           ;	Called with FSR containing the base address, and
   505                           ;	W with the last address+1
   506                           
   507  01F4  0064               	clrwdt	;clear the watchdog before getting into this loop
   508  01F5                     clrloop0:	
   509  01F5  0180               	clrf	0	;clear RAM location pointed to by FSR
   510  01F6  0A84               	incf	4,f	;increment pointer
   511  01F7  0604               	xorwf	4,w	;XOR with final address
   512  01F8  1903               	btfsc	3,2	;have we reached the end yet?
   513  01F9  3400               	retlw	0	;all done for this memory range, return
   514  01FA  0604               	xorwf	4,w	;XOR again to restore value
   515  01FB  29F5               	goto	clrloop0	;do the next byte
   516                           
   517                           	psect	cstackBANK1
   518  00E0                     __pcstackBANK1:	
   519  00E0                     print_string_lcd@string:	
   520  00E0                     print_string_serial@i:	
   521                           ; 1 bytes @ 0x0
   522                           
   523                           
   524                           ; 1 bytes @ 0x0
   525  00E0                     	ds	1
   526  00E1                     print_string_lcd@i:	
   527  00E1                     print_string_serial@string:	
   528                           ; 1 bytes @ 0x1
   529                           
   530                           
   531                           ; 1 bytes @ 0x1
   532  00E1                     	ds	1
   533  00E2                     ??_usb_autoconfig:	
   534                           
   535                           ; 1 bytes @ 0x2
   536  00E2                     	ds	1
   537  00E3                     usb_autoconfig@temp:	
   538                           
   539                           ; 1 bytes @ 0x3
   540  00E3                     	ds	1
   541  00E4                     ??_main:	
   542                           
   543                           ; 1 bytes @ 0x4
   544  00E4                     	ds	1
   545  00E5                     main@state:	
   546                           
   547                           ; 1 bytes @ 0x5
   548  00E5                     	ds	1
   549  00E6                     main@temp:	
   550                           
   551                           ; 1 bytes @ 0x6
   552  00E6                     	ds	1
   553                           
   554                           	psect	cstackCOMMON
   555  0077                     __pcstackCOMMON:	
   556  0077                     ?_lcd_putc:	
   557  0077                     ??_lcd_putc:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0077                     ?_uart_send:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0077                     ??_uart_send:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0077                     ?_usb_disk_capacity:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0077                     ??_usb_disk_capacity:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0077                     ?_usb_disk_query:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0077                     ??_usb_disk_query:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0077                     ?_usb_check_exists:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0077                     ??_usb_check_exists:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0077                     ?_usb_get_version:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0077                     ??_usb_get_version:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0077                     ?_usb_set_mode:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0077                     ??_usb_set_mode:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0077                     ?_delay_millis:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0077                     ??_delay_millis:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0077                     ?_usb_disk_connect:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0077                     ??_usb_disk_connect:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0077                     ?_usb_disk_mount:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0077                     ??_usb_disk_mount:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0077                     ?_usb_get_status:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0077                     ??_usb_get_status:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0077                     ?_initialize:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0077                     ??_initialize:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0077                     ?_usb_reset_all:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0077                     ??_usb_reset_all:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0077                     ?_lcd_line2:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0077                     ??_lcd_line2:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0077                     ?_uart_read:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0077                     ??_uart_read:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0077                     ?_usb_set_file_name:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0077                     ??_usb_set_file_name:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0077                     ?_print_name:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0077                     ??_print_name:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0077                     ?_usb_file_open:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0077                     ??_usb_file_open:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0077                     ?_usb_file_close:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0077                     ??_usb_file_close:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0077                     ?_usb_get_file_size:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0077                     ??_usb_get_file_size:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0077                     ?_lcd_clear2:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0077                     ??_lcd_clear2:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0077                     ?_fifo_push:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0077                     ??_fifo_push:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0077                     ?_fifo_pop:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0077                     ?_byte_to_hex:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0077                     ?_print_string_lcd:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0077                     ?_print_string_serial:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0077                     ?_print_capacity:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0077                     ??_print_capacity:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0077                     ?_print_query:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0077                     ??_print_query:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0077                     ?_usb_autoconfig:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0077                     ?_main:	
   714                           ; 1 bytes @ 0x0
   715                           
   716                           
   717                           ; 1 bytes @ 0x0
   718  0077                     	ds	1
   719  0078                     fifo_push@data:	
   720                           
   721                           ; 1 bytes @ 0x1
   722  0078                     	ds	1
   723  0079                     ??_fifo_pop:	
   724                           
   725                           ; 1 bytes @ 0x2
   726  0079                     	ds	1
   727  007A                     fifo_pop@temp:	
   728                           
   729                           ; 1 bytes @ 0x3
   730  007A                     	ds	1
   731                           
   732                           	psect	cstackBANK0
   733  0069                     __pcstackBANK0:	
   734  0069                     ??_byte_to_hex:	
   735                           
   736                           ; 1 bytes @ 0x0
   737  0069                     	ds	2
   738  006B                     byte_to_hex@data:	
   739                           
   740                           ; 1 bytes @ 0x2
   741  006B                     	ds	1
   742  006C                     ??_print_string_lcd:	
   743  006C                     ??_print_string_serial:	
   744                           ; 1 bytes @ 0x3
   745                           
   746                           
   747                           ; 1 bytes @ 0x3
   748  006C                     	ds	1
   749                           
   750                           	psect	maintext
   751  043F                     __pmaintext:	
   752 ;;
   753 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   754 ;;
   755 ;; *************** function _main *****************
   756 ;; Defined at:
   757 ;;		line 310 in file "main.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  temp            1    6[BANK1 ] unsigned char 
   762 ;;  state           1    5[BANK1 ] unsigned char 
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : B00/0
   769 ;;		On exit  : 300/100
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   772 ;;      Params:         0       0       0       0       0
   773 ;;      Locals:         0       0       2       0       0
   774 ;;      Temps:          0       0       1       0       0
   775 ;;      Totals:         0       0       3       0       0
   776 ;;Total ram usage:        3 bytes
   777 ;; Hardware stack levels required when called:    6
   778 ;; This function calls:
   779 ;;		_byte_to_hex
   780 ;;		_delay_millis
   781 ;;		_initialize
   782 ;;		_lcd_clear2
   783 ;;		_lcd_line2
   784 ;;		_lcd_putc
   785 ;;		_print_capacity
   786 ;;		_print_name
   787 ;;		_print_query
   788 ;;		_print_string_lcd
   789 ;;		_print_string_serial
   790 ;;		_uart_read
   791 ;;		_uart_send
   792 ;;		_usb_autoconfig
   793 ;;		_usb_disk_connect
   794 ;;		_usb_disk_mount
   795 ;;		_usb_file_close
   796 ;;		_usb_file_open
   797 ;;		_usb_get_file_size
   798 ;;		_usb_get_status
   799 ;;		_usb_get_version
   800 ;;		_usb_reset_all
   801 ;;		_usb_set_file_name
   802 ;;		_usb_set_mode
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function _main
   810  043F                     _main:	
   811                           
   812                           ;main.c: 312: unsigned char state = 0;
   813                           
   814                           ;incstack = 0
   815                           ; Regs used in _main: [allreg]
   816  043F  1683               	bsf	3,5	;RP0=1, select bank1
   817  0440  01E5               	clrf	main@state^(0+128)
   818                           
   819                           ;main.c: 313: initialize();
   820  0441  118A  2549  118A   	fcall	_initialize
   821                           
   822                           ;main.c: 314: usb_reset_all();
   823  0444  118A  26A2  118A   	fcall	_usb_reset_all
   824                           
   825                           ;main.c: 315: delay_millis(100);
   826  0447  3064               	movlw	100
   827  0448  118A  267D  118A   	fcall	_delay_millis
   828                           
   829                           ;main.c: 316: usb_autoconfig();
   830  044B  118A  23B9  118A   	fcall	_usb_autoconfig
   831                           
   832                           ;main.c: 319: print_string_lcd("Dragons");
   833  044E  3091               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   834  044F  118A  2222  118A   	fcall	_print_string_lcd
   835                           
   836                           ;main.c: 320: lcd_line2();
   837  0452  118A  261D  118A   	fcall	_lcd_line2
   838                           
   839                           ;main.c: 322: print_string_serial("deadbeef\n");
   840  0455  3074               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   841  0456  118A  2204  118A   	fcall	_print_string_serial
   842                           
   843                           ;main.c: 329: switch(state)
   844  0459  2D2E               	goto	l2121
   845  045A                     l2123:	
   846                           
   847                           ;main.c: 332: if(temp == 0xDE)
   848  045A  30DE               	movlw	222
   849  045B  0666               	xorwf	main@temp^(0+128),w
   850  045C  1D03               	btfss	3,2
   851  045D  2D2E               	goto	l2121
   852                           
   853                           ;main.c: 333: state = 1;
   854  045E  01E5               	clrf	main@state^(0+128)
   855  045F  0AE5               	incf	main@state^(0+128),f
   856  0460  2D2E               	goto	l2121
   857  0461                     l2127:	
   858                           
   859                           ;main.c: 336: if(temp == 0xAD)
   860  0461  30AD               	movlw	173
   861  0462  0666               	xorwf	main@temp^(0+128),w
   862  0463  1D03               	btfss	3,2
   863  0464  2C67               	goto	l2131
   864                           
   865                           ;main.c: 337: state = 2;
   866  0465  3002               	movlw	2
   867  0466  2C78               	goto	L2
   868  0467                     l2131:	
   869                           
   870                           ;main.c: 338: else;main.c: 339: state = 0;
   871  0467  01E5               	clrf	main@state^(0+128)
   872  0468  2D2E               	goto	l2121
   873  0469                     l2133:	
   874                           
   875                           ;main.c: 342: if(temp == 0xBE)
   876  0469  30BE               	movlw	190
   877  046A  0666               	xorwf	main@temp^(0+128),w
   878  046B  1D03               	btfss	3,2
   879  046C  2C67               	goto	l2131
   880                           
   881                           ;main.c: 343: state = 3;
   882  046D  3003               	movlw	3
   883  046E  2C78               	goto	L2
   884  046F                     l2139:	
   885                           
   886                           ;main.c: 348: if(temp == 0xEF)
   887  046F  30EF               	movlw	239
   888  0470  0666               	xorwf	main@temp^(0+128),w
   889  0471  1D03               	btfss	3,2
   890  0472  2C77               	goto	l2143
   891                           
   892                           ;main.c: 349: print_string_serial(str_cmd_mode);
   893  0473  3011               	movlw	(low ((_str_cmd_mode-__stringbase)| (0+32768)))& (0+255)
   894  0474  118A  2204  118A   	fcall	_print_string_serial
   895  0477                     l2143:	
   896                           
   897                           ;main.c: 350: state = 4;
   898  0477  3004               	movlw	4
   899  0478                     L2:	
   900  0478  00E4               	movwf	??_main^(0+128)
   901  0479  0864               	movf	??_main^(0+128),w
   902  047A  00E5               	movwf	main@state^(0+128)
   903                           
   904                           ;main.c: 351: break;
   905  047B  2D2E               	goto	l2121
   906  047C                     l2145:	
   907                           
   908                           ;main.c: 356: usb_reset_all();
   909  047C  118A  26A2  118A   	fcall	_usb_reset_all
   910                           
   911                           ;main.c: 357: break;
   912  047F  2D15               	goto	l2187
   913  0480                     l2147:	
   914                           
   915                           ;main.c: 359: usb_autoconfig();
   916  0480  118A  23B9  118A   	fcall	_usb_autoconfig
   917                           
   918                           ;main.c: 360: break;
   919  0483  2D15               	goto	l2187
   920  0484                     l2149:	
   921                           
   922                           ;main.c: 362: temp = usb_get_version();
   923  0484  118A  2718  118A   	fcall	_usb_get_version
   924  0487  2CA2               	goto	L3
   925  0488                     l2151:	
   926                           ;main.c: 363: break;
   927                           
   928                           
   929                           ;main.c: 365: usb_set_mode(0x05);
   930  0488  3005               	movlw	5
   931  0489  118A  2710  118A   	fcall	_usb_set_mode
   932                           
   933                           ;main.c: 366: break;
   934  048C  2D15               	goto	l2187
   935  048D                     l2153:	
   936                           
   937                           ;main.c: 368: usb_set_mode(0x06);
   938  048D  3006               	movlw	6
   939  048E  118A  2710  118A   	fcall	_usb_set_mode
   940                           
   941                           ;main.c: 369: break;
   942  0491  2D15               	goto	l2187
   943  0492                     l2155:	
   944                           
   945                           ;main.c: 371: usb_set_mode(0x07);
   946  0492  3007               	movlw	7
   947  0493  118A  2710  118A   	fcall	_usb_set_mode
   948                           
   949                           ;main.c: 372: break;
   950  0496  2D15               	goto	l2187
   951  0497                     l2157:	
   952                           
   953                           ;main.c: 374: usb_disk_connect();
   954  0497  118A  270B  118A   	fcall	_usb_disk_connect
   955                           
   956                           ;main.c: 375: break;
   957  049A  2D15               	goto	l2187
   958  049B                     l2159:	
   959                           
   960                           ;main.c: 377: usb_disk_mount();
   961  049B  118A  2706  118A   	fcall	_usb_disk_mount
   962                           
   963                           ;main.c: 378: break;
   964  049E  2D15               	goto	l2187
   965  049F                     l2161:	
   966                           
   967                           ;main.c: 380: temp = usb_get_status();
   968  049F  118A  26FF  118A   	fcall	_usb_get_status
   969  04A2                     L3:	
   970  04A2  1683               	bsf	3,5	;RP0=1, select bank1
   971  04A3  1303               	bcf	3,6	;RP1=0, select bank1
   972  04A4  00E4               	movwf	??_main^(0+128)
   973  04A5  0864               	movf	??_main^(0+128),w
   974  04A6  00E6               	movwf	main@temp^(0+128)
   975                           
   976                           ;main.c: 381: break;
   977  04A7  2D15               	goto	l2187
   978  04A8                     l2163:	
   979                           
   980                           ;main.c: 383: print_query();
   981  04A8  118A  2343  118A   	fcall	_print_query
   982                           
   983                           ;main.c: 384: break;
   984  04AB  2D15               	goto	l2187
   985  04AC                     l2165:	
   986                           
   987                           ;main.c: 386: print_capacity();
   988  04AC  118A  2263  118A   	fcall	_print_capacity
   989                           
   990                           ;main.c: 387: break;
   991  04AF  2D15               	goto	l2187
   992  04B0                     l2167:	
   993                           
   994                           ;main.c: 389: usb_set_file_name();
   995  04B0  118A  26A7  118A   	fcall	_usb_set_file_name
   996                           
   997                           ;main.c: 390: print_name();
   998  04B3  118A  264E  118A   	fcall	_print_name
   999                           
  1000                           ;main.c: 391: break;
  1001  04B6  2D15               	goto	l2187
  1002  04B7                     l2169:	
  1003                           
  1004                           ;main.c: 393: usb_file_open();
  1005  04B7  118A  26BA  118A   	fcall	_usb_file_open
  1006                           
  1007                           ;main.c: 394: break;
  1008  04BA  2D15               	goto	l2187
  1009  04BB                     l2171:	
  1010                           
  1011                           ;main.c: 396: usb_file_close();
  1012  04BB  118A  26BF  118A   	fcall	_usb_file_close
  1013                           
  1014                           ;main.c: 397: break;
  1015  04BE  2D15               	goto	l2187
  1016  04BF                     l2173:	
  1017                           
  1018                           ;main.c: 399: usb_get_file_size();
  1019  04BF  118A  26E4  118A   	fcall	_usb_get_file_size
  1020                           
  1021                           ;main.c: 400: print_string_serial("File size: ");
  1022  04C2  3068               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1023  04C3  118A  2204  118A   	fcall	_print_string_serial
  1024                           
  1025                           ;main.c: 401: byte_to_hex(usb_file_size_high);
  1026  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  1027  04C7  0853               	movf	_usb_file_size_high,w
  1028  04C8  118A  2240  118A   	fcall	_byte_to_hex
  1029                           
  1030                           ;main.c: 402: uart_send(hex_char_high);
  1031  04CB  0876               	movf	_hex_char_high,w
  1032  04CC  118A  2584  118A   	fcall	_uart_send
  1033                           
  1034                           ;main.c: 403: uart_send(hex_char_low);
  1035  04CF  0875               	movf	_hex_char_low,w
  1036  04D0  118A  2584  118A   	fcall	_uart_send
  1037                           
  1038                           ;main.c: 404: byte_to_hex(usb_file_size_low);
  1039  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  1040  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  1041  04D5  0852               	movf	_usb_file_size_low,w
  1042  04D6  118A  2240  118A   	fcall	_byte_to_hex
  1043                           
  1044                           ;main.c: 405: uart_send(hex_char_high);
  1045  04D9  0876               	movf	_hex_char_high,w
  1046  04DA  118A  2584  118A   	fcall	_uart_send
  1047                           
  1048                           ;main.c: 406: uart_send(hex_char_low);
  1049  04DD  0875               	movf	_hex_char_low,w
  1050  04DE  118A  2584  118A   	fcall	_uart_send
  1051                           
  1052                           ;main.c: 407: uart_send('\n');
  1053  04E1  300A               	movlw	10
  1054  04E2  118A  2584  118A   	fcall	_uart_send
  1055                           
  1056                           ;main.c: 408: break;
  1057  04E5  2D15               	goto	l2187
  1058  04E6                     l2185:	
  1059  04E6  0866               	movf	main@temp^(0+128),w
  1060                           
  1061                           ; Switch size 1, requested type "simple"
  1062                           ; Number of cases is 15, Range of values is 0 to 14
  1063                           ; switch strategies available:
  1064                           ; Name         Instructions Cycles
  1065                           ; direct_byte           37     7 (fixed)
  1066                           ; simple_byte           46    24 (average)
  1067                           ; jumptable            260     6 (fixed)
  1068                           ;	Chosen strategy is simple_byte
  1069  04E7  3A00               	xorlw	0	; case 0
  1070  04E8  1903               	skipnz
  1071  04E9  2C7C               	goto	l2145
  1072  04EA  3A01               	xorlw	1	; case 1
  1073  04EB  1903               	skipnz
  1074  04EC  2C80               	goto	l2147
  1075  04ED  3A03               	xorlw	3	; case 2
  1076  04EE  1903               	skipnz
  1077  04EF  2C84               	goto	l2149
  1078  04F0  3A01               	xorlw	1	; case 3
  1079  04F1  1903               	skipnz
  1080  04F2  2C88               	goto	l2151
  1081  04F3  3A07               	xorlw	7	; case 4
  1082  04F4  1903               	skipnz
  1083  04F5  2C8D               	goto	l2153
  1084  04F6  3A01               	xorlw	1	; case 5
  1085  04F7  1903               	skipnz
  1086  04F8  2C92               	goto	l2155
  1087  04F9  3A03               	xorlw	3	; case 6
  1088  04FA  1903               	skipnz
  1089  04FB  2C97               	goto	l2157
  1090  04FC  3A01               	xorlw	1	; case 7
  1091  04FD  1903               	skipnz
  1092  04FE  2C9B               	goto	l2159
  1093  04FF  3A0F               	xorlw	15	; case 8
  1094  0500  1903               	skipnz
  1095  0501  2C9F               	goto	l2161
  1096  0502  3A01               	xorlw	1	; case 9
  1097  0503  1903               	skipnz
  1098  0504  2CA8               	goto	l2163
  1099  0505  3A03               	xorlw	3	; case 10
  1100  0506  1903               	skipnz
  1101  0507  2CAC               	goto	l2165
  1102  0508  3A01               	xorlw	1	; case 11
  1103  0509  1903               	skipnz
  1104  050A  2CB0               	goto	l2167
  1105  050B  3A07               	xorlw	7	; case 12
  1106  050C  1903               	skipnz
  1107  050D  2CB7               	goto	l2169
  1108  050E  3A01               	xorlw	1	; case 13
  1109  050F  1903               	skipnz
  1110  0510  2CBB               	goto	l2171
  1111  0511  3A03               	xorlw	3	; case 14
  1112  0512  1903               	skipnz
  1113  0513  2CBF               	goto	l2173
  1114  0514  2D15               	goto	l2187
  1115  0515                     l2187:	
  1116                           
  1117                           ;main.c: 410: byte_to_hex(temp);
  1118  0515  1683               	bsf	3,5	;RP0=1, select bank1
  1119  0516  1303               	bcf	3,6	;RP1=0, select bank1
  1120  0517  0866               	movf	main@temp^(0+128),w
  1121  0518  118A  2240  118A   	fcall	_byte_to_hex
  1122                           
  1123                           ;main.c: 411: uart_send(hex_char_high);
  1124  051B  0876               	movf	_hex_char_high,w
  1125  051C  118A  2584  118A   	fcall	_uart_send
  1126                           
  1127                           ;main.c: 412: uart_send(hex_char_low);
  1128  051F  0875               	movf	_hex_char_low,w
  1129  0520  118A  2584  118A   	fcall	_uart_send
  1130                           
  1131                           ;main.c: 413: lcd_clear2();
  1132  0523  118A  2636  118A   	fcall	_lcd_clear2
  1133                           
  1134                           ;main.c: 414: lcd_putc(hex_char_high);
  1135  0526  0876               	movf	_hex_char_high,w
  1136  0527  118A  25EA  118A   	fcall	_lcd_putc
  1137                           
  1138                           ;main.c: 415: lcd_putc(hex_char_low);
  1139  052A  0875               	movf	_hex_char_low,w
  1140  052B  118A  25EA  118A   	fcall	_lcd_putc
  1141  052E                     l2121:	
  1142                           ;main.c: 416: break;
  1143                           
  1144                           
  1145                           ;main.c: 326: {;main.c: 327: temp = uart_read();
  1146  052E  118A  2580  118A   	fcall	_uart_read
  1147  0531  1683               	bsf	3,5	;RP0=1, select bank1
  1148  0532  1303               	bcf	3,6	;RP1=0, select bank1
  1149  0533  00E4               	movwf	??_main^(0+128)
  1150  0534  0864               	movf	??_main^(0+128),w
  1151  0535  00E6               	movwf	main@temp^(0+128)
  1152  0536  0865               	movf	main@state^(0+128),w
  1153                           
  1154                           ; Switch size 1, requested type "simple"
  1155                           ; Number of cases is 5, Range of values is 0 to 4
  1156                           ; switch strategies available:
  1157                           ; Name         Instructions Cycles
  1158                           ; simple_byte           16     9 (average)
  1159                           ; direct_byte           17     7 (fixed)
  1160                           ; jumptable            260     6 (fixed)
  1161                           ;	Chosen strategy is simple_byte
  1162  0537  3A00               	xorlw	0	; case 0
  1163  0538  1903               	skipnz
  1164  0539  2C5A               	goto	l2123
  1165  053A  3A01               	xorlw	1	; case 1
  1166  053B  1903               	skipnz
  1167  053C  2C61               	goto	l2127
  1168  053D  3A03               	xorlw	3	; case 2
  1169  053E  1903               	skipnz
  1170  053F  2C69               	goto	l2133
  1171  0540  3A01               	xorlw	1	; case 3
  1172  0541  1903               	skipnz
  1173  0542  2C6F               	goto	l2139
  1174  0543  3A07               	xorlw	7	; case 4
  1175  0544  1903               	skipnz
  1176  0545  2CE6               	goto	l2185
  1177  0546  2D2E               	goto	l2121
  1178  0547  118A  2800         	ljmp	start
  1179  0549                     __end_of_main:	
  1180                           
  1181                           	psect	text1
  1182  03B9                     __ptext1:	
  1183 ;; *************** function _usb_autoconfig *****************
  1184 ;; Defined at:
  1185 ;;		line 269 in file "main.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  temp            1    3[BANK1 ] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/100
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1199 ;;      Params:         0       0       0       0       0
  1200 ;;      Locals:         0       0       1       0       0
  1201 ;;      Temps:          0       0       1       0       0
  1202 ;;      Totals:         0       0       2       0       0
  1203 ;;Total ram usage:        2 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    5
  1206 ;; This function calls:
  1207 ;;		_byte_to_hex
  1208 ;;		_delay_millis
  1209 ;;		_print_query
  1210 ;;		_print_string_serial
  1211 ;;		_uart_send
  1212 ;;		_usb_check_exists
  1213 ;;		_usb_disk_connect
  1214 ;;		_usb_disk_mount
  1215 ;;		_usb_get_status
  1216 ;;		_usb_get_version
  1217 ;;		_usb_set_mode
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function _usb_autoconfig
  1225  03B9                     _usb_autoconfig:	
  1226                           
  1227                           ;main.c: 271: unsigned char temp;;main.c: 272: print_string_serial("USB Autoconfig:\n");
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in _usb_autoconfig: [allreg]
  1231  03B9  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1232  03BA  118A  2204  118A   	fcall	_print_string_serial
  1233                           
  1234                           ;main.c: 273: temp = usb_check_exists(0x55);
  1235  03BD  3055               	movlw	85
  1236  03BE  118A  26F5  118A   	fcall	_usb_check_exists
  1237  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1238  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1239  03C3  00E2               	movwf	??_usb_autoconfig^(0+128)
  1240  03C4  0862               	movf	??_usb_autoconfig^(0+128),w
  1241  03C5  00E3               	movwf	usb_autoconfig@temp^(0+128)
  1242                           
  1243                           ;main.c: 274: byte_to_hex(temp);
  1244  03C6  0863               	movf	usb_autoconfig@temp^(0+128),w
  1245  03C7  118A  2240  118A   	fcall	_byte_to_hex
  1246                           
  1247                           ;main.c: 275: uart_send(hex_char_high);
  1248  03CA  0876               	movf	_hex_char_high,w
  1249  03CB  118A  2584  118A   	fcall	_uart_send
  1250                           
  1251                           ;main.c: 276: uart_send(hex_char_low);
  1252  03CE  0875               	movf	_hex_char_low,w
  1253  03CF  118A  2584  118A   	fcall	_uart_send
  1254                           
  1255                           ;main.c: 277: uart_send('\n');
  1256  03D2  300A               	movlw	10
  1257  03D3  118A  2584  118A   	fcall	_uart_send
  1258                           
  1259                           ;main.c: 279: temp = usb_get_version();
  1260  03D6  118A  2718  118A   	fcall	_usb_get_version
  1261  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  1262  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  1263  03DB  00E2               	movwf	??_usb_autoconfig^(0+128)
  1264  03DC  0862               	movf	??_usb_autoconfig^(0+128),w
  1265  03DD  00E3               	movwf	usb_autoconfig@temp^(0+128)
  1266                           
  1267                           ;main.c: 280: byte_to_hex(temp);
  1268  03DE  0863               	movf	usb_autoconfig@temp^(0+128),w
  1269  03DF  118A  2240  118A   	fcall	_byte_to_hex
  1270                           
  1271                           ;main.c: 281: print_string_serial("Version: ");
  1272  03E2  307E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1273  03E3  118A  2204  118A   	fcall	_print_string_serial
  1274                           
  1275                           ;main.c: 282: uart_send(hex_char_high);
  1276  03E6  0876               	movf	_hex_char_high,w
  1277  03E7  118A  2584  118A   	fcall	_uart_send
  1278                           
  1279                           ;main.c: 283: uart_send(hex_char_low);
  1280  03EA  0875               	movf	_hex_char_low,w
  1281  03EB  118A  2584  118A   	fcall	_uart_send
  1282                           
  1283                           ;main.c: 284: uart_send('\n');
  1284  03EE  300A               	movlw	10
  1285  03EF  118A  2584  118A   	fcall	_uart_send
  1286                           
  1287                           ;main.c: 286: usb_set_mode(0x05);
  1288  03F2  3005               	movlw	5
  1289  03F3  118A  2710  118A   	fcall	_usb_set_mode
  1290                           
  1291                           ;main.c: 287: delay_millis(1);
  1292  03F6  3001               	movlw	1
  1293  03F7  118A  267D  118A   	fcall	_delay_millis
  1294                           
  1295                           ;main.c: 288: usb_set_mode(0x07);
  1296  03FA  3007               	movlw	7
  1297  03FB  118A  2710  118A   	fcall	_usb_set_mode
  1298                           
  1299                           ;main.c: 289: delay_millis(1);
  1300  03FE  3001               	movlw	1
  1301  03FF  118A  267D  118A   	fcall	_delay_millis
  1302                           
  1303                           ;main.c: 290: usb_set_mode(0x06);
  1304  0402  3006               	movlw	6
  1305  0403  118A  2710  118A   	fcall	_usb_set_mode
  1306                           
  1307                           ;main.c: 291: delay_millis(1);
  1308  0406  3001               	movlw	1
  1309  0407  118A  267D  118A   	fcall	_delay_millis
  1310                           
  1311                           ;main.c: 292: usb_disk_connect();
  1312  040A  118A  270B  118A   	fcall	_usb_disk_connect
  1313                           
  1314                           ;main.c: 293: delay_millis(250);
  1315  040D  30FA               	movlw	250
  1316  040E  118A  267D  118A   	fcall	_delay_millis
  1317                           
  1318                           ;main.c: 294: delay_millis(250);
  1319  0411  30FA               	movlw	250
  1320  0412  118A  267D  118A   	fcall	_delay_millis
  1321                           
  1322                           ;main.c: 295: usb_disk_mount();
  1323  0415  118A  2706  118A   	fcall	_usb_disk_mount
  1324                           
  1325                           ;main.c: 296: delay_millis(250);
  1326  0418  30FA               	movlw	250
  1327  0419  118A  267D  118A   	fcall	_delay_millis
  1328                           
  1329                           ;main.c: 297: delay_millis(250);
  1330  041C  30FA               	movlw	250
  1331  041D  118A  267D  118A   	fcall	_delay_millis
  1332                           
  1333                           ;main.c: 299: temp = usb_get_status();
  1334  0420  118A  26FF  118A   	fcall	_usb_get_status
  1335  0423  1683               	bsf	3,5	;RP0=1, select bank1
  1336  0424  1303               	bcf	3,6	;RP1=0, select bank1
  1337  0425  00E2               	movwf	??_usb_autoconfig^(0+128)
  1338  0426  0862               	movf	??_usb_autoconfig^(0+128),w
  1339  0427  00E3               	movwf	usb_autoconfig@temp^(0+128)
  1340                           
  1341                           ;main.c: 300: byte_to_hex(temp);
  1342  0428  0863               	movf	usb_autoconfig@temp^(0+128),w
  1343  0429  118A  2240  118A   	fcall	_byte_to_hex
  1344                           
  1345                           ;main.c: 301: print_string_serial("Status: ");
  1346  042C  3088               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1347  042D  118A  2204  118A   	fcall	_print_string_serial
  1348                           
  1349                           ;main.c: 302: uart_send(hex_char_high);
  1350  0430  0876               	movf	_hex_char_high,w
  1351  0431  118A  2584  118A   	fcall	_uart_send
  1352                           
  1353                           ;main.c: 303: uart_send(hex_char_low);
  1354  0434  0875               	movf	_hex_char_low,w
  1355  0435  118A  2584  118A   	fcall	_uart_send
  1356                           
  1357                           ;main.c: 304: uart_send('\n');
  1358  0438  300A               	movlw	10
  1359  0439  118A  2584  118A   	fcall	_uart_send
  1360                           
  1361                           ;main.c: 306: print_query();
  1362  043C  118A  2343         	fcall	_print_query
  1363  043E  0008               	return
  1364  043F                     __end_of_usb_autoconfig:	
  1365                           
  1366                           	psect	text2
  1367  0343                     __ptext2:	
  1368 ;; *************** function _print_query *****************
  1369 ;; Defined at:
  1370 ;;		line 237 in file "main.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/100
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         0       0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0
  1387 ;;      Totals:         0       0       0       0       0
  1388 ;;Total ram usage:        0 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    4
  1391 ;; This function calls:
  1392 ;;		_byte_to_hex
  1393 ;;		_print_string_serial
  1394 ;;		_uart_send
  1395 ;;		_usb_disk_query
  1396 ;; This function is called by:
  1397 ;;		_usb_autoconfig
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _print_query
  1404  0343                     _print_query:	
  1405                           
  1406                           ;main.c: 239: usb_disk_query();
  1407                           
  1408                           ;incstack = 0
  1409                           ; Regs used in _print_query: [allreg]
  1410  0343  118A  274D  118A   	fcall	_usb_disk_query
  1411                           
  1412                           ;main.c: 240: print_string_serial("Logical bytes: ");
  1413  0346  304B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1414  0347  118A  2204  118A   	fcall	_print_string_serial
  1415                           
  1416                           ;main.c: 241: byte_to_hex(usb_logical_bytes3);
  1417  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1418  034B  084A               	movf	_usb_logical_bytes3,w
  1419  034C  118A  2240  118A   	fcall	_byte_to_hex
  1420                           
  1421                           ;main.c: 242: uart_send(hex_char_high);
  1422  034F  0876               	movf	_hex_char_high,w
  1423  0350  118A  2584  118A   	fcall	_uart_send
  1424                           
  1425                           ;main.c: 243: uart_send(hex_char_low);
  1426  0353  0875               	movf	_hex_char_low,w
  1427  0354  118A  2584  118A   	fcall	_uart_send
  1428                           
  1429                           ;main.c: 244: byte_to_hex(usb_logical_bytes2);
  1430  0357  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0358  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0359  084B               	movf	_usb_logical_bytes2,w
  1433  035A  118A  2240  118A   	fcall	_byte_to_hex
  1434                           
  1435                           ;main.c: 245: uart_send(hex_char_high);
  1436  035D  0876               	movf	_hex_char_high,w
  1437  035E  118A  2584  118A   	fcall	_uart_send
  1438                           
  1439                           ;main.c: 246: uart_send(hex_char_low);
  1440  0361  0875               	movf	_hex_char_low,w
  1441  0362  118A  2584  118A   	fcall	_uart_send
  1442                           
  1443                           ;main.c: 247: byte_to_hex(usb_logical_bytes1);
  1444  0365  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0366  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0367  084C               	movf	_usb_logical_bytes1,w
  1447  0368  118A  2240  118A   	fcall	_byte_to_hex
  1448                           
  1449                           ;main.c: 248: uart_send(hex_char_high);
  1450  036B  0876               	movf	_hex_char_high,w
  1451  036C  118A  2584  118A   	fcall	_uart_send
  1452                           
  1453                           ;main.c: 249: uart_send(hex_char_low);
  1454  036F  0875               	movf	_hex_char_low,w
  1455  0370  118A  2584  118A   	fcall	_uart_send
  1456                           
  1457                           ;main.c: 250: uart_send('0');
  1458  0373  3030               	movlw	48
  1459  0374  118A  2584  118A   	fcall	_uart_send
  1460                           
  1461                           ;main.c: 251: uart_send('0');
  1462  0377  3030               	movlw	48
  1463  0378  118A  2584  118A   	fcall	_uart_send
  1464                           
  1465                           ;main.c: 252: uart_send('\n');
  1466  037B  300A               	movlw	10
  1467  037C  118A  2584  118A   	fcall	_uart_send
  1468                           
  1469                           ;main.c: 253: print_string_serial("Free bytes: ");
  1470  037F  305B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1471  0380  118A  2204  118A   	fcall	_print_string_serial
  1472                           
  1473                           ;main.c: 254: byte_to_hex(usb_free_space3);
  1474  0383  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0384  084D               	movf	_usb_free_space3,w
  1476  0385  118A  2240  118A   	fcall	_byte_to_hex
  1477                           
  1478                           ;main.c: 255: uart_send(hex_char_high);
  1479  0388  0876               	movf	_hex_char_high,w
  1480  0389  118A  2584  118A   	fcall	_uart_send
  1481                           
  1482                           ;main.c: 256: uart_send(hex_char_low);
  1483  038C  0875               	movf	_hex_char_low,w
  1484  038D  118A  2584  118A   	fcall	_uart_send
  1485                           
  1486                           ;main.c: 257: byte_to_hex(usb_free_space2);
  1487  0390  1283               	bcf	3,5	;RP0=0, select bank0
  1488  0391  1303               	bcf	3,6	;RP1=0, select bank0
  1489  0392  084E               	movf	_usb_free_space2,w
  1490  0393  118A  2240  118A   	fcall	_byte_to_hex
  1491                           
  1492                           ;main.c: 258: uart_send(hex_char_high);
  1493  0396  0876               	movf	_hex_char_high,w
  1494  0397  118A  2584  118A   	fcall	_uart_send
  1495                           
  1496                           ;main.c: 259: uart_send(hex_char_low);
  1497  039A  0875               	movf	_hex_char_low,w
  1498  039B  118A  2584  118A   	fcall	_uart_send
  1499                           
  1500                           ;main.c: 260: byte_to_hex(usb_free_space1);
  1501  039E  1283               	bcf	3,5	;RP0=0, select bank0
  1502  039F  1303               	bcf	3,6	;RP1=0, select bank0
  1503  03A0  084F               	movf	_usb_free_space1,w
  1504  03A1  118A  2240  118A   	fcall	_byte_to_hex
  1505                           
  1506                           ;main.c: 261: uart_send(hex_char_high);
  1507  03A4  0876               	movf	_hex_char_high,w
  1508  03A5  118A  2584  118A   	fcall	_uart_send
  1509                           
  1510                           ;main.c: 262: uart_send(hex_char_low);
  1511  03A8  0875               	movf	_hex_char_low,w
  1512  03A9  118A  2584  118A   	fcall	_uart_send
  1513                           
  1514                           ;main.c: 263: uart_send('0');
  1515  03AC  3030               	movlw	48
  1516  03AD  118A  2584  118A   	fcall	_uart_send
  1517                           
  1518                           ;main.c: 264: uart_send('0');
  1519  03B0  3030               	movlw	48
  1520  03B1  118A  2584  118A   	fcall	_uart_send
  1521                           
  1522                           ;main.c: 265: uart_send('\n');
  1523  03B4  300A               	movlw	10
  1524  03B5  118A  2584  118A   	fcall	_uart_send
  1525  03B8  0008               	return
  1526  03B9                     __end_of_print_query:	
  1527                           
  1528                           	psect	text3
  1529  0222                     __ptext3:	
  1530 ;; *************** function _print_string_lcd *****************
  1531 ;; Defined at:
  1532 ;;		line 187 in file "main.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  string          1    wreg     PTR const unsigned char 
  1535 ;;		 -> STR_7(8), 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  string          1    0[BANK1 ] PTR const unsigned char 
  1538 ;;		 -> STR_7(8), 
  1539 ;;  i               1    1[BANK1 ] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/100
  1546 ;;		On exit  : 300/100
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1549 ;;      Params:         0       0       0       0       0
  1550 ;;      Locals:         0       0       2       0       0
  1551 ;;      Temps:          0       1       0       0       0
  1552 ;;      Totals:         0       1       2       0       0
  1553 ;;Total ram usage:        3 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    3
  1556 ;; This function calls:
  1557 ;;		_lcd_putc
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           
  1564                           ;psect for function _print_string_lcd
  1565  0222                     _print_string_lcd:	
  1566                           
  1567                           ;incstack = 0
  1568                           ; Regs used in _print_string_lcd: [allreg]
  1569                           ;print_string_lcd@string stored from wreg
  1570  0222  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0223  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0224  00E0               	movwf	print_string_lcd@string^(0+128)
  1573                           
  1574                           ;main.c: 189: unsigned char i = 0;
  1575  0225  01E1               	clrf	print_string_lcd@i^(0+128)
  1576  0226                     l2043:	
  1577                           ;main.c: 190: while(string[i])
  1578                           
  1579  0226  0861               	movf	print_string_lcd@i^(0+128),w
  1580  0227  0760               	addwf	print_string_lcd@string^(0+128),w
  1581  0228  0084               	movwf	4
  1582  0229  118A  2002  118A   	fcall	stringdir
  1583  022C  3A00               	xorlw	0
  1584  022D  1903               	btfsc	3,2
  1585  022E  0008               	return
  1586                           
  1587                           ;main.c: 191: {;main.c: 192: lcd_putc(string[i]);
  1588  022F  0861               	movf	print_string_lcd@i^(0+128),w
  1589  0230  0760               	addwf	print_string_lcd@string^(0+128),w
  1590  0231  0084               	movwf	4
  1591  0232  118A  2002  118A   	fcall	stringdir
  1592  0235  118A  25EA  118A   	fcall	_lcd_putc
  1593                           
  1594                           ;main.c: 193: ++i;
  1595  0238  3001               	movlw	1
  1596  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1597  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1598  023B  00EC               	movwf	??_print_string_lcd
  1599  023C  086C               	movf	??_print_string_lcd,w
  1600  023D  1683               	bsf	3,5	;RP0=1, select bank1
  1601  023E  07E1               	addwf	print_string_lcd@i^(0+128),f
  1602  023F  2A26               	goto	l2043
  1603  0240                     __end_of_print_string_lcd:	
  1604                           
  1605                           	psect	text4
  1606  0263                     __ptext4:	
  1607 ;; *************** function _print_capacity *****************
  1608 ;; Defined at:
  1609 ;;		line 219 in file "main.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 200/100
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         0       0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0
  1626 ;;      Totals:         0       0       0       0       0
  1627 ;;Total ram usage:        0 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    4
  1630 ;; This function calls:
  1631 ;;		_byte_to_hex
  1632 ;;		_print_string_serial
  1633 ;;		_uart_send
  1634 ;;		_usb_disk_capacity
  1635 ;; This function is called by:
  1636 ;;		_main
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           
  1641                           ;psect for function _print_capacity
  1642  0263                     _print_capacity:	
  1643                           
  1644                           ;main.c: 221: usb_disk_capacity();
  1645                           
  1646                           ;incstack = 0
  1647                           ; Regs used in _print_capacity: [allreg]
  1648  0263  118A  272D  118A   	fcall	_usb_disk_capacity
  1649                           
  1650                           ;main.c: 222: print_string_serial("Physical bytes: ");
  1651  0266  303A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1652  0267  118A  2204  118A   	fcall	_print_string_serial
  1653                           
  1654                           ;main.c: 223: byte_to_hex(usb_drive_size3);
  1655  026A  0872               	movf	_usb_drive_size3,w
  1656  026B  118A  2240  118A   	fcall	_byte_to_hex
  1657                           
  1658                           ;main.c: 224: uart_send(hex_char_high);
  1659  026E  0876               	movf	_hex_char_high,w
  1660  026F  118A  2584  118A   	fcall	_uart_send
  1661                           
  1662                           ;main.c: 225: uart_send(hex_char_low);
  1663  0272  0875               	movf	_hex_char_low,w
  1664  0273  118A  2584  118A   	fcall	_uart_send
  1665                           
  1666                           ;main.c: 226: byte_to_hex(usb_drive_size2);
  1667  0276  0873               	movf	_usb_drive_size2,w
  1668  0277  118A  2240  118A   	fcall	_byte_to_hex
  1669                           
  1670                           ;main.c: 227: uart_send(hex_char_high);
  1671  027A  0876               	movf	_hex_char_high,w
  1672  027B  118A  2584  118A   	fcall	_uart_send
  1673                           
  1674                           ;main.c: 228: uart_send(hex_char_low);
  1675  027E  0875               	movf	_hex_char_low,w
  1676  027F  118A  2584  118A   	fcall	_uart_send
  1677                           
  1678                           ;main.c: 229: byte_to_hex(usb_drive_size1);
  1679  0282  0874               	movf	_usb_drive_size1,w
  1680  0283  118A  2240  118A   	fcall	_byte_to_hex
  1681                           
  1682                           ;main.c: 230: uart_send(hex_char_high);
  1683  0286  0876               	movf	_hex_char_high,w
  1684  0287  118A  2584  118A   	fcall	_uart_send
  1685                           
  1686                           ;main.c: 231: uart_send(hex_char_low);
  1687  028A  0875               	movf	_hex_char_low,w
  1688  028B  118A  2584  118A   	fcall	_uart_send
  1689                           
  1690                           ;main.c: 232: uart_send('0');
  1691  028E  3030               	movlw	48
  1692  028F  118A  2584  118A   	fcall	_uart_send
  1693                           
  1694                           ;main.c: 233: uart_send('0');
  1695  0292  3030               	movlw	48
  1696  0293  118A  2584  118A   	fcall	_uart_send
  1697                           
  1698                           ;main.c: 234: uart_send('\n');
  1699  0296  300A               	movlw	10
  1700  0297  118A  2584  118A   	fcall	_uart_send
  1701  029A  0008               	return
  1702  029B                     __end_of_print_capacity:	
  1703                           
  1704                           	psect	text5
  1705  0204                     __ptext5:	
  1706 ;; *************** function _print_string_serial *****************
  1707 ;; Defined at:
  1708 ;;		line 198 in file "main.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  string          1    wreg     PTR const unsigned char 
  1711 ;;		 -> STR_9(12), str_cmd_mode(14), STR_8(10), STR_6(9), 
  1712 ;;		 -> STR_5(10), STR_4(17), STR_3(13), STR_2(16), 
  1713 ;;		 -> STR_1(17), str_timeout(10), 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  string          1    1[BANK1 ] PTR const unsigned char 
  1716 ;;		 -> STR_9(12), str_cmd_mode(14), STR_8(10), STR_6(9), 
  1717 ;;		 -> STR_5(10), STR_4(17), STR_3(13), STR_2(16), 
  1718 ;;		 -> STR_1(17), str_timeout(10), 
  1719 ;;  i               1    0[BANK1 ] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/100
  1726 ;;		On exit  : 300/100
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         0       0       0       0       0
  1730 ;;      Locals:         0       0       2       0       0
  1731 ;;      Temps:          0       1       0       0       0
  1732 ;;      Totals:         0       1       2       0       0
  1733 ;;Total ram usage:        3 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    3
  1736 ;; This function calls:
  1737 ;;		_uart_send
  1738 ;; This function is called by:
  1739 ;;		_print_capacity
  1740 ;;		_print_query
  1741 ;;		_usb_autoconfig
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           
  1747                           ;psect for function _print_string_serial
  1748  0204                     _print_string_serial:	
  1749                           
  1750                           ;incstack = 0
  1751                           ; Regs used in _print_string_serial: [allreg]
  1752                           ;print_string_serial@string stored from wreg
  1753  0204  1683               	bsf	3,5	;RP0=1, select bank1
  1754  0205  1303               	bcf	3,6	;RP1=0, select bank1
  1755  0206  00E1               	movwf	print_string_serial@string^(0+128)
  1756                           
  1757                           ;main.c: 200: unsigned char i = 0;
  1758  0207  01E0               	clrf	print_string_serial@i^(0+128)
  1759  0208                     l1999:	
  1760                           ;main.c: 201: while(string[i])
  1761                           
  1762  0208  0860               	movf	print_string_serial@i^(0+128),w
  1763  0209  0761               	addwf	print_string_serial@string^(0+128),w
  1764  020A  0084               	movwf	4
  1765  020B  118A  2002  118A   	fcall	stringdir
  1766  020E  3A00               	xorlw	0
  1767  020F  1903               	btfsc	3,2
  1768  0210  0008               	return
  1769                           
  1770                           ;main.c: 202: {;main.c: 203: uart_send(string[i]);
  1771  0211  0860               	movf	print_string_serial@i^(0+128),w
  1772  0212  0761               	addwf	print_string_serial@string^(0+128),w
  1773  0213  0084               	movwf	4
  1774  0214  118A  2002  118A   	fcall	stringdir
  1775  0217  118A  2584  118A   	fcall	_uart_send
  1776                           
  1777                           ;main.c: 204: ++i;
  1778  021A  3001               	movlw	1
  1779  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1780  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1781  021D  00EC               	movwf	??_print_string_serial
  1782  021E  086C               	movf	??_print_string_serial,w
  1783  021F  1683               	bsf	3,5	;RP0=1, select bank1
  1784  0220  07E0               	addwf	print_string_serial@i^(0+128),f
  1785  0221  2A08               	goto	l1999
  1786  0222                     __end_of_print_string_serial:	
  1787                           
  1788                           	psect	text6
  1789  02E8                     __ptext6:	
  1790 ;; *************** function _fifo_push *****************
  1791 ;; Defined at:
  1792 ;;		line 110 in file "main.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  data            1    wreg     unsigned char 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  data            1    1[COMMON] unsigned char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      unsigned char 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 300/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1806 ;;      Params:         0       0       0       0       0
  1807 ;;      Locals:         1       0       0       0       0
  1808 ;;      Temps:          1       0       0       0       0
  1809 ;;      Totals:         2       0       0       0       0
  1810 ;;Total ram usage:        2 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		Interrupt level 1
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           
  1820                           ;psect for function _fifo_push
  1821  02E8                     _fifo_push:	
  1822                           
  1823                           ;incstack = 0
  1824                           ; Regs used in _fifo_push: [wreg-fsr0h+status,2+status,0]
  1825                           ;fifo_push@data stored from wreg
  1826  02E8  00F8               	movwf	fifo_push@data
  1827                           
  1828                           ;main.c: 112: switch(fifo_write_bank)
  1829  02E9  2B15               	goto	l1055
  1830  02EA                     l1041:	
  1831                           
  1832                           ;main.c: 115: case 1:;main.c: 116: fifo_bank_A[fifo_write_idx & 0x3F] = data;
  1833  02EA  0878               	movf	fifo_push@data,w
  1834  02EB  00F7               	movwf	??_fifo_push
  1835  02EC  0870               	movf	_fifo_write_idx,w
  1836  02ED  393F               	andlw	63
  1837  02EE  3E90               	addlw	(low (_fifo_bank_A| (0+256)))& (0+255)
  1838  02EF  2B10               	goto	L9
  1839  02F0                     l1043:	
  1840                           ;main.c: 117: break;
  1841                           
  1842                           
  1843                           ;main.c: 119: case 3:;main.c: 120: fifo_bank_B[fifo_write_idx & 0x3F] = data;
  1844  02F0  0878               	movf	fifo_push@data,w
  1845  02F1  00F7               	movwf	??_fifo_push
  1846  02F2  0870               	movf	_fifo_write_idx,w
  1847  02F3  393F               	andlw	63
  1848  02F4  3E10               	addlw	(low (_fifo_bank_B| (0+256)))& (0+255)
  1849  02F5  2B10               	goto	L9
  1850  02F6                     l1045:	
  1851                           ;main.c: 121: break;
  1852                           
  1853                           
  1854                           ;main.c: 123: fifo_bank_C[fifo_write_idx & 0x1F] = data;
  1855  02F6  0878               	movf	fifo_push@data,w
  1856  02F7  00F7               	movwf	??_fifo_push
  1857  02F8  0870               	movf	_fifo_write_idx,w
  1858  02F9  391F               	andlw	31
  1859  02FA  3E20               	addlw	(low (_fifo_bank_C| 0))& (0+255)
  1860  02FB  2B07               	goto	L11
  1861  02FC                     l1047:	
  1862                           ;main.c: 124: break;
  1863                           
  1864                           
  1865                           ;main.c: 126: fifo_bank_D[fifo_write_idx & 0x1F] = data;
  1866  02FC  0878               	movf	fifo_push@data,w
  1867  02FD  00F7               	movwf	??_fifo_push
  1868  02FE  0870               	movf	_fifo_write_idx,w
  1869  02FF  391F               	andlw	31
  1870  0300  3EC0               	addlw	(low (_fifo_bank_D| 0))& (0+255)
  1871  0301  2B07               	goto	L11
  1872  0302                     l1049:	
  1873                           ;main.c: 127: break;
  1874                           
  1875                           
  1876                           ;main.c: 129: fifo_bank_E[fifo_write_idx & 0x1F] = data;
  1877  0302  0878               	movf	fifo_push@data,w
  1878  0303  00F7               	movwf	??_fifo_push
  1879  0304  0870               	movf	_fifo_write_idx,w
  1880  0305  391F               	andlw	31
  1881  0306  3EA0               	addlw	(low (_fifo_bank_E| 0))& (0+255)
  1882  0307                     L11:	
  1883  0307  0084               	movwf	4
  1884  0308  0877               	movf	??_fifo_push,w
  1885  0309  1383               	bcf	3,7	;select IRP bank1
  1886  030A  2B13               	goto	L8
  1887  030B                     l1051:	
  1888                           ;main.c: 130: break;
  1889                           
  1890                           
  1891                           ;main.c: 132: fifo_bank_F[fifo_write_idx & 0x1F] = data;
  1892  030B  0878               	movf	fifo_push@data,w
  1893  030C  00F7               	movwf	??_fifo_push
  1894  030D  0870               	movf	_fifo_write_idx,w
  1895  030E  391F               	andlw	31
  1896  030F  3ED0               	addlw	(low (_fifo_bank_F| (0+256)))& (0+255)
  1897  0310                     L9:	
  1898  0310  0084               	movwf	4
  1899  0311  0877               	movf	??_fifo_push,w
  1900  0312  1783               	bsf	3,7	;select IRP bank3
  1901  0313                     L8:	
  1902  0313  0080               	movwf	0
  1903                           
  1904                           ;main.c: 133: break;
  1905  0314  2B31               	goto	l1057
  1906  0315                     l1055:	
  1907  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0317  0841               	movf	_fifo_write_bank,w
  1910                           
  1911                           ; Switch size 1, requested type "simple"
  1912                           ; Number of cases is 8, Range of values is 0 to 7
  1913                           ; switch strategies available:
  1914                           ; Name         Instructions Cycles
  1915                           ; direct_byte           23     7 (fixed)
  1916                           ; simple_byte           25    13 (average)
  1917                           ; jumptable            260     6 (fixed)
  1918                           ;	Chosen strategy is simple_byte
  1919  0318  3A00               	xorlw	0	; case 0
  1920  0319  1903               	skipnz
  1921  031A  2AEA               	goto	l1041
  1922  031B  3A01               	xorlw	1	; case 1
  1923  031C  1903               	skipnz
  1924  031D  2AEA               	goto	l1041
  1925  031E  3A03               	xorlw	3	; case 2
  1926  031F  1903               	skipnz
  1927  0320  2AF0               	goto	l1043
  1928  0321  3A01               	xorlw	1	; case 3
  1929  0322  1903               	skipnz
  1930  0323  2AF0               	goto	l1043
  1931  0324  3A07               	xorlw	7	; case 4
  1932  0325  1903               	skipnz
  1933  0326  2AF6               	goto	l1045
  1934  0327  3A01               	xorlw	1	; case 5
  1935  0328  1903               	skipnz
  1936  0329  2AFC               	goto	l1047
  1937  032A  3A03               	xorlw	3	; case 6
  1938  032B  1903               	skipnz
  1939  032C  2B02               	goto	l1049
  1940  032D  3A01               	xorlw	1	; case 7
  1941  032E  1903               	skipnz
  1942  032F  2B0B               	goto	l1051
  1943  0330  2B31               	goto	l1057
  1944  0331                     l1057:	
  1945                           
  1946                           ;main.c: 135: ++fifo_write_idx;
  1947  0331  3001               	movlw	1
  1948  0332  00F7               	movwf	??_fifo_push
  1949  0333  0877               	movf	??_fifo_push,w
  1950  0334  07F0               	addwf	_fifo_write_idx,f
  1951                           
  1952                           ;main.c: 136: if(!(fifo_write_idx & 0x1F))
  1953  0335  0870               	movf	_fifo_write_idx,w
  1954  0336  391F               	andlw	31
  1955  0337  1D03               	btfss	3,2
  1956  0338  2B3D               	goto	l155
  1957                           
  1958                           ;main.c: 137: {;main.c: 138: ++fifo_write_bank;
  1959  0339  3001               	movlw	1
  1960  033A  00F7               	movwf	??_fifo_push
  1961  033B  0877               	movf	??_fifo_push,w
  1962  033C  07C1               	addwf	_fifo_write_bank,f
  1963  033D                     l155:	
  1964                           
  1965                           ;main.c: 139: };main.c: 140: ++fifo_num_bytes;
  1966  033D  3001               	movlw	1
  1967  033E  00F7               	movwf	??_fifo_push
  1968  033F  0877               	movf	??_fifo_push,w
  1969  0340  07C0               	addwf	_fifo_num_bytes,f
  1970                           
  1971                           ;main.c: 141: return fifo_num_bytes;
  1972  0341  0840               	movf	_fifo_num_bytes,w
  1973  0342  0008               	return
  1974  0343                     __end_of_fifo_push:	
  1975                           
  1976                           	psect	text7
  1977  029B                     __ptext7:	
  1978 ;; *************** function _fifo_pop *****************
  1979 ;; Defined at:
  1980 ;;		line 144 in file "main.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  temp            1    3[COMMON] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      unsigned char 
  1987 ;; Registers used:
  1988 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 300/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1994 ;;      Params:         0       0       0       0       0
  1995 ;;      Locals:         1       0       0       0       0
  1996 ;;      Temps:          1       0       0       0       0
  1997 ;;      Totals:         2       0       0       0       0
  1998 ;;Total ram usage:        2 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; This function calls:
  2001 ;;		Nothing
  2002 ;; This function is called by:
  2003 ;;		Interrupt level 1
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           
  2008                           ;psect for function _fifo_pop
  2009  029B                     _fifo_pop:	
  2010                           
  2011                           ;main.c: 146: unsigned char temp;;main.c: 147: switch(fifo_read_bank)
  2012                           
  2013                           ;incstack = 0
  2014                           ; Regs used in _fifo_pop: [wreg-fsr0h+status,2+status,0]
  2015  029B  2ABC               	goto	l1083
  2016  029C                     l1069:	
  2017                           
  2018                           ;main.c: 150: case 1:;main.c: 151: temp = fifo_bank_A[fifo_read_idx & 0x3F];
  2019  029C  0871               	movf	_fifo_read_idx,w
  2020  029D  393F               	andlw	63
  2021  029E  3E90               	addlw	(low (_fifo_bank_A| (0+256)))& (0+255)
  2022  029F  2AB5               	goto	L17
  2023  02A0                     l1071:	
  2024                           ;main.c: 152: break;
  2025                           
  2026                           
  2027                           ;main.c: 154: case 3:;main.c: 155: temp = fifo_bank_B[fifo_read_idx & 0x3F];
  2028  02A0  0871               	movf	_fifo_read_idx,w
  2029  02A1  393F               	andlw	63
  2030  02A2  3E10               	addlw	(low (_fifo_bank_B| (0+256)))& (0+255)
  2031  02A3  2AB5               	goto	L17
  2032  02A4                     l1073:	
  2033                           ;main.c: 156: break;
  2034                           
  2035                           
  2036                           ;main.c: 158: temp = fifo_bank_C[fifo_read_idx & 0x1F];
  2037  02A4  0871               	movf	_fifo_read_idx,w
  2038  02A5  391F               	andlw	31
  2039  02A6  3E20               	addlw	(low (_fifo_bank_C| 0))& (0+255)
  2040  02A7  2AAF               	goto	L19
  2041  02A8                     l1075:	
  2042                           ;main.c: 159: break;
  2043                           
  2044                           
  2045                           ;main.c: 161: temp = fifo_bank_D[fifo_read_idx & 0x1F];
  2046  02A8  0871               	movf	_fifo_read_idx,w
  2047  02A9  391F               	andlw	31
  2048  02AA  3EC0               	addlw	(low (_fifo_bank_D| 0))& (0+255)
  2049  02AB  2AAF               	goto	L19
  2050  02AC                     l1077:	
  2051                           ;main.c: 162: break;
  2052                           
  2053                           
  2054                           ;main.c: 164: temp = fifo_bank_E[fifo_read_idx & 0x1F];
  2055  02AC  0871               	movf	_fifo_read_idx,w
  2056  02AD  391F               	andlw	31
  2057  02AE  3EA0               	addlw	(low (_fifo_bank_E| 0))& (0+255)
  2058  02AF                     L19:	
  2059  02AF  0084               	movwf	4
  2060  02B0  1383               	bcf	3,7	;select IRP bank1
  2061  02B1  2AB7               	goto	L16
  2062  02B2                     l1079:	
  2063                           ;main.c: 165: break;
  2064                           
  2065                           
  2066                           ;main.c: 167: temp = fifo_bank_F[fifo_read_idx & 0x1F];
  2067  02B2  0871               	movf	_fifo_read_idx,w
  2068  02B3  391F               	andlw	31
  2069  02B4  3ED0               	addlw	(low (_fifo_bank_F| (0+256)))& (0+255)
  2070  02B5                     L17:	
  2071  02B5  0084               	movwf	4
  2072  02B6  1783               	bsf	3,7	;select IRP bank3
  2073  02B7                     L16:	
  2074  02B7  0800               	movf	0,w
  2075  02B8  00F9               	movwf	??_fifo_pop
  2076  02B9  0879               	movf	??_fifo_pop,w
  2077  02BA  00FA               	movwf	fifo_pop@temp
  2078                           
  2079                           ;main.c: 168: break;
  2080  02BB  2AD8               	goto	l1085
  2081  02BC                     l1083:	
  2082  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2083  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2084  02BE  0842               	movf	_fifo_read_bank,w
  2085                           
  2086                           ; Switch size 1, requested type "simple"
  2087                           ; Number of cases is 8, Range of values is 0 to 7
  2088                           ; switch strategies available:
  2089                           ; Name         Instructions Cycles
  2090                           ; direct_byte           23     7 (fixed)
  2091                           ; simple_byte           25    13 (average)
  2092                           ; jumptable            260     6 (fixed)
  2093                           ;	Chosen strategy is simple_byte
  2094  02BF  3A00               	xorlw	0	; case 0
  2095  02C0  1903               	skipnz
  2096  02C1  2A9C               	goto	l1069
  2097  02C2  3A01               	xorlw	1	; case 1
  2098  02C3  1903               	skipnz
  2099  02C4  2A9C               	goto	l1069
  2100  02C5  3A03               	xorlw	3	; case 2
  2101  02C6  1903               	skipnz
  2102  02C7  2AA0               	goto	l1071
  2103  02C8  3A01               	xorlw	1	; case 3
  2104  02C9  1903               	skipnz
  2105  02CA  2AA0               	goto	l1071
  2106  02CB  3A07               	xorlw	7	; case 4
  2107  02CC  1903               	skipnz
  2108  02CD  2AA4               	goto	l1073
  2109  02CE  3A01               	xorlw	1	; case 5
  2110  02CF  1903               	skipnz
  2111  02D0  2AA8               	goto	l1075
  2112  02D1  3A03               	xorlw	3	; case 6
  2113  02D2  1903               	skipnz
  2114  02D3  2AAC               	goto	l1077
  2115  02D4  3A01               	xorlw	1	; case 7
  2116  02D5  1903               	skipnz
  2117  02D6  2AB2               	goto	l1079
  2118  02D7  2AD8               	goto	l1085
  2119  02D8                     l1085:	
  2120                           
  2121                           ;main.c: 170: ++fifo_read_idx;
  2122  02D8  3001               	movlw	1
  2123  02D9  00F9               	movwf	??_fifo_pop
  2124  02DA  0879               	movf	??_fifo_pop,w
  2125  02DB  07F1               	addwf	_fifo_read_idx,f
  2126                           
  2127                           ;main.c: 171: if(!(fifo_read_idx & 0x1F))
  2128  02DC  0871               	movf	_fifo_read_idx,w
  2129  02DD  391F               	andlw	31
  2130  02DE  1D03               	btfss	3,2
  2131  02DF  2AE4               	goto	l169
  2132                           
  2133                           ;main.c: 172: {;main.c: 173: ++fifo_read_bank;
  2134  02E0  3001               	movlw	1
  2135  02E1  00F9               	movwf	??_fifo_pop
  2136  02E2  0879               	movf	??_fifo_pop,w
  2137  02E3  07C2               	addwf	_fifo_read_bank,f
  2138  02E4                     l169:	
  2139                           
  2140                           ;main.c: 174: };main.c: 175: --fifo_num_bytes;
  2141  02E4  3001               	movlw	1
  2142  02E5  02C0               	subwf	_fifo_num_bytes,f
  2143                           
  2144                           ;main.c: 176: return temp;
  2145  02E6  087A               	movf	fifo_pop@temp,w
  2146  02E7  0008               	return
  2147  02E8                     __end_of_fifo_pop:	
  2148                           
  2149                           	psect	text8
  2150  0240                     __ptext8:	
  2151 ;; *************** function _byte_to_hex *****************
  2152 ;; Defined at:
  2153 ;;		line 179 in file "main.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  data            1    wreg     unsigned char 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  data            1    2[BANK0 ] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      void 
  2160 ;; Registers used:
  2161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 300/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2167 ;;      Params:         0       0       0       0       0
  2168 ;;      Locals:         0       1       0       0       0
  2169 ;;      Temps:          0       2       0       0       0
  2170 ;;      Totals:         0       3       0       0       0
  2171 ;;Total ram usage:        3 bytes
  2172 ;; Hardware stack levels used:    2
  2173 ;; Hardware stack levels required when called:    2
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_print_capacity
  2178 ;;		_print_query
  2179 ;;		_usb_autoconfig
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           
  2185                           ;psect for function _byte_to_hex
  2186  0240                     _byte_to_hex:	
  2187                           
  2188                           ;incstack = 0
  2189 ;; using string table level
  2190                           ; Regs used in _byte_to_hex: [wreg-fsr0h+status,2+status,0+pclath]
  2191                           ;byte_to_hex@data stored from wreg
  2192  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2194  0242  00EB               	movwf	byte_to_hex@data
  2195                           
  2196                           ;main.c: 181: hex_char_low = hex_table[data & (unsigned char)0x0F];
  2197  0243  086B               	movf	byte_to_hex@data,w
  2198  0244  390F               	andlw	15
  2199  0245  3E01               	addlw	low ((_hex_table-__stringbase)| (0+32768))
  2200  0246  0084               	movwf	4
  2201  0247  118A  2002  118A   	fcall	stringdir
  2202  024A  00E9               	movwf	??_byte_to_hex
  2203  024B  0869               	movf	??_byte_to_hex,w
  2204  024C  00F5               	movwf	_hex_char_low
  2205                           
  2206                           ;main.c: 182: data = data >> 4;
  2207  024D  086B               	movf	byte_to_hex@data,w
  2208  024E  00E9               	movwf	??_byte_to_hex
  2209  024F  3004               	movlw	4
  2210  0250                     u43_25:	
  2211  0250  1003               	clrc
  2212  0251  0CE9               	rrf	??_byte_to_hex,f
  2213  0252  3EFF               	addlw	-1
  2214  0253  1D03               	skipz
  2215  0254  2A50               	goto	u43_25
  2216  0255  0869               	movf	??_byte_to_hex,w
  2217  0256  00EA               	movwf	??_byte_to_hex+1
  2218  0257  086A               	movf	??_byte_to_hex+1,w
  2219  0258  00EB               	movwf	byte_to_hex@data
  2220                           
  2221                           ;main.c: 183: hex_char_high = hex_table[data & (unsigned char)0x0F];
  2222  0259  086B               	movf	byte_to_hex@data,w
  2223  025A  390F               	andlw	15
  2224  025B  3E01               	addlw	low ((_hex_table-__stringbase)| (0+32768))
  2225  025C  0084               	movwf	4
  2226  025D  118A  2002         	fcall	stringdir
  2227  025F  00E9               	movwf	??_byte_to_hex
  2228  0260  0869               	movf	??_byte_to_hex,w
  2229  0261  00F6               	movwf	_hex_char_high
  2230  0262  0008               	return
  2231  0263                     __end_of_byte_to_hex:	
  2232  007E                     btemp	set	126	;btemp
  2233  007E                     wtemp0	set	126


Data Sizes:
    Strings     112
    Constant    40
    Data        8
    BSS         296
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      11
    BANK0            80      4      77
    BANK1            80      7      71
    BANK3            96      0      96
    BANK2            96      0      64

Pointer List with Targets:

    print_string_serial@string	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_9(CODE[12]), str_cmd_mode(CODE[14]), STR_8(CODE[10]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[17]), STR_3(CODE[13]), STR_2(CODE[16]), 
		 -> STR_1(CODE[17]), str_timeout(CODE[10]), 

    print_string_lcd@string	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_7(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _fifo_push in COMMON

    None.

Critical Paths under _fifo_pop in COMMON

    None.

Critical Paths under _byte_to_hex in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_print_string_lcd
    _main->_print_string_serial
    _usb_autoconfig->_print_string_serial
    _print_query->_print_string_serial
    _print_capacity->_print_string_serial

Critical Paths under _fifo_push in BANK0

    None.

Critical Paths under _fifo_pop in BANK0

    None.

Critical Paths under _byte_to_hex in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_usb_autoconfig
    _usb_autoconfig->_print_string_serial
    _print_query->_print_string_serial
    _print_capacity->_print_string_serial

Critical Paths under _fifo_push in BANK1

    None.

Critical Paths under _fifo_pop in BANK1

    None.

Critical Paths under _byte_to_hex in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fifo_push in BANK3

    None.

Critical Paths under _fifo_pop in BANK3

    None.

Critical Paths under _byte_to_hex in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fifo_push in BANK2

    None.

Critical Paths under _fifo_pop in BANK2

    None.

Critical Paths under _byte_to_hex in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5622
                                              4 BANK1      3     3      0
                        _byte_to_hex
                       _delay_millis
                         _initialize
                         _lcd_clear2
                          _lcd_line2
                           _lcd_putc
                     _print_capacity
                         _print_name
                        _print_query
                   _print_string_lcd
                _print_string_serial
                          _uart_read
                          _uart_send
                     _usb_autoconfig
                   _usb_disk_connect
                     _usb_disk_mount
                     _usb_file_close
                      _usb_file_open
                  _usb_get_file_size
                     _usb_get_status
                    _usb_get_version
                      _usb_reset_all
                  _usb_set_file_name
                       _usb_set_mode
 ---------------------------------------------------------------------------------
 (1) _usb_set_file_name                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_reset_all                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_file_size                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_open                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_close                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_autoconfig                                       2     2      0    2028
                                              2 BANK1      2     2      0
                        _byte_to_hex
                       _delay_millis
                        _print_query
                _print_string_serial
                          _uart_send
                   _usb_check_exists
                   _usb_disk_connect
                     _usb_disk_mount
                     _usb_get_status
                    _usb_get_version
                       _usb_set_mode
 ---------------------------------------------------------------------------------
 (1) _usb_set_mode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_version                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_status                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_disk_mount                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_disk_connect                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _usb_check_exists                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _print_query                                          0     0      0     852
                        _byte_to_hex
                _print_string_serial
                          _uart_send
                     _usb_disk_query
 ---------------------------------------------------------------------------------
 (3) _usb_disk_query                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _delay_millis                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_string_lcd                                     3     3      0     219
                                              3 BANK0      1     1      0
                                              0 BANK1      2     2      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_name                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_capacity                                       0     0      0     852
                        _byte_to_hex
                _print_string_serial
                          _uart_send
                  _usb_disk_capacity
 ---------------------------------------------------------------------------------
 (2) _usb_disk_capacity                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _print_string_serial                                  3     3      0     570
                                              3 BANK0      1     1      0
                                              0 BANK1      2     2      0
                          _uart_send
 ---------------------------------------------------------------------------------
 (2) _uart_send                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _byte_to_hex                                          3     3      0     282
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_line2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_clear2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fifo_push                                            2     2      0     132
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fifo_pop                                             2     2      0      28
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _byte_to_hex                                          3     3      0     282
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _byte_to_hex
   _delay_millis
   _initialize
   _lcd_clear2
   _lcd_line2
   _lcd_putc
   _print_capacity
     _byte_to_hex
     _print_string_serial
       _uart_send
     _uart_send
     _usb_disk_capacity
   _print_name
   _print_query
     _byte_to_hex
     _print_string_serial
       _uart_send
     _uart_send
     _usb_disk_query
   _print_string_lcd
     _lcd_putc
   _print_string_serial
     _uart_send
   _uart_read
   _uart_send
   _usb_autoconfig
     _byte_to_hex
     _delay_millis
     _print_query
       _byte_to_hex
       _print_string_serial
         _uart_send
       _uart_send
       _usb_disk_query
     _print_string_serial
       _uart_send
     _uart_send
     _usb_check_exists
     _usb_disk_connect
     _usb_disk_mount
     _usb_get_status
     _usb_get_version
     _usb_set_mode
   _usb_disk_connect
   _usb_disk_mount
   _usb_file_close
   _usb_file_open
   _usb_get_file_size
   _usb_get_status
   _usb_get_version
   _usb_reset_all
   _usb_set_file_name
   _usb_set_mode

 _fifo_push (ROOT)

 _fifo_pop (ROOT)

 _byte_to_hex (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      60      10      100.0%
BITBANK3            60      0       0       9        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      40      12       66.7%
BITBANK2            60      0       0      11        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      7      47       8       88.8%
BITBANK1            50      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     13F       6        0.0%
ABS                  0      0     13F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 21 19:42:53 2023

                           pc 0002                   __CFG_CP$OFF 0000                            fsr 0004  
               _hex_char_high 0076                 _usb_file_open 06BA                           l155 033D  
                         l169 02E4                           fsr0 0004                           indf 0000  
                __CFG_BORV$42 0000                  __CFG_FOSC$XT 0000           _usb_bytes_read_high 0051  
              _usb_file_close 06BF                  _usb_set_mode 0710                          l1041 02EA  
                        l1051 030B                          l1043 02F0                          l1045 02F6  
                        l1071 02A0                          l1047 02FC                          l1055 0315  
                        l1073 02A4                          l1049 0302                          l1057 0331  
                        l2121 052E                          l1075 02A8                          l1083 02BC  
                        l2043 0226                          l2131 0467                          l2123 045A  
                        l1077 02AC                          l1085 02D8                          l1069 029C  
                        l2133 0469                          l1079 02B2                          l2151 0488  
                        l2143 0477                          l2127 0461                          l2161 049F  
                        l2153 048D                          l2145 047C                          l2171 04BB  
                        l2163 04A8                          l2155 0492                          l2147 0480  
                        l2139 046F                _usb_disk_mount 0706                          l2173 04BF  
                        l2165 04AC                          l2157 0497                          l2149 0484  
                        l2167 04B0                          l2159 049B                          l2185 04E6  
                        l2169 04B7                          l2187 0515                          l1999 0208  
              _usb_disk_query 074D                          STR_1 0041                          STR_2 0052  
                        STR_3 0062                          STR_4 0030                          STR_5 0085  
                        STR_6 008F                          STR_7 0098                          STR_8 007B  
                        STR_9 006F                _usb_get_status 06FF                          _main 043F  
          usb_autoconfig@temp 00E3                          btemp 007E                 __CFG_BOREN$ON 0000  
                        start 0000                 __CFG_IESO$OFF 0000                   _str_timeout 0026  
               __CFG_MCLRE$ON 0000                 _usb_reset_all 06A2                _usb_autoconfig 03B9  
              ?_usb_file_open 0077                         ?_main 0077                  ?_byte_to_hex 0077  
               __CFG_WDTE$OFF 0000                  _str_cmd_mode 0018                         u43_25 0250  
               __CFG_PWRTE$ON 0000             ?_print_string_lcd 0077                __CFG_FCMEN$OFF 0000  
             _usb_get_version 0718            ??_print_string_lcd 006C                         _temp3 0060  
                       _temp4 005F                         _temp5 005E                         pclath 000A  
                       status 0003                         wtemp0 007E               _usb_free_space1 004F  
             _usb_free_space2 004E               _usb_free_space3 004D             _usb_target_status 0049  
             __initialization 07BE        __end_of_usb_autoconfig 043F                ?_usb_reset_all 0077  
                __end_of_main 0549               _usb_drive_size1 0074               _usb_drive_size2 0073  
             _usb_drive_size3 0072             _usb_set_file_name 06A7            ?_usb_set_file_name 0077  
                      ??_main 00E4              _usb_disk_connect 070B               ?_usb_file_close 0077  
         ??_usb_set_file_name 0077               __CFG_CCP2MX$RC1 0000               ?_usb_disk_mount 0077  
             ?_usb_disk_query 0077               ?_usb_get_status 0077   __end_of_print_string_serial 0222  
            __end_of_fifo_pop 02E8               ?_usb_autoconfig 0077               ??_usb_file_open 0077  
            ??_print_capacity 0077               __CFG_BORSEN$OFF 0000       __end_of__initialization 07FD  
                ?_print_query 0077                _tape_size_high 0055               ??_usb_reset_all 0077  
              __pcstackCOMMON 0077                  __pidataBANK0 01FC          __size_of_byte_to_hex 0023  
          __size_of_fifo_push 005B             _usb_disk_capacity 072D            ?_usb_disk_capacity 0077  
                  __pbssBANK0 0020                    __pbssBANK1 00A0                    __pbssBANK2 0110  
                  __pbssBANK3 0190             _usb_file_size_low 0052           ??_usb_disk_capacity 0077  
                _delay_millis 067D             _usb_get_file_size 06E4                    __pmaintext 043F  
          ?_usb_get_file_size 0077                    _gen_count2 0058                    _gen_count3 0057  
                  _gen_count4 0056              ?_usb_get_version 0077           ??_usb_get_file_size 0077  
             byte_to_hex@data 006B                    _lcd_clear2 0636                 _ram_address_h 005D  
               _ram_address_l 005C                     ?_fifo_pop 0077                     ?_lcd_putc 0077  
                  __stringtab 0002                    _ldel_count 005A     __size_of_print_string_lcd 001E  
           __end_of_fifo_push 0343        print_string_lcd@string 00E0             __end_of_hex_table 0018  
            ??_usb_file_close 0077                    _initialize 0549                       __ptext1 03B9  
                     __ptext2 0343                       __ptext3 0222                       __ptext4 0263  
                     __ptext5 0204                       __ptext6 02E8                       __ptext7 029B  
                     __ptext8 0240              ??_usb_disk_mount 0077              ??_usb_disk_query 0077  
            ??_usb_get_status 0077                    _s_reg_high 0048                    _sdel_count 005B  
                  ??_fifo_pop 0079                       clrloop0 01F5                    ??_lcd_putc 0077  
        end_of_initialization 07FD              ??_usb_autoconfig 00E2          __size_of_print_query 0076  
           ?_usb_check_exists 0077            ??_usb_check_exists 0077                    _print_name 064E  
                 ?_lcd_clear2 0077                  _hex_char_low 0075               _fifo_write_bank 0041  
          _usb_bytes_read_low 0050  __size_of_print_string_serial 001E                   ?_initialize 0077  
         start_initialization 07BE                 ?_usb_set_mode 0077              _print_string_lcd 0222  
                 __pdataBANK0 0061                 ??_byte_to_hex 0069                   ?_print_name 0077  
          _usb_file_size_high 0053                 _tape_size_low 0054                   __pbssCOMMON 0070  
                   ___latbits 0001                ??_usb_set_mode 0077          print_string_serial@i 00E0  
               __pcstackBANK0 0069                 __pcstackBANK1 00E0                 _delay_counter 0044  
     __size_of_print_capacity 0038             __size_of_fifo_pop 004D             ?_usb_disk_connect 0077  
          ??_usb_disk_connect 0077                     _gen_count 0059                     _fifo_push 02E8  
                   _lcd_line2 061D            _usb_logical_bytes1 004C            _usb_logical_bytes2 004B  
          _usb_logical_bytes3 004A                     __pstrings 0002                _fifo_read_bank 0042  
                   _hex_table 0008             print_string_lcd@i 00E1                   _fifo_bank_A 0190  
                 _fifo_bank_B 0110                   _fifo_bank_C 0020                   _fifo_bank_D 00C0  
                 _fifo_bank_E 00A0                   _fifo_bank_F 01D0           __end_of_byte_to_hex 0263  
                   _s_reg_low 0047                _fifo_num_bytes 0040                     clear_ram0 01F4  
                   _tape_name 0061                     _uart_read 0580                     _uart_send 0584  
                  ?_fifo_push 0077                    ?_lcd_line2 0077                   __stringbase 0007  
                ??_lcd_clear2 0077                _fifo_write_idx 0070                     main@state 00E5  
         _print_string_serial 0204                 ??_print_query 0077          ?_print_string_serial 0077  
                  ?_uart_read 0077                    ?_uart_send 0077                  ??_initialize 0077  
   print_string_serial@string 00E1            __end_of__stringtab 0008                   _byte_to_hex 0240  
    __end_of_print_string_lcd 0240                      _flag_reg 0043                      _fifo_pop 029B  
              _print_capacity 0263                      _lcd_putc 05EA                 _fifo_read_idx 0071  
        __end_of_str_cmd_mode 0026                 __size_of_main 010A                 ?_delay_millis 0077  
           ??_usb_get_version 0077         ??_print_string_serial 006C           __end_of_print_query 03B9  
     __size_of_usb_autoconfig 0086                   ??_fifo_push 0077                   ??_lcd_line2 0077  
                    main@temp 00E6                  ??_print_name 0077        __end_of_print_capacity 029B  
                    intlevel1 0000                ??_delay_millis 0077                     stringcode 0002  
                 ??_uart_read 0077                   ??_uart_send 0077           __end_of_str_timeout 0030  
                _timeout_high 0046                      stringdir 0002                      stringtab 0002  
             ?_print_capacity 0077              _usb_check_exists 06F5                   _timeout_low 0045  
                 _print_query 0343                  fifo_pop@temp 007A                 fifo_push@data 0078  

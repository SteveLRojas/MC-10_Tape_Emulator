

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 28 20:16:10 2023

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	16F747
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.05
    29                           ; Generated 20/12/2018 GMT
    30                           ; 
    31                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F747 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  018C                     	;# 
   130                           
   131                           	psect	idataBANK0
   132  01AC                     __pidataBANK0:	
   133                           
   134                           ;initializer for _tape_name
   135  01AC  3444               	retlw	68
   136  01AD  3445               	retlw	69
   137  01AE  3452               	retlw	82
   138  01AF  3447               	retlw	71
   139  01B0  3441               	retlw	65
   140  01B1  344E               	retlw	78
   141  01B2  3451               	retlw	81
   142  01B3  3451               	retlw	81
   143                           
   144                           	psect	strings
   145  0002                     __pstrings:	
   146  0002                     stringtab:	
   147  0002                     __stringtab:	
   148  0002                     stringcode:	
   149                           ;	String table - string pointers are 1 byte each
   150                           
   151  0002                     stringdir:	
   152  0002  3000               	movlw	high stringdir
   153  0003  008A               	movwf	10
   154  0004  0804               	movf	4,w
   155  0005  0A84               	incf	4,f
   156  0006  0782               	addwf	2,f
   157  0007                     __stringbase:	
   158  0007  3400               	retlw	0
   159  0008                     __end_of__stringtab:	
   160  0008                     _hex_table:	
   161  0008  3430               	retlw	48
   162  0009  3431               	retlw	49
   163  000A  3432               	retlw	50
   164  000B  3433               	retlw	51
   165  000C  3434               	retlw	52
   166  000D  3435               	retlw	53
   167  000E  3436               	retlw	54
   168  000F  3437               	retlw	55
   169  0010  3438               	retlw	56
   170  0011  3439               	retlw	57
   171  0012  3441               	retlw	65
   172  0013  3442               	retlw	66
   173  0014  3443               	retlw	67
   174  0015  3444               	retlw	68
   175  0016  3445               	retlw	69
   176  0017  3446               	retlw	70
   177  0018                     __end_of_hex_table:	
   178  0018                     _str_cmd_mode:	
   179  0018  3443               	retlw	67
   180  0019  346F               	retlw	111
   181  001A  346D               	retlw	109
   182  001B  346D               	retlw	109
   183  001C  3461               	retlw	97
   184  001D  346E               	retlw	110
   185  001E  3464               	retlw	100
   186  001F  3420               	retlw	32
   187  0020  346D               	retlw	109
   188  0021  346F               	retlw	111
   189  0022  3464               	retlw	100
   190  0023  3465               	retlw	101
   191  0024  340A               	retlw	10
   192  0025  3400               	retlw	0
   193  0026                     __end_of_str_cmd_mode:	
   194  0026                     _str_timeout:	
   195  0026  3454               	retlw	84
   196  0027  3469               	retlw	105
   197  0028  346D               	retlw	109
   198  0029  3465               	retlw	101
   199  002A  346F               	retlw	111
   200  002B  3475               	retlw	117
   201  002C  3474               	retlw	116
   202  002D  343A               	retlw	58
   203  002E  3420               	retlw	32
   204  002F  3400               	retlw	0
   205  0030                     __end_of_str_timeout:	
   206  0030                     STR_4:	
   207  0030  3455               	retlw	85	;'U'
   208  0031  3453               	retlw	83	;'S'
   209  0032  3442               	retlw	66	;'B'
   210  0033  3420               	retlw	32	;' '
   211  0034  3441               	retlw	65	;'A'
   212  0035  3475               	retlw	117	;'u'
   213  0036  3474               	retlw	116	;'t'
   214  0037  346F               	retlw	111	;'o'
   215  0038  3463               	retlw	99	;'c'
   216  0039  346F               	retlw	111	;'o'
   217  003A  346E               	retlw	110	;'n'
   218  003B  3466               	retlw	102	;'f'
   219  003C  3469               	retlw	105	;'i'
   220  003D  3467               	retlw	103	;'g'
   221  003E  343A               	retlw	58	;':'
   222  003F  340A               	retlw	10
   223  0040  3400               	retlw	0
   224  0041                     STR_1:	
   225  0041  3450               	retlw	80	;'P'
   226  0042  3468               	retlw	104	;'h'
   227  0043  3479               	retlw	121	;'y'
   228  0044  3473               	retlw	115	;'s'
   229  0045  3469               	retlw	105	;'i'
   230  0046  3463               	retlw	99	;'c'
   231  0047  3461               	retlw	97	;'a'
   232  0048  346C               	retlw	108	;'l'
   233  0049  3420               	retlw	32	;' '
   234  004A  3462               	retlw	98	;'b'
   235  004B  3479               	retlw	121	;'y'
   236  004C  3474               	retlw	116	;'t'
   237  004D  3465               	retlw	101	;'e'
   238  004E  3473               	retlw	115	;'s'
   239  004F  343A               	retlw	58	;':'
   240  0050  3420               	retlw	32	;' '
   241  0051  3400               	retlw	0
   242  0052                     STR_2:	
   243  0052  344C               	retlw	76	;'L'
   244  0053  346F               	retlw	111	;'o'
   245  0054  3467               	retlw	103	;'g'
   246  0055  3469               	retlw	105	;'i'
   247  0056  3463               	retlw	99	;'c'
   248  0057  3461               	retlw	97	;'a'
   249  0058  346C               	retlw	108	;'l'
   250  0059  3420               	retlw	32	;' '
   251  005A  3462               	retlw	98	;'b'
   252  005B  3479               	retlw	121	;'y'
   253  005C  3474               	retlw	116	;'t'
   254  005D  3465               	retlw	101	;'e'
   255  005E  3473               	retlw	115	;'s'
   256  005F  343A               	retlw	58	;':'
   257  0060  3420               	retlw	32	;' '
   258  0061  3400               	retlw	0
   259  0062                     STR_3:	
   260  0062  3446               	retlw	70	;'F'
   261  0063  3472               	retlw	114	;'r'
   262  0064  3465               	retlw	101	;'e'
   263  0065  3465               	retlw	101	;'e'
   264  0066  3420               	retlw	32	;' '
   265  0067  3462               	retlw	98	;'b'
   266  0068  3479               	retlw	121	;'y'
   267  0069  3474               	retlw	116	;'t'
   268  006A  3465               	retlw	101	;'e'
   269  006B  3473               	retlw	115	;'s'
   270  006C  343A               	retlw	58	;':'
   271  006D  3420               	retlw	32	;' '
   272  006E  3400               	retlw	0
   273  006F                     STR_9:	
   274  006F  3446               	retlw	70	;'F'
   275  0070  3469               	retlw	105	;'i'
   276  0071  346C               	retlw	108	;'l'
   277  0072  3465               	retlw	101	;'e'
   278  0073  3420               	retlw	32	;' '
   279  0074  3473               	retlw	115	;'s'
   280  0075  3469               	retlw	105	;'i'
   281  0076  347A               	retlw	122	;'z'
   282  0077  3465               	retlw	101	;'e'
   283  0078  343A               	retlw	58	;':'
   284  0079  3420               	retlw	32	;' '
   285  007A  3400               	retlw	0
   286  007B                     STR_8:	
   287  007B  3464               	retlw	100	;'d'
   288  007C  3465               	retlw	101	;'e'
   289  007D  3461               	retlw	97	;'a'
   290  007E  3464               	retlw	100	;'d'
   291  007F  3462               	retlw	98	;'b'
   292  0080  3465               	retlw	101	;'e'
   293  0081  3465               	retlw	101	;'e'
   294  0082  3466               	retlw	102	;'f'
   295  0083  340A               	retlw	10
   296  0084  3400               	retlw	0
   297  0085                     STR_5:	
   298  0085  3456               	retlw	86	;'V'
   299  0086  3465               	retlw	101	;'e'
   300  0087  3472               	retlw	114	;'r'
   301  0088  3473               	retlw	115	;'s'
   302  0089  3469               	retlw	105	;'i'
   303  008A  346F               	retlw	111	;'o'
   304  008B  346E               	retlw	110	;'n'
   305  008C  343A               	retlw	58	;':'
   306  008D  3420               	retlw	32	;' '
   307  008E  3400               	retlw	0
   308  008F                     STR_6:	
   309  008F  3453               	retlw	83	;'S'
   310  0090  3474               	retlw	116	;'t'
   311  0091  3461               	retlw	97	;'a'
   312  0092  3474               	retlw	116	;'t'
   313  0093  3475               	retlw	117	;'u'
   314  0094  3473               	retlw	115	;'s'
   315  0095  343A               	retlw	58	;':'
   316  0096  3420               	retlw	32	;' '
   317  0097  3400               	retlw	0
   318  0098                     STR_7:	
   319  0098  3444               	retlw	68	;'D'
   320  0099  3472               	retlw	114	;'r'
   321  009A  3461               	retlw	97	;'a'
   322  009B  3467               	retlw	103	;'g'
   323  009C  346F               	retlw	111	;'o'
   324  009D  346E               	retlw	110	;'n'
   325  009E  3473               	retlw	115	;'s'
   326  009F  3400               	retlw	0
   327                           
   328                           ; #config settings
   329  0000                     
   330                           	psect	cinit
   331  07BE                     start_initialization:	
   332  07BE                     __initialization:	
   333                           
   334                           ; Initialize objects allocated to BANK0
   335  07BE  118A  21AC  118A   	fcall	__pidataBANK0	;fetch initializer
   336  07C1  00E1               	movwf	__pdataBANK0& (0+127)
   337  07C2  118A  21AD  118A   	fcall	__pidataBANK0+1	;fetch initializer
   338  07C5  00E2               	movwf	(__pdataBANK0+1)& (0+127)
   339  07C6  118A  21AE  118A   	fcall	__pidataBANK0+2	;fetch initializer
   340  07C9  00E3               	movwf	(__pdataBANK0+2)& (0+127)
   341  07CA  118A  21AF  118A   	fcall	__pidataBANK0+3	;fetch initializer
   342  07CD  00E4               	movwf	(__pdataBANK0+3)& (0+127)
   343  07CE  118A  21B0  118A   	fcall	__pidataBANK0+4	;fetch initializer
   344  07D1  00E5               	movwf	(__pdataBANK0+4)& (0+127)
   345  07D2  118A  21B1  118A   	fcall	__pidataBANK0+5	;fetch initializer
   346  07D5  00E6               	movwf	(__pdataBANK0+5)& (0+127)
   347  07D6  118A  21B2  118A   	fcall	__pidataBANK0+6	;fetch initializer
   348  07D9  00E7               	movwf	(__pdataBANK0+6)& (0+127)
   349  07DA  118A  21B3  118A   	fcall	__pidataBANK0+7	;fetch initializer
   350  07DD  00E8               	movwf	(__pdataBANK0+7)& (0+127)
   351                           
   352                           ; Clear objects allocated to BANK3
   353  07DE  1783               	bsf	3,7	;select IRP bank2
   354  07DF  3090               	movlw	low __pbssBANK3
   355  07E0  0084               	movwf	4
   356  07E1  30F0               	movlw	low (__pbssBANK3+96)
   357  07E2  118A  21A4  118A   	fcall	clear_ram0
   358                           
   359                           ; Clear objects allocated to BANK2
   360  07E5  3010               	movlw	low __pbssBANK2
   361  07E6  0084               	movwf	4
   362  07E7  3050               	movlw	low (__pbssBANK2+64)
   363  07E8  118A  21A4  118A   	fcall	clear_ram0
   364                           
   365                           ; Clear objects allocated to BANK1
   366  07EB  1383               	bcf	3,7	;select IRP bank0
   367  07EC  30A0               	movlw	low __pbssBANK1
   368  07ED  0084               	movwf	4
   369  07EE  30E0               	movlw	low (__pbssBANK1+64)
   370  07EF  118A  21A4  118A   	fcall	clear_ram0
   371                           
   372                           ; Clear objects allocated to BANK0
   373  07F2  3020               	movlw	low __pbssBANK0
   374  07F3  0084               	movwf	4
   375  07F4  3061               	movlw	low (__pbssBANK0+65)
   376  07F5  118A  21A4  118A   	fcall	clear_ram0
   377                           
   378                           ; Clear objects allocated to COMMON
   379  07F8  3070               	movlw	low __pbssCOMMON
   380  07F9  0084               	movwf	4
   381  07FA  3077               	movlw	low (__pbssCOMMON+7)
   382  07FB  118A  21A4         	fcall	clear_ram0
   383  07FD                     end_of_initialization:	
   384                           ;End of C runtime variable initialization code
   385                           
   386  07FD                     __end_of__initialization:	
   387  07FD  0183               	clrf	3
   388  07FE  118A  2BEF         	ljmp	_main	;jump to C main() function
   389                           
   390                           	psect	bssCOMMON
   391  0070                     __pbssCOMMON:	
   392  0070                     _fifo_write_idx:	
   393  0070                     	ds	1
   394  0071                     _fifo_read_idx:	
   395  0071                     	ds	1
   396  0072                     _usb_drive_size3:	
   397  0072                     	ds	1
   398  0073                     _usb_drive_size2:	
   399  0073                     	ds	1
   400  0074                     _usb_drive_size1:	
   401  0074                     	ds	1
   402  0075                     _hex_char_low:	
   403  0075                     	ds	1
   404  0076                     _hex_char_high:	
   405  0076                     	ds	1
   406                           
   407                           	psect	bssBANK0
   408  0020                     __pbssBANK0:	
   409  0020                     _fifo_bank_C:	
   410  0020                     	ds	32
   411  0040                     _fifo_num_bytes:	
   412  0040                     	ds	1
   413  0041                     _fifo_write_bank:	
   414  0041                     	ds	1
   415  0042                     _fifo_read_bank:	
   416  0042                     	ds	1
   417  0043                     _flag_reg:	
   418  0043                     	ds	1
   419  0044                     _delay_counter:	
   420  0044                     	ds	1
   421  0045                     _timeout_low:	
   422  0045                     	ds	1
   423  0046                     _timeout_high:	
   424  0046                     	ds	1
   425  0047                     _s_reg_low:	
   426  0047                     	ds	1
   427  0048                     _s_reg_high:	
   428  0048                     	ds	1
   429  0049                     _usb_target_status:	
   430  0049                     	ds	1
   431  004A                     _usb_logical_bytes3:	
   432  004A                     	ds	1
   433  004B                     _usb_logical_bytes2:	
   434  004B                     	ds	1
   435  004C                     _usb_logical_bytes1:	
   436  004C                     	ds	1
   437  004D                     _usb_free_space3:	
   438  004D                     	ds	1
   439  004E                     _usb_free_space2:	
   440  004E                     	ds	1
   441  004F                     _usb_free_space1:	
   442  004F                     	ds	1
   443  0050                     _usb_bytes_read_low:	
   444  0050                     	ds	1
   445  0051                     _usb_bytes_read_high:	
   446  0051                     	ds	1
   447  0052                     _usb_file_size_low:	
   448  0052                     	ds	1
   449  0053                     _usb_file_size_high:	
   450  0053                     	ds	1
   451  0054                     _tape_size_low:	
   452  0054                     	ds	1
   453  0055                     _tape_size_high:	
   454  0055                     	ds	1
   455  0056                     _gen_count4:	
   456  0056                     	ds	1
   457  0057                     _gen_count3:	
   458  0057                     	ds	1
   459  0058                     _gen_count2:	
   460  0058                     	ds	1
   461  0059                     _gen_count:	
   462  0059                     	ds	1
   463  005A                     _ldel_count:	
   464  005A                     	ds	1
   465  005B                     _sdel_count:	
   466  005B                     	ds	1
   467  005C                     _ram_address_l:	
   468  005C                     	ds	1
   469  005D                     _ram_address_h:	
   470  005D                     	ds	1
   471  005E                     _temp5:	
   472  005E                     	ds	1
   473  005F                     _temp4:	
   474  005F                     	ds	1
   475  0060                     _temp3:	
   476  0060                     	ds	1
   477                           
   478                           	psect	dataBANK0
   479  0061                     __pdataBANK0:	
   480  0061                     _tape_name:	
   481  0061                     	ds	8
   482                           
   483                           	psect	bssBANK1
   484  00A0                     __pbssBANK1:	
   485  00A0                     _fifo_bank_E:	
   486  00A0                     	ds	32
   487  00C0                     _fifo_bank_D:	
   488  00C0                     	ds	32
   489                           
   490                           	psect	bssBANK3
   491  0190                     __pbssBANK3:	
   492  0190                     _fifo_bank_A:	
   493  0190                     	ds	64
   494  01D0                     _fifo_bank_F:	
   495  01D0                     	ds	32
   496                           
   497                           	psect	bssBANK2
   498  0110                     __pbssBANK2:	
   499  0110                     _fifo_bank_B:	
   500  0110                     	ds	64
   501                           
   502                           	psect	clrtext
   503  01A4                     clear_ram0:	
   504                           ;	Called with FSR containing the base address, and
   505                           ;	W with the last address+1
   506                           
   507  01A4  0064               	clrwdt	;clear the watchdog before getting into this loop
   508  01A5                     clrloop0:	
   509  01A5  0180               	clrf	0	;clear RAM location pointed to by FSR
   510  01A6  0A84               	incf	4,f	;increment pointer
   511  01A7  0604               	xorwf	4,w	;XOR with final address
   512  01A8  1903               	btfsc	3,2	;have we reached the end yet?
   513  01A9  3400               	retlw	0	;all done for this memory range, return
   514  01AA  0604               	xorwf	4,w	;XOR again to restore value
   515  01AB  29A5               	goto	clrloop0	;do the next byte
   516                           
   517                           	psect	cstackBANK1
   518  00E0                     __pcstackBANK1:	
   519  00E0                     print_string_lcd@string:	
   520  00E0                     print_string_serial@i:	
   521                           ; 1 bytes @ 0x0
   522                           
   523                           
   524                           ; 1 bytes @ 0x0
   525  00E0                     	ds	1
   526  00E1                     print_string_lcd@i:	
   527  00E1                     print_string_serial@string:	
   528                           ; 1 bytes @ 0x1
   529                           
   530                           
   531                           ; 1 bytes @ 0x1
   532  00E1                     	ds	1
   533  00E2                     ??_usb_autoconfig:	
   534                           
   535                           ; 1 bytes @ 0x2
   536  00E2                     	ds	1
   537  00E3                     usb_autoconfig@temp:	
   538                           
   539                           ; 1 bytes @ 0x3
   540  00E3                     	ds	1
   541  00E4                     ??_main:	
   542                           
   543                           ; 1 bytes @ 0x4
   544  00E4                     	ds	1
   545  00E5                     main@state:	
   546                           
   547                           ; 1 bytes @ 0x5
   548  00E5                     	ds	1
   549  00E6                     main@temp:	
   550                           
   551                           ; 1 bytes @ 0x6
   552  00E6                     	ds	1
   553                           
   554                           	psect	cstackCOMMON
   555  0077                     __pcstackCOMMON:	
   556  0077                     ?_lcd_putc:	
   557  0077                     ??_lcd_putc:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0077                     ?_uart_send:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0077                     ??_uart_send:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0077                     ?_usb_disk_capacity:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0077                     ??_usb_disk_capacity:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0077                     ?_usb_disk_query:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0077                     ??_usb_disk_query:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0077                     ?_usb_check_exists:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0077                     ??_usb_check_exists:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0077                     ?_usb_get_version:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0077                     ??_usb_get_version:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0077                     ?_usb_set_mode:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0077                     ??_usb_set_mode:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0077                     ?_delay_millis:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0077                     ??_delay_millis:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0077                     ?_usb_disk_connect:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0077                     ??_usb_disk_connect:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0077                     ?_usb_disk_mount:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0077                     ??_usb_disk_mount:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0077                     ?_usb_get_status:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0077                     ??_usb_get_status:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0077                     ?_initialize:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0077                     ??_initialize:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0077                     ?_usb_reset_all:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0077                     ??_usb_reset_all:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0077                     ?_lcd_line2:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0077                     ??_lcd_line2:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0077                     ?_uart_read:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0077                     ??_uart_read:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0077                     ?_usb_set_file_name:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0077                     ??_usb_set_file_name:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0077                     ?_print_name:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0077                     ??_print_name:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0077                     ?_usb_file_open:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0077                     ??_usb_file_open:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0077                     ?_usb_file_close:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0077                     ??_usb_file_close:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0077                     ?_usb_get_file_size:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0077                     ??_usb_get_file_size:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0077                     ?_usb_file_read:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0077                     ??_usb_file_read:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0077                     ?_usb_file_create:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0077                     ??_usb_file_create:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0077                     ?_mem_clear:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0077                     ??_mem_clear:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0077                     ?_mem_dump:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0077                     ??_mem_dump:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0077                     ?_print_test_data:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0077                     ??_print_test_data:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0077                     ?_lcd_clear2:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0077                     ??_lcd_clear2:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0077                     ?_fifo_push:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0077                     ??_fifo_push:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0077                     ?_fifo_pop:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0077                     ?_byte_to_hex:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0077                     ?_print_string_lcd:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0077                     ?_print_string_serial:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0077                     ?_print_capacity:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0077                     ??_print_capacity:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0077                     ?_print_query:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0077                     ??_print_query:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0077                     ?_usb_autoconfig:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0077                     ?_main:	
   744                           ; 1 bytes @ 0x0
   745                           
   746                           
   747                           ; 1 bytes @ 0x0
   748  0077                     	ds	1
   749  0078                     fifo_push@data:	
   750                           
   751                           ; 1 bytes @ 0x1
   752  0078                     	ds	1
   753  0079                     ??_fifo_pop:	
   754                           
   755                           ; 1 bytes @ 0x2
   756  0079                     	ds	1
   757  007A                     fifo_pop@temp:	
   758                           
   759                           ; 1 bytes @ 0x3
   760  007A                     	ds	1
   761                           
   762                           	psect	cstackBANK0
   763  0069                     __pcstackBANK0:	
   764  0069                     ??_byte_to_hex:	
   765                           
   766                           ; 1 bytes @ 0x0
   767  0069                     	ds	2
   768  006B                     byte_to_hex@data:	
   769                           
   770                           ; 1 bytes @ 0x2
   771  006B                     	ds	1
   772  006C                     ??_print_string_lcd:	
   773  006C                     ??_print_string_serial:	
   774                           ; 1 bytes @ 0x3
   775                           
   776                           
   777                           ; 1 bytes @ 0x3
   778  006C                     	ds	1
   779                           
   780                           	psect	maintext
   781  03EF                     __pmaintext:	
   782 ;;
   783 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   784 ;;
   785 ;; *************** function _main *****************
   786 ;; Defined at:
   787 ;;		line 317 in file "main.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  temp            1    6[BANK1 ] unsigned char 
   792 ;;  state           1    5[BANK1 ] unsigned char 
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : B00/0
   799 ;;		On exit  : 300/100
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   802 ;;      Params:         0       0       0       0       0
   803 ;;      Locals:         0       0       2       0       0
   804 ;;      Temps:          0       0       1       0       0
   805 ;;      Totals:         0       0       3       0       0
   806 ;;Total ram usage:        3 bytes
   807 ;; Hardware stack levels required when called:    6
   808 ;; This function calls:
   809 ;;		_byte_to_hex
   810 ;;		_delay_millis
   811 ;;		_initialize
   812 ;;		_lcd_clear2
   813 ;;		_lcd_line2
   814 ;;		_lcd_putc
   815 ;;		_mem_clear
   816 ;;		_mem_dump
   817 ;;		_print_capacity
   818 ;;		_print_name
   819 ;;		_print_query
   820 ;;		_print_string_lcd
   821 ;;		_print_string_serial
   822 ;;		_print_test_data
   823 ;;		_uart_read
   824 ;;		_uart_send
   825 ;;		_usb_autoconfig
   826 ;;		_usb_disk_connect
   827 ;;		_usb_disk_mount
   828 ;;		_usb_file_close
   829 ;;		_usb_file_create
   830 ;;		_usb_file_open
   831 ;;		_usb_file_read
   832 ;;		_usb_get_file_size
   833 ;;		_usb_get_status
   834 ;;		_usb_get_version
   835 ;;		_usb_reset_all
   836 ;;		_usb_set_file_name
   837 ;;		_usb_set_mode
   838 ;; This function is called by:
   839 ;;		Startup code after reset
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _main
   845  03EF                     _main:	
   846                           
   847                           ;main.c: 319: unsigned char state = 0;
   848                           
   849                           ;incstack = 0
   850                           ; Regs used in _main: [allreg]
   851  03EF  1683               	bsf	3,5	;RP0=1, select bank1
   852  03F0  01E5               	clrf	main@state^(0+128)
   853                           
   854                           ;main.c: 320: initialize();
   855  03F1  118A  251C  118A   	fcall	_initialize
   856                           
   857                           ;main.c: 321: usb_reset_all();
   858  03F4  118A  268E  118A   	fcall	_usb_reset_all
   859                           
   860                           ;main.c: 322: delay_millis(100);
   861  03F7  3064               	movlw	100
   862  03F8  118A  2669  118A   	fcall	_delay_millis
   863                           
   864                           ;main.c: 323: usb_autoconfig();
   865  03FB  118A  2369  118A   	fcall	_usb_autoconfig
   866                           
   867                           ;main.c: 326: print_string_lcd("Dragons");
   868  03FE  3091               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   869  03FF  118A  21D2  118A   	fcall	_print_string_lcd
   870                           
   871                           ;main.c: 327: lcd_line2();
   872  0402  118A  2609  118A   	fcall	_lcd_line2
   873                           
   874                           ;main.c: 329: print_string_serial("deadbeef\n");
   875  0405  3074               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   876  0406  118A  21B4  118A   	fcall	_print_string_serial
   877                           
   878                           ;main.c: 336: switch(state)
   879  0409  2D01               	goto	l2196
   880  040A                     l2198:	
   881                           
   882                           ;main.c: 339: if(temp == 0xDE)
   883  040A  30DE               	movlw	222
   884  040B  0666               	xorwf	main@temp^(0+128),w
   885  040C  1D03               	btfss	3,2
   886  040D  2D01               	goto	l2196
   887                           
   888                           ;main.c: 340: state = 1;
   889  040E  01E5               	clrf	main@state^(0+128)
   890  040F  0AE5               	incf	main@state^(0+128),f
   891  0410  2D01               	goto	l2196
   892  0411                     l2202:	
   893                           
   894                           ;main.c: 343: if(temp == 0xAD)
   895  0411  30AD               	movlw	173
   896  0412  0666               	xorwf	main@temp^(0+128),w
   897  0413  1D03               	btfss	3,2
   898  0414  2C17               	goto	l2206
   899                           
   900                           ;main.c: 344: state = 2;
   901  0415  3002               	movlw	2
   902  0416  2C28               	goto	L2
   903  0417                     l2206:	
   904                           
   905                           ;main.c: 345: else;main.c: 346: state = 0;
   906  0417  01E5               	clrf	main@state^(0+128)
   907  0418  2D01               	goto	l2196
   908  0419                     l2208:	
   909                           
   910                           ;main.c: 349: if(temp == 0xBE)
   911  0419  30BE               	movlw	190
   912  041A  0666               	xorwf	main@temp^(0+128),w
   913  041B  1D03               	btfss	3,2
   914  041C  2C17               	goto	l2206
   915                           
   916                           ;main.c: 350: state = 3;
   917  041D  3003               	movlw	3
   918  041E  2C28               	goto	L2
   919  041F                     l2214:	
   920                           
   921                           ;main.c: 355: if(temp == 0xEF)
   922  041F  30EF               	movlw	239
   923  0420  0666               	xorwf	main@temp^(0+128),w
   924  0421  1D03               	btfss	3,2
   925  0422  2C27               	goto	l2218
   926                           
   927                           ;main.c: 356: print_string_serial(str_cmd_mode);
   928  0423  3011               	movlw	(low ((_str_cmd_mode-__stringbase)| (0+32768)))& (0+255)
   929  0424  118A  21B4  118A   	fcall	_print_string_serial
   930  0427                     l2218:	
   931                           
   932                           ;main.c: 357: state = 4;
   933  0427  3004               	movlw	4
   934  0428                     L2:	
   935  0428  00E4               	movwf	??_main^(0+128)
   936  0429  0864               	movf	??_main^(0+128),w
   937  042A  00E5               	movwf	main@state^(0+128)
   938                           
   939                           ;main.c: 358: break;
   940  042B  2D01               	goto	l2196
   941  042C                     l2220:	
   942                           
   943                           ;main.c: 363: usb_reset_all();
   944  042C  118A  268E  118A   	fcall	_usb_reset_all
   945                           
   946                           ;main.c: 364: break;
   947  042F  2CE8               	goto	l2272
   948  0430                     l2222:	
   949                           
   950                           ;main.c: 366: usb_autoconfig();
   951  0430  118A  2369  118A   	fcall	_usb_autoconfig
   952                           
   953                           ;main.c: 367: break;
   954  0433  2CE8               	goto	l2272
   955  0434                     l2224:	
   956                           
   957                           ;main.c: 369: temp = usb_get_version();
   958  0434  118A  2718  118A   	fcall	_usb_get_version
   959  0437  2C52               	goto	L3
   960  0438                     l2226:	
   961                           ;main.c: 370: break;
   962                           
   963                           
   964                           ;main.c: 372: usb_set_mode(0x05);
   965  0438  3005               	movlw	5
   966  0439  118A  2710  118A   	fcall	_usb_set_mode
   967                           
   968                           ;main.c: 373: break;
   969  043C  2CE8               	goto	l2272
   970  043D                     l2228:	
   971                           
   972                           ;main.c: 375: usb_set_mode(0x06);
   973  043D  3006               	movlw	6
   974  043E  118A  2710  118A   	fcall	_usb_set_mode
   975                           
   976                           ;main.c: 376: break;
   977  0441  2CE8               	goto	l2272
   978  0442                     l2230:	
   979                           
   980                           ;main.c: 378: usb_set_mode(0x07);
   981  0442  3007               	movlw	7
   982  0443  118A  2710  118A   	fcall	_usb_set_mode
   983                           
   984                           ;main.c: 379: break;
   985  0446  2CE8               	goto	l2272
   986  0447                     l2232:	
   987                           
   988                           ;main.c: 381: usb_disk_connect();
   989  0447  118A  270B  118A   	fcall	_usb_disk_connect
   990                           
   991                           ;main.c: 382: break;
   992  044A  2CE8               	goto	l2272
   993  044B                     l2234:	
   994                           
   995                           ;main.c: 384: usb_disk_mount();
   996  044B  118A  2706  118A   	fcall	_usb_disk_mount
   997                           
   998                           ;main.c: 385: break;
   999  044E  2CE8               	goto	l2272
  1000  044F                     l2236:	
  1001                           
  1002                           ;main.c: 387: temp = usb_get_status();
  1003  044F  118A  26FF  118A   	fcall	_usb_get_status
  1004  0452                     L3:	
  1005  0452  1683               	bsf	3,5	;RP0=1, select bank1
  1006  0453  1303               	bcf	3,6	;RP1=0, select bank1
  1007  0454  00E4               	movwf	??_main^(0+128)
  1008  0455  0864               	movf	??_main^(0+128),w
  1009  0456  00E6               	movwf	main@temp^(0+128)
  1010                           
  1011                           ;main.c: 388: break;
  1012  0457  2CE8               	goto	l2272
  1013  0458                     l2238:	
  1014                           
  1015                           ;main.c: 390: print_query();
  1016  0458  118A  22F3  118A   	fcall	_print_query
  1017                           
  1018                           ;main.c: 391: break;
  1019  045B  2CE8               	goto	l2272
  1020  045C                     l2240:	
  1021                           
  1022                           ;main.c: 393: print_capacity();
  1023  045C  118A  2213  118A   	fcall	_print_capacity
  1024                           
  1025                           ;main.c: 394: break;
  1026  045F  2CE8               	goto	l2272
  1027  0460                     l2242:	
  1028                           
  1029                           ;main.c: 396: usb_set_file_name();
  1030  0460  118A  2693  118A   	fcall	_usb_set_file_name
  1031                           
  1032                           ;main.c: 397: print_name();
  1033  0463  118A  263A  118A   	fcall	_print_name
  1034                           
  1035                           ;main.c: 398: break;
  1036  0466  2CE8               	goto	l2272
  1037  0467                     l2244:	
  1038                           
  1039                           ;main.c: 400: usb_file_open();
  1040  0467  118A  26A6  118A   	fcall	_usb_file_open
  1041                           
  1042                           ;main.c: 401: break;
  1043  046A  2CE8               	goto	l2272
  1044  046B                     l2246:	
  1045                           
  1046                           ;main.c: 403: usb_file_close();
  1047  046B  118A  26AB  118A   	fcall	_usb_file_close
  1048                           
  1049                           ;main.c: 404: break;
  1050  046E  2CE8               	goto	l2272
  1051  046F                     l2248:	
  1052                           
  1053                           ;main.c: 406: usb_get_file_size();
  1054  046F  118A  26D1  118A   	fcall	_usb_get_file_size
  1055                           
  1056                           ;main.c: 407: print_string_serial("File size: ");
  1057  0472  3068               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1058  0473  118A  21B4  118A   	fcall	_print_string_serial
  1059                           
  1060                           ;main.c: 408: byte_to_hex(usb_file_size_high);
  1061  0476  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0477  0853               	movf	_usb_file_size_high,w
  1063  0478  118A  21F0  118A   	fcall	_byte_to_hex
  1064                           
  1065                           ;main.c: 409: uart_send(hex_char_high);
  1066  047B  0876               	movf	_hex_char_high,w
  1067  047C  118A  2570  118A   	fcall	_uart_send
  1068                           
  1069                           ;main.c: 410: uart_send(hex_char_low);
  1070  047F  0875               	movf	_hex_char_low,w
  1071  0480  118A  2570  118A   	fcall	_uart_send
  1072                           
  1073                           ;main.c: 411: byte_to_hex(usb_file_size_low);
  1074  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0485  0852               	movf	_usb_file_size_low,w
  1077  0486  118A  21F0  118A   	fcall	_byte_to_hex
  1078                           
  1079                           ;main.c: 412: uart_send(hex_char_high);
  1080  0489  0876               	movf	_hex_char_high,w
  1081  048A  118A  2570  118A   	fcall	_uart_send
  1082                           
  1083                           ;main.c: 413: uart_send(hex_char_low);
  1084  048D  0875               	movf	_hex_char_low,w
  1085  048E  118A  2570  118A   	fcall	_uart_send
  1086                           
  1087                           ;main.c: 414: uart_send('\n');
  1088  0491  300A               	movlw	10
  1089  0492  118A  2570  118A   	fcall	_uart_send
  1090                           
  1091                           ;main.c: 415: break;
  1092  0495  2CE8               	goto	l2272
  1093  0496                     l2258:	
  1094                           
  1095                           ;main.c: 417: usb_file_read();
  1096  0496  118A  277C  118A   	fcall	_usb_file_read
  1097                           
  1098                           ;main.c: 418: break;
  1099  0499  2CE8               	goto	l2272
  1100  049A                     l2260:	
  1101                           
  1102                           ;main.c: 420: usb_file_create();
  1103  049A  118A  26EC  118A   	fcall	_usb_file_create
  1104                           
  1105                           ;main.c: 421: break;
  1106  049D  2CE8               	goto	l2272
  1107  049E                     l2262:	
  1108                           
  1109                           ;main.c: 429: mem_clear();
  1110  049E  118A  2550  118A   	fcall	_mem_clear
  1111                           
  1112                           ;main.c: 430: break;
  1113  04A1  2CE8               	goto	l2272
  1114  04A2                     l2264:	
  1115                           
  1116                           ;main.c: 432: mem_dump();
  1117  04A2  118A  255E  118A   	fcall	_mem_dump
  1118                           
  1119                           ;main.c: 433: break;
  1120  04A5  2CE8               	goto	l2272
  1121  04A6                     l2266:	
  1122                           
  1123                           ;main.c: 435: print_test_data();
  1124  04A6  118A  2675  118A   	fcall	_print_test_data
  1125                           
  1126                           ;main.c: 436: break;
  1127  04A9  2CE8               	goto	l2272
  1128  04AA                     l2270:	
  1129  04AA  0866               	movf	main@temp^(0+128),w
  1130                           
  1131                           ; Switch size 1, requested type "simple"
  1132                           ; Number of cases is 20, Range of values is 0 to 34
  1133                           ; switch strategies available:
  1134                           ; Name         Instructions Cycles
  1135                           ; simple_byte           61    31 (average)
  1136                           ; direct_byte           77     7 (fixed)
  1137                           ; jumptable            260     6 (fixed)
  1138                           ;	Chosen strategy is simple_byte
  1139  04AB  3A00               	xorlw	0	; case 0
  1140  04AC  1903               	skipnz
  1141  04AD  2C2C               	goto	l2220
  1142  04AE  3A01               	xorlw	1	; case 1
  1143  04AF  1903               	skipnz
  1144  04B0  2C30               	goto	l2222
  1145  04B1  3A03               	xorlw	3	; case 2
  1146  04B2  1903               	skipnz
  1147  04B3  2C34               	goto	l2224
  1148  04B4  3A01               	xorlw	1	; case 3
  1149  04B5  1903               	skipnz
  1150  04B6  2C38               	goto	l2226
  1151  04B7  3A07               	xorlw	7	; case 4
  1152  04B8  1903               	skipnz
  1153  04B9  2C3D               	goto	l2228
  1154  04BA  3A01               	xorlw	1	; case 5
  1155  04BB  1903               	skipnz
  1156  04BC  2C42               	goto	l2230
  1157  04BD  3A03               	xorlw	3	; case 6
  1158  04BE  1903               	skipnz
  1159  04BF  2C47               	goto	l2232
  1160  04C0  3A01               	xorlw	1	; case 7
  1161  04C1  1903               	skipnz
  1162  04C2  2C4B               	goto	l2234
  1163  04C3  3A0F               	xorlw	15	; case 8
  1164  04C4  1903               	skipnz
  1165  04C5  2C4F               	goto	l2236
  1166  04C6  3A01               	xorlw	1	; case 9
  1167  04C7  1903               	skipnz
  1168  04C8  2C58               	goto	l2238
  1169  04C9  3A03               	xorlw	3	; case 10
  1170  04CA  1903               	skipnz
  1171  04CB  2C5C               	goto	l2240
  1172  04CC  3A01               	xorlw	1	; case 11
  1173  04CD  1903               	skipnz
  1174  04CE  2C60               	goto	l2242
  1175  04CF  3A07               	xorlw	7	; case 12
  1176  04D0  1903               	skipnz
  1177  04D1  2C67               	goto	l2244
  1178  04D2  3A01               	xorlw	1	; case 13
  1179  04D3  1903               	skipnz
  1180  04D4  2C6B               	goto	l2246
  1181  04D5  3A03               	xorlw	3	; case 14
  1182  04D6  1903               	skipnz
  1183  04D7  2C6F               	goto	l2248
  1184  04D8  3A01               	xorlw	1	; case 15
  1185  04D9  1903               	skipnz
  1186  04DA  2C96               	goto	l2258
  1187  04DB  3A1F               	xorlw	31	; case 16
  1188  04DC  1903               	skipnz
  1189  04DD  2C9A               	goto	l2260
  1190  04DE  3A30               	xorlw	48	; case 32
  1191  04DF  1903               	skipnz
  1192  04E0  2C9E               	goto	l2262
  1193  04E1  3A01               	xorlw	1	; case 33
  1194  04E2  1903               	skipnz
  1195  04E3  2CA2               	goto	l2264
  1196  04E4  3A03               	xorlw	3	; case 34
  1197  04E5  1903               	skipnz
  1198  04E6  2CA6               	goto	l2266
  1199  04E7  2CE8               	goto	l2272
  1200  04E8                     l2272:	
  1201                           
  1202                           ;main.c: 438: byte_to_hex(temp);
  1203  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  1204  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  1205  04EA  0866               	movf	main@temp^(0+128),w
  1206  04EB  118A  21F0  118A   	fcall	_byte_to_hex
  1207                           
  1208                           ;main.c: 439: uart_send(hex_char_high);
  1209  04EE  0876               	movf	_hex_char_high,w
  1210  04EF  118A  2570  118A   	fcall	_uart_send
  1211                           
  1212                           ;main.c: 440: uart_send(hex_char_low);
  1213  04F2  0875               	movf	_hex_char_low,w
  1214  04F3  118A  2570  118A   	fcall	_uart_send
  1215                           
  1216                           ;main.c: 441: lcd_clear2();
  1217  04F6  118A  2622  118A   	fcall	_lcd_clear2
  1218                           
  1219                           ;main.c: 442: lcd_putc(hex_char_high);
  1220  04F9  0876               	movf	_hex_char_high,w
  1221  04FA  118A  25D6  118A   	fcall	_lcd_putc
  1222                           
  1223                           ;main.c: 443: lcd_putc(hex_char_low);
  1224  04FD  0875               	movf	_hex_char_low,w
  1225  04FE  118A  25D6  118A   	fcall	_lcd_putc
  1226  0501                     l2196:	
  1227                           ;main.c: 444: break;
  1228                           
  1229                           
  1230                           ;main.c: 333: {;main.c: 334: temp = uart_read();
  1231  0501  118A  256C  118A   	fcall	_uart_read
  1232  0504  1683               	bsf	3,5	;RP0=1, select bank1
  1233  0505  1303               	bcf	3,6	;RP1=0, select bank1
  1234  0506  00E4               	movwf	??_main^(0+128)
  1235  0507  0864               	movf	??_main^(0+128),w
  1236  0508  00E6               	movwf	main@temp^(0+128)
  1237  0509  0865               	movf	main@state^(0+128),w
  1238                           
  1239                           ; Switch size 1, requested type "simple"
  1240                           ; Number of cases is 5, Range of values is 0 to 4
  1241                           ; switch strategies available:
  1242                           ; Name         Instructions Cycles
  1243                           ; simple_byte           16     9 (average)
  1244                           ; direct_byte           17     7 (fixed)
  1245                           ; jumptable            260     6 (fixed)
  1246                           ;	Chosen strategy is simple_byte
  1247  050A  3A00               	xorlw	0	; case 0
  1248  050B  1903               	skipnz
  1249  050C  2C0A               	goto	l2198
  1250  050D  3A01               	xorlw	1	; case 1
  1251  050E  1903               	skipnz
  1252  050F  2C11               	goto	l2202
  1253  0510  3A03               	xorlw	3	; case 2
  1254  0511  1903               	skipnz
  1255  0512  2C19               	goto	l2208
  1256  0513  3A01               	xorlw	1	; case 3
  1257  0514  1903               	skipnz
  1258  0515  2C1F               	goto	l2214
  1259  0516  3A07               	xorlw	7	; case 4
  1260  0517  1903               	skipnz
  1261  0518  2CAA               	goto	l2270
  1262  0519  2D01               	goto	l2196
  1263  051A  118A  2800         	ljmp	start
  1264  051C                     __end_of_main:	
  1265                           
  1266                           	psect	text1
  1267  0369                     __ptext1:	
  1268 ;; *************** function _usb_autoconfig *****************
  1269 ;; Defined at:
  1270 ;;		line 276 in file "main.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  temp            1    3[BANK1 ] unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/100
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1284 ;;      Params:         0       0       0       0       0
  1285 ;;      Locals:         0       0       1       0       0
  1286 ;;      Temps:          0       0       1       0       0
  1287 ;;      Totals:         0       0       2       0       0
  1288 ;;Total ram usage:        2 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    5
  1291 ;; This function calls:
  1292 ;;		_byte_to_hex
  1293 ;;		_delay_millis
  1294 ;;		_print_query
  1295 ;;		_print_string_serial
  1296 ;;		_uart_send
  1297 ;;		_usb_check_exists
  1298 ;;		_usb_disk_connect
  1299 ;;		_usb_disk_mount
  1300 ;;		_usb_get_status
  1301 ;;		_usb_get_version
  1302 ;;		_usb_set_mode
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _usb_autoconfig
  1310  0369                     _usb_autoconfig:	
  1311                           
  1312                           ;main.c: 278: unsigned char temp;;main.c: 279: print_string_serial("USB Autoconfig:\n");
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in _usb_autoconfig: [allreg]
  1316  0369  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1317  036A  118A  21B4  118A   	fcall	_print_string_serial
  1318                           
  1319                           ;main.c: 280: temp = usb_check_exists(0x55);
  1320  036D  3055               	movlw	85
  1321  036E  118A  26E2  118A   	fcall	_usb_check_exists
  1322  0371  1683               	bsf	3,5	;RP0=1, select bank1
  1323  0372  1303               	bcf	3,6	;RP1=0, select bank1
  1324  0373  00E2               	movwf	??_usb_autoconfig^(0+128)
  1325  0374  0862               	movf	??_usb_autoconfig^(0+128),w
  1326  0375  00E3               	movwf	usb_autoconfig@temp^(0+128)
  1327                           
  1328                           ;main.c: 281: byte_to_hex(temp);
  1329  0376  0863               	movf	usb_autoconfig@temp^(0+128),w
  1330  0377  118A  21F0  118A   	fcall	_byte_to_hex
  1331                           
  1332                           ;main.c: 282: uart_send(hex_char_high);
  1333  037A  0876               	movf	_hex_char_high,w
  1334  037B  118A  2570  118A   	fcall	_uart_send
  1335                           
  1336                           ;main.c: 283: uart_send(hex_char_low);
  1337  037E  0875               	movf	_hex_char_low,w
  1338  037F  118A  2570  118A   	fcall	_uart_send
  1339                           
  1340                           ;main.c: 284: uart_send('\n');
  1341  0382  300A               	movlw	10
  1342  0383  118A  2570  118A   	fcall	_uart_send
  1343                           
  1344                           ;main.c: 286: temp = usb_get_version();
  1345  0386  118A  2718  118A   	fcall	_usb_get_version
  1346  0389  1683               	bsf	3,5	;RP0=1, select bank1
  1347  038A  1303               	bcf	3,6	;RP1=0, select bank1
  1348  038B  00E2               	movwf	??_usb_autoconfig^(0+128)
  1349  038C  0862               	movf	??_usb_autoconfig^(0+128),w
  1350  038D  00E3               	movwf	usb_autoconfig@temp^(0+128)
  1351                           
  1352                           ;main.c: 287: byte_to_hex(temp);
  1353  038E  0863               	movf	usb_autoconfig@temp^(0+128),w
  1354  038F  118A  21F0  118A   	fcall	_byte_to_hex
  1355                           
  1356                           ;main.c: 288: print_string_serial("Version: ");
  1357  0392  307E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1358  0393  118A  21B4  118A   	fcall	_print_string_serial
  1359                           
  1360                           ;main.c: 289: uart_send(hex_char_high);
  1361  0396  0876               	movf	_hex_char_high,w
  1362  0397  118A  2570  118A   	fcall	_uart_send
  1363                           
  1364                           ;main.c: 290: uart_send(hex_char_low);
  1365  039A  0875               	movf	_hex_char_low,w
  1366  039B  118A  2570  118A   	fcall	_uart_send
  1367                           
  1368                           ;main.c: 291: uart_send('\n');
  1369  039E  300A               	movlw	10
  1370  039F  118A  2570  118A   	fcall	_uart_send
  1371                           
  1372                           ;main.c: 293: usb_set_mode(0x05);
  1373  03A2  3005               	movlw	5
  1374  03A3  118A  2710  118A   	fcall	_usb_set_mode
  1375                           
  1376                           ;main.c: 294: delay_millis(1);
  1377  03A6  3001               	movlw	1
  1378  03A7  118A  2669  118A   	fcall	_delay_millis
  1379                           
  1380                           ;main.c: 295: usb_set_mode(0x07);
  1381  03AA  3007               	movlw	7
  1382  03AB  118A  2710  118A   	fcall	_usb_set_mode
  1383                           
  1384                           ;main.c: 296: delay_millis(1);
  1385  03AE  3001               	movlw	1
  1386  03AF  118A  2669  118A   	fcall	_delay_millis
  1387                           
  1388                           ;main.c: 297: usb_set_mode(0x06);
  1389  03B2  3006               	movlw	6
  1390  03B3  118A  2710  118A   	fcall	_usb_set_mode
  1391                           
  1392                           ;main.c: 298: delay_millis(1);
  1393  03B6  3001               	movlw	1
  1394  03B7  118A  2669  118A   	fcall	_delay_millis
  1395                           
  1396                           ;main.c: 299: usb_disk_connect();
  1397  03BA  118A  270B  118A   	fcall	_usb_disk_connect
  1398                           
  1399                           ;main.c: 300: delay_millis(250);
  1400  03BD  30FA               	movlw	250
  1401  03BE  118A  2669  118A   	fcall	_delay_millis
  1402                           
  1403                           ;main.c: 301: delay_millis(250);
  1404  03C1  30FA               	movlw	250
  1405  03C2  118A  2669  118A   	fcall	_delay_millis
  1406                           
  1407                           ;main.c: 302: usb_disk_mount();
  1408  03C5  118A  2706  118A   	fcall	_usb_disk_mount
  1409                           
  1410                           ;main.c: 303: delay_millis(250);
  1411  03C8  30FA               	movlw	250
  1412  03C9  118A  2669  118A   	fcall	_delay_millis
  1413                           
  1414                           ;main.c: 304: delay_millis(250);
  1415  03CC  30FA               	movlw	250
  1416  03CD  118A  2669  118A   	fcall	_delay_millis
  1417                           
  1418                           ;main.c: 306: temp = usb_get_status();
  1419  03D0  118A  26FF  118A   	fcall	_usb_get_status
  1420  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  1421  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  1422  03D5  00E2               	movwf	??_usb_autoconfig^(0+128)
  1423  03D6  0862               	movf	??_usb_autoconfig^(0+128),w
  1424  03D7  00E3               	movwf	usb_autoconfig@temp^(0+128)
  1425                           
  1426                           ;main.c: 307: byte_to_hex(temp);
  1427  03D8  0863               	movf	usb_autoconfig@temp^(0+128),w
  1428  03D9  118A  21F0  118A   	fcall	_byte_to_hex
  1429                           
  1430                           ;main.c: 308: print_string_serial("Status: ");
  1431  03DC  3088               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1432  03DD  118A  21B4  118A   	fcall	_print_string_serial
  1433                           
  1434                           ;main.c: 309: uart_send(hex_char_high);
  1435  03E0  0876               	movf	_hex_char_high,w
  1436  03E1  118A  2570  118A   	fcall	_uart_send
  1437                           
  1438                           ;main.c: 310: uart_send(hex_char_low);
  1439  03E4  0875               	movf	_hex_char_low,w
  1440  03E5  118A  2570  118A   	fcall	_uart_send
  1441                           
  1442                           ;main.c: 311: uart_send('\n');
  1443  03E8  300A               	movlw	10
  1444  03E9  118A  2570  118A   	fcall	_uart_send
  1445                           
  1446                           ;main.c: 313: print_query();
  1447  03EC  118A  22F3         	fcall	_print_query
  1448  03EE  0008               	return
  1449  03EF                     __end_of_usb_autoconfig:	
  1450                           
  1451                           	psect	text2
  1452  02F3                     __ptext2:	
  1453 ;; *************** function _print_query *****************
  1454 ;; Defined at:
  1455 ;;		line 244 in file "main.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/100
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1469 ;;      Params:         0       0       0       0       0
  1470 ;;      Locals:         0       0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0
  1472 ;;      Totals:         0       0       0       0       0
  1473 ;;Total ram usage:        0 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    4
  1476 ;; This function calls:
  1477 ;;		_byte_to_hex
  1478 ;;		_print_string_serial
  1479 ;;		_uart_send
  1480 ;;		_usb_disk_query
  1481 ;; This function is called by:
  1482 ;;		_usb_autoconfig
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           
  1488                           ;psect for function _print_query
  1489  02F3                     _print_query:	
  1490                           
  1491                           ;main.c: 246: usb_disk_query();
  1492                           
  1493                           ;incstack = 0
  1494                           ; Regs used in _print_query: [allreg]
  1495  02F3  118A  274D  118A   	fcall	_usb_disk_query
  1496                           
  1497                           ;main.c: 247: print_string_serial("Logical bytes: ");
  1498  02F6  304B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1499  02F7  118A  21B4  118A   	fcall	_print_string_serial
  1500                           
  1501                           ;main.c: 248: byte_to_hex(usb_logical_bytes3);
  1502  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1503  02FB  084A               	movf	_usb_logical_bytes3,w
  1504  02FC  118A  21F0  118A   	fcall	_byte_to_hex
  1505                           
  1506                           ;main.c: 249: uart_send(hex_char_high);
  1507  02FF  0876               	movf	_hex_char_high,w
  1508  0300  118A  2570  118A   	fcall	_uart_send
  1509                           
  1510                           ;main.c: 250: uart_send(hex_char_low);
  1511  0303  0875               	movf	_hex_char_low,w
  1512  0304  118A  2570  118A   	fcall	_uart_send
  1513                           
  1514                           ;main.c: 251: byte_to_hex(usb_logical_bytes2);
  1515  0307  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0308  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0309  084B               	movf	_usb_logical_bytes2,w
  1518  030A  118A  21F0  118A   	fcall	_byte_to_hex
  1519                           
  1520                           ;main.c: 252: uart_send(hex_char_high);
  1521  030D  0876               	movf	_hex_char_high,w
  1522  030E  118A  2570  118A   	fcall	_uart_send
  1523                           
  1524                           ;main.c: 253: uart_send(hex_char_low);
  1525  0311  0875               	movf	_hex_char_low,w
  1526  0312  118A  2570  118A   	fcall	_uart_send
  1527                           
  1528                           ;main.c: 254: byte_to_hex(usb_logical_bytes1);
  1529  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0317  084C               	movf	_usb_logical_bytes1,w
  1532  0318  118A  21F0  118A   	fcall	_byte_to_hex
  1533                           
  1534                           ;main.c: 255: uart_send(hex_char_high);
  1535  031B  0876               	movf	_hex_char_high,w
  1536  031C  118A  2570  118A   	fcall	_uart_send
  1537                           
  1538                           ;main.c: 256: uart_send(hex_char_low);
  1539  031F  0875               	movf	_hex_char_low,w
  1540  0320  118A  2570  118A   	fcall	_uart_send
  1541                           
  1542                           ;main.c: 257: uart_send('0');
  1543  0323  3030               	movlw	48
  1544  0324  118A  2570  118A   	fcall	_uart_send
  1545                           
  1546                           ;main.c: 258: uart_send('0');
  1547  0327  3030               	movlw	48
  1548  0328  118A  2570  118A   	fcall	_uart_send
  1549                           
  1550                           ;main.c: 259: uart_send('\n');
  1551  032B  300A               	movlw	10
  1552  032C  118A  2570  118A   	fcall	_uart_send
  1553                           
  1554                           ;main.c: 260: print_string_serial("Free bytes: ");
  1555  032F  305B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1556  0330  118A  21B4  118A   	fcall	_print_string_serial
  1557                           
  1558                           ;main.c: 261: byte_to_hex(usb_free_space3);
  1559  0333  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0334  084D               	movf	_usb_free_space3,w
  1561  0335  118A  21F0  118A   	fcall	_byte_to_hex
  1562                           
  1563                           ;main.c: 262: uart_send(hex_char_high);
  1564  0338  0876               	movf	_hex_char_high,w
  1565  0339  118A  2570  118A   	fcall	_uart_send
  1566                           
  1567                           ;main.c: 263: uart_send(hex_char_low);
  1568  033C  0875               	movf	_hex_char_low,w
  1569  033D  118A  2570  118A   	fcall	_uart_send
  1570                           
  1571                           ;main.c: 264: byte_to_hex(usb_free_space2);
  1572  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1574  0342  084E               	movf	_usb_free_space2,w
  1575  0343  118A  21F0  118A   	fcall	_byte_to_hex
  1576                           
  1577                           ;main.c: 265: uart_send(hex_char_high);
  1578  0346  0876               	movf	_hex_char_high,w
  1579  0347  118A  2570  118A   	fcall	_uart_send
  1580                           
  1581                           ;main.c: 266: uart_send(hex_char_low);
  1582  034A  0875               	movf	_hex_char_low,w
  1583  034B  118A  2570  118A   	fcall	_uart_send
  1584                           
  1585                           ;main.c: 267: byte_to_hex(usb_free_space1);
  1586  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1587  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0350  084F               	movf	_usb_free_space1,w
  1589  0351  118A  21F0  118A   	fcall	_byte_to_hex
  1590                           
  1591                           ;main.c: 268: uart_send(hex_char_high);
  1592  0354  0876               	movf	_hex_char_high,w
  1593  0355  118A  2570  118A   	fcall	_uart_send
  1594                           
  1595                           ;main.c: 269: uart_send(hex_char_low);
  1596  0358  0875               	movf	_hex_char_low,w
  1597  0359  118A  2570  118A   	fcall	_uart_send
  1598                           
  1599                           ;main.c: 270: uart_send('0');
  1600  035C  3030               	movlw	48
  1601  035D  118A  2570  118A   	fcall	_uart_send
  1602                           
  1603                           ;main.c: 271: uart_send('0');
  1604  0360  3030               	movlw	48
  1605  0361  118A  2570  118A   	fcall	_uart_send
  1606                           
  1607                           ;main.c: 272: uart_send('\n');
  1608  0364  300A               	movlw	10
  1609  0365  118A  2570  118A   	fcall	_uart_send
  1610  0368  0008               	return
  1611  0369                     __end_of_print_query:	
  1612                           
  1613                           	psect	text3
  1614  01D2                     __ptext3:	
  1615 ;; *************** function _print_string_lcd *****************
  1616 ;; Defined at:
  1617 ;;		line 194 in file "main.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  string          1    wreg     PTR const unsigned char 
  1620 ;;		 -> STR_7(8), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  string          1    0[BANK1 ] PTR const unsigned char 
  1623 ;;		 -> STR_7(8), 
  1624 ;;  i               1    1[BANK1 ] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/100
  1631 ;;		On exit  : 300/100
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1634 ;;      Params:         0       0       0       0       0
  1635 ;;      Locals:         0       0       2       0       0
  1636 ;;      Temps:          0       1       0       0       0
  1637 ;;      Totals:         0       1       2       0       0
  1638 ;;Total ram usage:        3 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    3
  1641 ;; This function calls:
  1642 ;;		_lcd_putc
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function _print_string_lcd
  1650  01D2                     _print_string_lcd:	
  1651                           
  1652                           ;incstack = 0
  1653                           ; Regs used in _print_string_lcd: [allreg]
  1654                           ;print_string_lcd@string stored from wreg
  1655  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  1656  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  1657  01D4  00E0               	movwf	print_string_lcd@string^(0+128)
  1658                           
  1659                           ;main.c: 196: unsigned char i = 0;
  1660  01D5  01E1               	clrf	print_string_lcd@i^(0+128)
  1661  01D6                     l2118:	
  1662                           ;main.c: 197: while(string[i])
  1663                           
  1664  01D6  0861               	movf	print_string_lcd@i^(0+128),w
  1665  01D7  0760               	addwf	print_string_lcd@string^(0+128),w
  1666  01D8  0084               	movwf	4
  1667  01D9  118A  2002  118A   	fcall	stringdir
  1668  01DC  3A00               	xorlw	0
  1669  01DD  1903               	btfsc	3,2
  1670  01DE  0008               	return
  1671                           
  1672                           ;main.c: 198: {;main.c: 199: lcd_putc(string[i]);
  1673  01DF  0861               	movf	print_string_lcd@i^(0+128),w
  1674  01E0  0760               	addwf	print_string_lcd@string^(0+128),w
  1675  01E1  0084               	movwf	4
  1676  01E2  118A  2002  118A   	fcall	stringdir
  1677  01E5  118A  25D6  118A   	fcall	_lcd_putc
  1678                           
  1679                           ;main.c: 200: ++i;
  1680  01E8  3001               	movlw	1
  1681  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1682  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1683  01EB  00EC               	movwf	??_print_string_lcd
  1684  01EC  086C               	movf	??_print_string_lcd,w
  1685  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  1686  01EE  07E1               	addwf	print_string_lcd@i^(0+128),f
  1687  01EF  29D6               	goto	l2118
  1688  01F0                     __end_of_print_string_lcd:	
  1689                           
  1690                           	psect	text4
  1691  0213                     __ptext4:	
  1692 ;; *************** function _print_capacity *****************
  1693 ;; Defined at:
  1694 ;;		line 226 in file "main.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;		None
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 200/100
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1708 ;;      Params:         0       0       0       0       0
  1709 ;;      Locals:         0       0       0       0       0
  1710 ;;      Temps:          0       0       0       0       0
  1711 ;;      Totals:         0       0       0       0       0
  1712 ;;Total ram usage:        0 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    4
  1715 ;; This function calls:
  1716 ;;		_byte_to_hex
  1717 ;;		_print_string_serial
  1718 ;;		_uart_send
  1719 ;;		_usb_disk_capacity
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _print_capacity
  1727  0213                     _print_capacity:	
  1728                           
  1729                           ;main.c: 228: usb_disk_capacity();
  1730                           
  1731                           ;incstack = 0
  1732                           ; Regs used in _print_capacity: [allreg]
  1733  0213  118A  272D  118A   	fcall	_usb_disk_capacity
  1734                           
  1735                           ;main.c: 229: print_string_serial("Physical bytes: ");
  1736  0216  303A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1737  0217  118A  21B4  118A   	fcall	_print_string_serial
  1738                           
  1739                           ;main.c: 230: byte_to_hex(usb_drive_size3);
  1740  021A  0872               	movf	_usb_drive_size3,w
  1741  021B  118A  21F0  118A   	fcall	_byte_to_hex
  1742                           
  1743                           ;main.c: 231: uart_send(hex_char_high);
  1744  021E  0876               	movf	_hex_char_high,w
  1745  021F  118A  2570  118A   	fcall	_uart_send
  1746                           
  1747                           ;main.c: 232: uart_send(hex_char_low);
  1748  0222  0875               	movf	_hex_char_low,w
  1749  0223  118A  2570  118A   	fcall	_uart_send
  1750                           
  1751                           ;main.c: 233: byte_to_hex(usb_drive_size2);
  1752  0226  0873               	movf	_usb_drive_size2,w
  1753  0227  118A  21F0  118A   	fcall	_byte_to_hex
  1754                           
  1755                           ;main.c: 234: uart_send(hex_char_high);
  1756  022A  0876               	movf	_hex_char_high,w
  1757  022B  118A  2570  118A   	fcall	_uart_send
  1758                           
  1759                           ;main.c: 235: uart_send(hex_char_low);
  1760  022E  0875               	movf	_hex_char_low,w
  1761  022F  118A  2570  118A   	fcall	_uart_send
  1762                           
  1763                           ;main.c: 236: byte_to_hex(usb_drive_size1);
  1764  0232  0874               	movf	_usb_drive_size1,w
  1765  0233  118A  21F0  118A   	fcall	_byte_to_hex
  1766                           
  1767                           ;main.c: 237: uart_send(hex_char_high);
  1768  0236  0876               	movf	_hex_char_high,w
  1769  0237  118A  2570  118A   	fcall	_uart_send
  1770                           
  1771                           ;main.c: 238: uart_send(hex_char_low);
  1772  023A  0875               	movf	_hex_char_low,w
  1773  023B  118A  2570  118A   	fcall	_uart_send
  1774                           
  1775                           ;main.c: 239: uart_send('0');
  1776  023E  3030               	movlw	48
  1777  023F  118A  2570  118A   	fcall	_uart_send
  1778                           
  1779                           ;main.c: 240: uart_send('0');
  1780  0242  3030               	movlw	48
  1781  0243  118A  2570  118A   	fcall	_uart_send
  1782                           
  1783                           ;main.c: 241: uart_send('\n');
  1784  0246  300A               	movlw	10
  1785  0247  118A  2570  118A   	fcall	_uart_send
  1786  024A  0008               	return
  1787  024B                     __end_of_print_capacity:	
  1788                           
  1789                           	psect	text5
  1790  01B4                     __ptext5:	
  1791 ;; *************** function _print_string_serial *****************
  1792 ;; Defined at:
  1793 ;;		line 205 in file "main.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  string          1    wreg     PTR const unsigned char 
  1796 ;;		 -> STR_9(12), str_cmd_mode(14), STR_8(10), STR_6(9), 
  1797 ;;		 -> STR_5(10), STR_4(17), STR_3(13), STR_2(16), 
  1798 ;;		 -> STR_1(17), str_timeout(10), 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  string          1    1[BANK1 ] PTR const unsigned char 
  1801 ;;		 -> STR_9(12), str_cmd_mode(14), STR_8(10), STR_6(9), 
  1802 ;;		 -> STR_5(10), STR_4(17), STR_3(13), STR_2(16), 
  1803 ;;		 -> STR_1(17), str_timeout(10), 
  1804 ;;  i               1    0[BANK1 ] unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/100
  1811 ;;		On exit  : 300/100
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         0       0       0       0       0
  1815 ;;      Locals:         0       0       2       0       0
  1816 ;;      Temps:          0       1       0       0       0
  1817 ;;      Totals:         0       1       2       0       0
  1818 ;;Total ram usage:        3 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    3
  1821 ;; This function calls:
  1822 ;;		_uart_send
  1823 ;; This function is called by:
  1824 ;;		_print_capacity
  1825 ;;		_print_query
  1826 ;;		_usb_autoconfig
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           
  1832                           ;psect for function _print_string_serial
  1833  01B4                     _print_string_serial:	
  1834                           
  1835                           ;incstack = 0
  1836                           ; Regs used in _print_string_serial: [allreg]
  1837                           ;print_string_serial@string stored from wreg
  1838  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  1839  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  1840  01B6  00E1               	movwf	print_string_serial@string^(0+128)
  1841                           
  1842                           ;main.c: 207: unsigned char i = 0;
  1843  01B7  01E0               	clrf	print_string_serial@i^(0+128)
  1844  01B8                     l2074:	
  1845                           ;main.c: 208: while(string[i])
  1846                           
  1847  01B8  0860               	movf	print_string_serial@i^(0+128),w
  1848  01B9  0761               	addwf	print_string_serial@string^(0+128),w
  1849  01BA  0084               	movwf	4
  1850  01BB  118A  2002  118A   	fcall	stringdir
  1851  01BE  3A00               	xorlw	0
  1852  01BF  1903               	btfsc	3,2
  1853  01C0  0008               	return
  1854                           
  1855                           ;main.c: 209: {;main.c: 210: uart_send(string[i]);
  1856  01C1  0860               	movf	print_string_serial@i^(0+128),w
  1857  01C2  0761               	addwf	print_string_serial@string^(0+128),w
  1858  01C3  0084               	movwf	4
  1859  01C4  118A  2002  118A   	fcall	stringdir
  1860  01C7  118A  2570  118A   	fcall	_uart_send
  1861                           
  1862                           ;main.c: 211: ++i;
  1863  01CA  3001               	movlw	1
  1864  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1865  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1866  01CD  00EC               	movwf	??_print_string_serial
  1867  01CE  086C               	movf	??_print_string_serial,w
  1868  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  1869  01D0  07E0               	addwf	print_string_serial@i^(0+128),f
  1870  01D1  29B8               	goto	l2074
  1871  01D2                     __end_of_print_string_serial:	
  1872                           
  1873                           	psect	text6
  1874  0298                     __ptext6:	
  1875 ;; *************** function _fifo_push *****************
  1876 ;; Defined at:
  1877 ;;		line 117 in file "main.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  data            1    wreg     unsigned char 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  data            1    1[COMMON] unsigned char 
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      unsigned char 
  1884 ;; Registers used:
  1885 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 300/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1891 ;;      Params:         0       0       0       0       0
  1892 ;;      Locals:         1       0       0       0       0
  1893 ;;      Temps:          1       0       0       0       0
  1894 ;;      Totals:         2       0       0       0       0
  1895 ;;Total ram usage:        2 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		Interrupt level 1
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function _fifo_push
  1906  0298                     _fifo_push:	
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _fifo_push: [wreg-fsr0h+status,2+status,0]
  1910                           ;fifo_push@data stored from wreg
  1911  0298  00F8               	movwf	fifo_push@data
  1912                           
  1913                           ;main.c: 119: switch(fifo_write_bank)
  1914  0299  2AC5               	goto	l1080
  1915  029A                     l1066:	
  1916                           
  1917                           ;main.c: 122: case 1:;main.c: 123: fifo_bank_A[fifo_write_idx & 0x3F] = data;
  1918  029A  0878               	movf	fifo_push@data,w
  1919  029B  00F7               	movwf	??_fifo_push
  1920  029C  0870               	movf	_fifo_write_idx,w
  1921  029D  393F               	andlw	63
  1922  029E  3E90               	addlw	(low (_fifo_bank_A| (0+256)))& (0+255)
  1923  029F  2AC0               	goto	L9
  1924  02A0                     l1068:	
  1925                           ;main.c: 124: break;
  1926                           
  1927                           
  1928                           ;main.c: 126: case 3:;main.c: 127: fifo_bank_B[fifo_write_idx & 0x3F] = data;
  1929  02A0  0878               	movf	fifo_push@data,w
  1930  02A1  00F7               	movwf	??_fifo_push
  1931  02A2  0870               	movf	_fifo_write_idx,w
  1932  02A3  393F               	andlw	63
  1933  02A4  3E10               	addlw	(low (_fifo_bank_B| (0+256)))& (0+255)
  1934  02A5  2AC0               	goto	L9
  1935  02A6                     l1070:	
  1936                           ;main.c: 128: break;
  1937                           
  1938                           
  1939                           ;main.c: 130: fifo_bank_C[fifo_write_idx & 0x1F] = data;
  1940  02A6  0878               	movf	fifo_push@data,w
  1941  02A7  00F7               	movwf	??_fifo_push
  1942  02A8  0870               	movf	_fifo_write_idx,w
  1943  02A9  391F               	andlw	31
  1944  02AA  3E20               	addlw	(low (_fifo_bank_C| 0))& (0+255)
  1945  02AB  2AB7               	goto	L11
  1946  02AC                     l1072:	
  1947                           ;main.c: 131: break;
  1948                           
  1949                           
  1950                           ;main.c: 133: fifo_bank_D[fifo_write_idx & 0x1F] = data;
  1951  02AC  0878               	movf	fifo_push@data,w
  1952  02AD  00F7               	movwf	??_fifo_push
  1953  02AE  0870               	movf	_fifo_write_idx,w
  1954  02AF  391F               	andlw	31
  1955  02B0  3EC0               	addlw	(low (_fifo_bank_D| 0))& (0+255)
  1956  02B1  2AB7               	goto	L11
  1957  02B2                     l1074:	
  1958                           ;main.c: 134: break;
  1959                           
  1960                           
  1961                           ;main.c: 136: fifo_bank_E[fifo_write_idx & 0x1F] = data;
  1962  02B2  0878               	movf	fifo_push@data,w
  1963  02B3  00F7               	movwf	??_fifo_push
  1964  02B4  0870               	movf	_fifo_write_idx,w
  1965  02B5  391F               	andlw	31
  1966  02B6  3EA0               	addlw	(low (_fifo_bank_E| 0))& (0+255)
  1967  02B7                     L11:	
  1968  02B7  0084               	movwf	4
  1969  02B8  0877               	movf	??_fifo_push,w
  1970  02B9  1383               	bcf	3,7	;select IRP bank1
  1971  02BA  2AC3               	goto	L8
  1972  02BB                     l1076:	
  1973                           ;main.c: 137: break;
  1974                           
  1975                           
  1976                           ;main.c: 139: fifo_bank_F[fifo_write_idx & 0x1F] = data;
  1977  02BB  0878               	movf	fifo_push@data,w
  1978  02BC  00F7               	movwf	??_fifo_push
  1979  02BD  0870               	movf	_fifo_write_idx,w
  1980  02BE  391F               	andlw	31
  1981  02BF  3ED0               	addlw	(low (_fifo_bank_F| (0+256)))& (0+255)
  1982  02C0                     L9:	
  1983  02C0  0084               	movwf	4
  1984  02C1  0877               	movf	??_fifo_push,w
  1985  02C2  1783               	bsf	3,7	;select IRP bank3
  1986  02C3                     L8:	
  1987  02C3  0080               	movwf	0
  1988                           
  1989                           ;main.c: 140: break;
  1990  02C4  2AE1               	goto	l1082
  1991  02C5                     l1080:	
  1992  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1993  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1994  02C7  0841               	movf	_fifo_write_bank,w
  1995                           
  1996                           ; Switch size 1, requested type "simple"
  1997                           ; Number of cases is 8, Range of values is 0 to 7
  1998                           ; switch strategies available:
  1999                           ; Name         Instructions Cycles
  2000                           ; direct_byte           23     7 (fixed)
  2001                           ; simple_byte           25    13 (average)
  2002                           ; jumptable            260     6 (fixed)
  2003                           ;	Chosen strategy is simple_byte
  2004  02C8  3A00               	xorlw	0	; case 0
  2005  02C9  1903               	skipnz
  2006  02CA  2A9A               	goto	l1066
  2007  02CB  3A01               	xorlw	1	; case 1
  2008  02CC  1903               	skipnz
  2009  02CD  2A9A               	goto	l1066
  2010  02CE  3A03               	xorlw	3	; case 2
  2011  02CF  1903               	skipnz
  2012  02D0  2AA0               	goto	l1068
  2013  02D1  3A01               	xorlw	1	; case 3
  2014  02D2  1903               	skipnz
  2015  02D3  2AA0               	goto	l1068
  2016  02D4  3A07               	xorlw	7	; case 4
  2017  02D5  1903               	skipnz
  2018  02D6  2AA6               	goto	l1070
  2019  02D7  3A01               	xorlw	1	; case 5
  2020  02D8  1903               	skipnz
  2021  02D9  2AAC               	goto	l1072
  2022  02DA  3A03               	xorlw	3	; case 6
  2023  02DB  1903               	skipnz
  2024  02DC  2AB2               	goto	l1074
  2025  02DD  3A01               	xorlw	1	; case 7
  2026  02DE  1903               	skipnz
  2027  02DF  2ABB               	goto	l1076
  2028  02E0  2AE1               	goto	l1082
  2029  02E1                     l1082:	
  2030                           
  2031                           ;main.c: 142: ++fifo_write_idx;
  2032  02E1  3001               	movlw	1
  2033  02E2  00F7               	movwf	??_fifo_push
  2034  02E3  0877               	movf	??_fifo_push,w
  2035  02E4  07F0               	addwf	_fifo_write_idx,f
  2036                           
  2037                           ;main.c: 143: if(!(fifo_write_idx & 0x1F))
  2038  02E5  0870               	movf	_fifo_write_idx,w
  2039  02E6  391F               	andlw	31
  2040  02E7  1D03               	btfss	3,2
  2041  02E8  2AED               	goto	l165
  2042                           
  2043                           ;main.c: 144: {;main.c: 145: ++fifo_write_bank;
  2044  02E9  3001               	movlw	1
  2045  02EA  00F7               	movwf	??_fifo_push
  2046  02EB  0877               	movf	??_fifo_push,w
  2047  02EC  07C1               	addwf	_fifo_write_bank,f
  2048  02ED                     l165:	
  2049                           
  2050                           ;main.c: 146: };main.c: 147: ++fifo_num_bytes;
  2051  02ED  3001               	movlw	1
  2052  02EE  00F7               	movwf	??_fifo_push
  2053  02EF  0877               	movf	??_fifo_push,w
  2054  02F0  07C0               	addwf	_fifo_num_bytes,f
  2055                           
  2056                           ;main.c: 148: return fifo_num_bytes;
  2057  02F1  0840               	movf	_fifo_num_bytes,w
  2058  02F2  0008               	return
  2059  02F3                     __end_of_fifo_push:	
  2060                           
  2061                           	psect	text7
  2062  024B                     __ptext7:	
  2063 ;; *************** function _fifo_pop *****************
  2064 ;; Defined at:
  2065 ;;		line 151 in file "main.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;		None
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  temp            1    3[COMMON] unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      unsigned char 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 300/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2079 ;;      Params:         0       0       0       0       0
  2080 ;;      Locals:         1       0       0       0       0
  2081 ;;      Temps:          1       0       0       0       0
  2082 ;;      Totals:         2       0       0       0       0
  2083 ;;Total ram usage:        2 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		Interrupt level 1
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           
  2093                           ;psect for function _fifo_pop
  2094  024B                     _fifo_pop:	
  2095                           
  2096                           ;main.c: 153: unsigned char temp;;main.c: 154: switch(fifo_read_bank)
  2097                           
  2098                           ;incstack = 0
  2099                           ; Regs used in _fifo_pop: [wreg-fsr0h+status,2+status,0]
  2100  024B  2A6C               	goto	l1108
  2101  024C                     l1094:	
  2102                           
  2103                           ;main.c: 157: case 1:;main.c: 158: temp = fifo_bank_A[fifo_read_idx & 0x3F];
  2104  024C  0871               	movf	_fifo_read_idx,w
  2105  024D  393F               	andlw	63
  2106  024E  3E90               	addlw	(low (_fifo_bank_A| (0+256)))& (0+255)
  2107  024F  2A65               	goto	L17
  2108  0250                     l1096:	
  2109                           ;main.c: 159: break;
  2110                           
  2111                           
  2112                           ;main.c: 161: case 3:;main.c: 162: temp = fifo_bank_B[fifo_read_idx & 0x3F];
  2113  0250  0871               	movf	_fifo_read_idx,w
  2114  0251  393F               	andlw	63
  2115  0252  3E10               	addlw	(low (_fifo_bank_B| (0+256)))& (0+255)
  2116  0253  2A65               	goto	L17
  2117  0254                     l1098:	
  2118                           ;main.c: 163: break;
  2119                           
  2120                           
  2121                           ;main.c: 165: temp = fifo_bank_C[fifo_read_idx & 0x1F];
  2122  0254  0871               	movf	_fifo_read_idx,w
  2123  0255  391F               	andlw	31
  2124  0256  3E20               	addlw	(low (_fifo_bank_C| 0))& (0+255)
  2125  0257  2A5F               	goto	L19
  2126  0258                     l1100:	
  2127                           ;main.c: 166: break;
  2128                           
  2129                           
  2130                           ;main.c: 168: temp = fifo_bank_D[fifo_read_idx & 0x1F];
  2131  0258  0871               	movf	_fifo_read_idx,w
  2132  0259  391F               	andlw	31
  2133  025A  3EC0               	addlw	(low (_fifo_bank_D| 0))& (0+255)
  2134  025B  2A5F               	goto	L19
  2135  025C                     l1102:	
  2136                           ;main.c: 169: break;
  2137                           
  2138                           
  2139                           ;main.c: 171: temp = fifo_bank_E[fifo_read_idx & 0x1F];
  2140  025C  0871               	movf	_fifo_read_idx,w
  2141  025D  391F               	andlw	31
  2142  025E  3EA0               	addlw	(low (_fifo_bank_E| 0))& (0+255)
  2143  025F                     L19:	
  2144  025F  0084               	movwf	4
  2145  0260  1383               	bcf	3,7	;select IRP bank1
  2146  0261  2A67               	goto	L16
  2147  0262                     l1104:	
  2148                           ;main.c: 172: break;
  2149                           
  2150                           
  2151                           ;main.c: 174: temp = fifo_bank_F[fifo_read_idx & 0x1F];
  2152  0262  0871               	movf	_fifo_read_idx,w
  2153  0263  391F               	andlw	31
  2154  0264  3ED0               	addlw	(low (_fifo_bank_F| (0+256)))& (0+255)
  2155  0265                     L17:	
  2156  0265  0084               	movwf	4
  2157  0266  1783               	bsf	3,7	;select IRP bank3
  2158  0267                     L16:	
  2159  0267  0800               	movf	0,w
  2160  0268  00F9               	movwf	??_fifo_pop
  2161  0269  0879               	movf	??_fifo_pop,w
  2162  026A  00FA               	movwf	fifo_pop@temp
  2163                           
  2164                           ;main.c: 175: break;
  2165  026B  2A88               	goto	l1110
  2166  026C                     l1108:	
  2167  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2168  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2169  026E  0842               	movf	_fifo_read_bank,w
  2170                           
  2171                           ; Switch size 1, requested type "simple"
  2172                           ; Number of cases is 8, Range of values is 0 to 7
  2173                           ; switch strategies available:
  2174                           ; Name         Instructions Cycles
  2175                           ; direct_byte           23     7 (fixed)
  2176                           ; simple_byte           25    13 (average)
  2177                           ; jumptable            260     6 (fixed)
  2178                           ;	Chosen strategy is simple_byte
  2179  026F  3A00               	xorlw	0	; case 0
  2180  0270  1903               	skipnz
  2181  0271  2A4C               	goto	l1094
  2182  0272  3A01               	xorlw	1	; case 1
  2183  0273  1903               	skipnz
  2184  0274  2A4C               	goto	l1094
  2185  0275  3A03               	xorlw	3	; case 2
  2186  0276  1903               	skipnz
  2187  0277  2A50               	goto	l1096
  2188  0278  3A01               	xorlw	1	; case 3
  2189  0279  1903               	skipnz
  2190  027A  2A50               	goto	l1096
  2191  027B  3A07               	xorlw	7	; case 4
  2192  027C  1903               	skipnz
  2193  027D  2A54               	goto	l1098
  2194  027E  3A01               	xorlw	1	; case 5
  2195  027F  1903               	skipnz
  2196  0280  2A58               	goto	l1100
  2197  0281  3A03               	xorlw	3	; case 6
  2198  0282  1903               	skipnz
  2199  0283  2A5C               	goto	l1102
  2200  0284  3A01               	xorlw	1	; case 7
  2201  0285  1903               	skipnz
  2202  0286  2A62               	goto	l1104
  2203  0287  2A88               	goto	l1110
  2204  0288                     l1110:	
  2205                           
  2206                           ;main.c: 177: ++fifo_read_idx;
  2207  0288  3001               	movlw	1
  2208  0289  00F9               	movwf	??_fifo_pop
  2209  028A  0879               	movf	??_fifo_pop,w
  2210  028B  07F1               	addwf	_fifo_read_idx,f
  2211                           
  2212                           ;main.c: 178: if(!(fifo_read_idx & 0x1F))
  2213  028C  0871               	movf	_fifo_read_idx,w
  2214  028D  391F               	andlw	31
  2215  028E  1D03               	btfss	3,2
  2216  028F  2A94               	goto	l179
  2217                           
  2218                           ;main.c: 179: {;main.c: 180: ++fifo_read_bank;
  2219  0290  3001               	movlw	1
  2220  0291  00F9               	movwf	??_fifo_pop
  2221  0292  0879               	movf	??_fifo_pop,w
  2222  0293  07C2               	addwf	_fifo_read_bank,f
  2223  0294                     l179:	
  2224                           
  2225                           ;main.c: 181: };main.c: 182: --fifo_num_bytes;
  2226  0294  3001               	movlw	1
  2227  0295  02C0               	subwf	_fifo_num_bytes,f
  2228                           
  2229                           ;main.c: 183: return temp;
  2230  0296  087A               	movf	fifo_pop@temp,w
  2231  0297  0008               	return
  2232  0298                     __end_of_fifo_pop:	
  2233                           
  2234                           	psect	text8
  2235  01F0                     __ptext8:	
  2236 ;; *************** function _byte_to_hex *****************
  2237 ;; Defined at:
  2238 ;;		line 186 in file "main.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  data            1    wreg     unsigned char 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  data            1    2[BANK0 ] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 300/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2252 ;;      Params:         0       0       0       0       0
  2253 ;;      Locals:         0       1       0       0       0
  2254 ;;      Temps:          0       2       0       0       0
  2255 ;;      Totals:         0       3       0       0       0
  2256 ;;Total ram usage:        3 bytes
  2257 ;; Hardware stack levels used:    2
  2258 ;; Hardware stack levels required when called:    2
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_print_capacity
  2263 ;;		_print_query
  2264 ;;		_usb_autoconfig
  2265 ;;		_main
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           
  2270                           ;psect for function _byte_to_hex
  2271  01F0                     _byte_to_hex:	
  2272                           
  2273                           ;incstack = 0
  2274 ;; using string table level
  2275                           ; Regs used in _byte_to_hex: [wreg-fsr0h+status,2+status,0+pclath]
  2276                           ;byte_to_hex@data stored from wreg
  2277  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2278  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2279  01F2  00EB               	movwf	byte_to_hex@data
  2280                           
  2281                           ;main.c: 188: hex_char_low = hex_table[data & (unsigned char)0x0F];
  2282  01F3  086B               	movf	byte_to_hex@data,w
  2283  01F4  390F               	andlw	15
  2284  01F5  3E01               	addlw	low ((_hex_table-__stringbase)| (0+32768))
  2285  01F6  0084               	movwf	4
  2286  01F7  118A  2002  118A   	fcall	stringdir
  2287  01FA  00E9               	movwf	??_byte_to_hex
  2288  01FB  0869               	movf	??_byte_to_hex,w
  2289  01FC  00F5               	movwf	_hex_char_low
  2290                           
  2291                           ;main.c: 189: data = data >> 4;
  2292  01FD  086B               	movf	byte_to_hex@data,w
  2293  01FE  00E9               	movwf	??_byte_to_hex
  2294  01FF  3004               	movlw	4
  2295  0200                     u43_25:	
  2296  0200  1003               	clrc
  2297  0201  0CE9               	rrf	??_byte_to_hex,f
  2298  0202  3EFF               	addlw	-1
  2299  0203  1D03               	skipz
  2300  0204  2A00               	goto	u43_25
  2301  0205  0869               	movf	??_byte_to_hex,w
  2302  0206  00EA               	movwf	??_byte_to_hex+1
  2303  0207  086A               	movf	??_byte_to_hex+1,w
  2304  0208  00EB               	movwf	byte_to_hex@data
  2305                           
  2306                           ;main.c: 190: hex_char_high = hex_table[data & (unsigned char)0x0F];
  2307  0209  086B               	movf	byte_to_hex@data,w
  2308  020A  390F               	andlw	15
  2309  020B  3E01               	addlw	low ((_hex_table-__stringbase)| (0+32768))
  2310  020C  0084               	movwf	4
  2311  020D  118A  2002         	fcall	stringdir
  2312  020F  00E9               	movwf	??_byte_to_hex
  2313  0210  0869               	movf	??_byte_to_hex,w
  2314  0211  00F6               	movwf	_hex_char_high
  2315  0212  0008               	return
  2316  0213                     __end_of_byte_to_hex:	
  2317  007E                     btemp	set	126	;btemp
  2318  007E                     wtemp0	set	126


Data Sizes:
    Strings     112
    Constant    40
    Data        8
    BSS         296
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      11
    BANK0            80      4      77
    BANK1            80      7      71
    BANK3            96      0      96
    BANK2            96      0      64

Pointer List with Targets:

    print_string_serial@string	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_9(CODE[12]), str_cmd_mode(CODE[14]), STR_8(CODE[10]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[17]), STR_3(CODE[13]), STR_2(CODE[16]), 
		 -> STR_1(CODE[17]), str_timeout(CODE[10]), 

    print_string_lcd@string	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_7(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _fifo_push in COMMON

    None.

Critical Paths under _fifo_pop in COMMON

    None.

Critical Paths under _byte_to_hex in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_print_string_lcd
    _main->_print_string_serial
    _usb_autoconfig->_print_string_serial
    _print_query->_print_string_serial
    _print_capacity->_print_string_serial

Critical Paths under _fifo_push in BANK0

    None.

Critical Paths under _fifo_pop in BANK0

    None.

Critical Paths under _byte_to_hex in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_usb_autoconfig
    _usb_autoconfig->_print_string_serial
    _print_query->_print_string_serial
    _print_capacity->_print_string_serial

Critical Paths under _fifo_push in BANK1

    None.

Critical Paths under _fifo_pop in BANK1

    None.

Critical Paths under _byte_to_hex in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fifo_push in BANK3

    None.

Critical Paths under _fifo_pop in BANK3

    None.

Critical Paths under _byte_to_hex in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fifo_push in BANK2

    None.

Critical Paths under _fifo_pop in BANK2

    None.

Critical Paths under _byte_to_hex in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5622
                                              4 BANK1      3     3      0
                        _byte_to_hex
                       _delay_millis
                         _initialize
                         _lcd_clear2
                          _lcd_line2
                           _lcd_putc
                          _mem_clear
                           _mem_dump
                     _print_capacity
                         _print_name
                        _print_query
                   _print_string_lcd
                _print_string_serial
                    _print_test_data
                          _uart_read
                          _uart_send
                     _usb_autoconfig
                   _usb_disk_connect
                     _usb_disk_mount
                     _usb_file_close
                    _usb_file_create
                      _usb_file_open
                      _usb_file_read
                  _usb_get_file_size
                     _usb_get_status
                    _usb_get_version
                      _usb_reset_all
                  _usb_set_file_name
                       _usb_set_mode
 ---------------------------------------------------------------------------------
 (1) _usb_set_file_name                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_reset_all                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_file_size                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_read                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_open                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_create                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_close                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_autoconfig                                       2     2      0    2028
                                              2 BANK1      2     2      0
                        _byte_to_hex
                       _delay_millis
                        _print_query
                _print_string_serial
                          _uart_send
                   _usb_check_exists
                   _usb_disk_connect
                     _usb_disk_mount
                     _usb_get_status
                    _usb_get_version
                       _usb_set_mode
 ---------------------------------------------------------------------------------
 (1) _usb_set_mode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_version                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_status                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_disk_mount                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_disk_connect                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _usb_check_exists                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _print_query                                          0     0      0     852
                        _byte_to_hex
                _print_string_serial
                          _uart_send
                     _usb_disk_query
 ---------------------------------------------------------------------------------
 (3) _usb_disk_query                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _delay_millis                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_test_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_string_lcd                                     3     3      0     219
                                              3 BANK0      1     1      0
                                              0 BANK1      2     2      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_name                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_capacity                                       0     0      0     852
                        _byte_to_hex
                _print_string_serial
                          _uart_send
                  _usb_disk_capacity
 ---------------------------------------------------------------------------------
 (2) _usb_disk_capacity                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _print_string_serial                                  3     3      0     570
                                              3 BANK0      1     1      0
                                              0 BANK1      2     2      0
                          _uart_send
 ---------------------------------------------------------------------------------
 (2) _uart_send                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _byte_to_hex                                          3     3      0     282
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _mem_dump                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mem_clear                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_line2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_clear2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fifo_push                                            2     2      0     132
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fifo_pop                                             2     2      0      28
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _byte_to_hex                                          3     3      0     282
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _byte_to_hex
   _delay_millis
   _initialize
   _lcd_clear2
   _lcd_line2
   _lcd_putc
   _mem_clear
   _mem_dump
   _print_capacity
     _byte_to_hex
     _print_string_serial
       _uart_send
     _uart_send
     _usb_disk_capacity
   _print_name
   _print_query
     _byte_to_hex
     _print_string_serial
       _uart_send
     _uart_send
     _usb_disk_query
   _print_string_lcd
     _lcd_putc
   _print_string_serial
     _uart_send
   _print_test_data
   _uart_read
   _uart_send
   _usb_autoconfig
     _byte_to_hex
     _delay_millis
     _print_query
       _byte_to_hex
       _print_string_serial
         _uart_send
       _uart_send
       _usb_disk_query
     _print_string_serial
       _uart_send
     _uart_send
     _usb_check_exists
     _usb_disk_connect
     _usb_disk_mount
     _usb_get_status
     _usb_get_version
     _usb_set_mode
   _usb_disk_connect
   _usb_disk_mount
   _usb_file_close
   _usb_file_create
   _usb_file_open
   _usb_file_read
   _usb_get_file_size
   _usb_get_status
   _usb_get_version
   _usb_reset_all
   _usb_set_file_name
   _usb_set_mode

 _fifo_push (ROOT)

 _fifo_pop (ROOT)

 _byte_to_hex (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      60      10      100.0%
BITBANK3            60      0       0       9        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      40      12       66.7%
BITBANK2            60      0       0      11        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      7      47       8       88.8%
BITBANK1            50      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     13F       6        0.0%
ABS                  0      0     13F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 28 20:16:10 2023

                           pc 0002                   __CFG_CP$OFF 0000                            fsr 0004  
               _hex_char_high 0076                 _usb_file_read 077C                 _usb_file_open 06A6  
                         l165 02ED                           l179 0294              ?_print_test_data 0077  
                         fsr0 0004                           indf 0000                  __CFG_BORV$42 0000  
                __CFG_FOSC$XT 0000           _usb_bytes_read_high 0051                _usb_file_close 06AB  
                _usb_set_mode 0710                          l1100 0258                          l1102 025C  
                        l1110 0288                          l1104 0262                          l1108 026C  
                        l1070 02A6                          l1072 02AC                          l1080 02C5  
                        l1074 02B2                          l1082 02E1                          l1066 029A  
                        l2202 0411                          l1076 02BB                          l1068 02A0  
                        l2220 042C                          l1094 024C                          l2118 01D6  
                        l2230 0442                          l2222 0430                          l2214 041F  
                        l2206 0417                          l1096 0250                          l2240 045C  
                        l2232 0447                          l2224 0434                          l2208 0419  
                        l1098 0254                          l2074 01B8                          l2242 0460  
                        l2234 044B                          l2226 0438                          l2218 0427  
                        l2260 049A                          l2244 0467                          l2236 044F  
                        l2228 043D                _usb_disk_mount 0706                          l2270 04AA  
                        l2262 049E                          l2246 046B                          l2238 0458  
                        l2264 04A2                          l2248 046F                          l2272 04E8  
                        l2266 04A6                          l2258 0496                          l2196 0501  
                        l2198 040A                _usb_disk_query 074D                          STR_1 0041  
                        STR_2 0052                          STR_3 0062                          STR_4 0030  
                        STR_5 0085                          STR_6 008F                          STR_7 0098  
                        STR_8 007B                          STR_9 006F                _usb_get_status 06FF  
                        _main 03EF            usb_autoconfig@temp 00E3                          btemp 007E  
               __CFG_BOREN$ON 0000                          start 0000                 __CFG_IESO$OFF 0000  
                 _str_timeout 0026                 __CFG_MCLRE$ON 0000               _usb_file_create 06EC  
               _usb_reset_all 068E                _usb_autoconfig 0369                ?_usb_file_read 0077  
              ?_usb_file_open 0077                         ?_main 0077                  ?_byte_to_hex 0077  
               __CFG_WDTE$OFF 0000                  _str_cmd_mode 0018                         u43_25 0200  
               __CFG_PWRTE$ON 0000             ?_print_string_lcd 0077                __CFG_FCMEN$OFF 0000  
             _usb_get_version 0718            ??_print_string_lcd 006C                         _temp3 0060  
                       _temp4 005F                         _temp5 005E                         pclath 000A  
                       status 0003                         wtemp0 007E               _usb_free_space1 004F  
             _usb_free_space2 004E               _usb_free_space3 004D             _usb_target_status 0049  
             __initialization 07BE        __end_of_usb_autoconfig 03EF                ?_usb_reset_all 0077  
                __end_of_main 051C               _usb_drive_size1 0074               _usb_drive_size2 0073  
             _usb_drive_size3 0072             _usb_set_file_name 0693            ?_usb_set_file_name 0077  
                      ??_main 00E4              _usb_disk_connect 070B               ?_usb_file_close 0077  
         ??_usb_set_file_name 0077               __CFG_CCP2MX$RC1 0000               ?_usb_disk_mount 0077  
             ?_usb_disk_query 0077               ?_usb_get_status 0077   __end_of_print_string_serial 01D2  
            __end_of_fifo_pop 0298               ?_usb_autoconfig 0077               ??_usb_file_read 0077  
             ??_usb_file_open 0077              ??_print_capacity 0077               __CFG_BORSEN$OFF 0000  
     __end_of__initialization 07FD                  ?_print_query 0077                _tape_size_high 0055  
             ??_usb_reset_all 0077                __pcstackCOMMON 0077                  __pidataBANK0 01AC  
        __size_of_byte_to_hex 0023            __size_of_fifo_push 005B             _usb_disk_capacity 072D  
          ?_usb_disk_capacity 0077                    __pbssBANK0 0020                    __pbssBANK1 00A0  
                  __pbssBANK2 0110                    __pbssBANK3 0190             _usb_file_size_low 0052  
            ?_usb_file_create 0077           ??_usb_disk_capacity 0077                  _delay_millis 0669  
           _usb_get_file_size 06D1                    __pmaintext 03EF            ?_usb_get_file_size 0077  
                  _gen_count2 0058                    _gen_count3 0057                    _gen_count4 0056  
            ?_usb_get_version 0077           ??_usb_get_file_size 0077               byte_to_hex@data 006B  
                  _lcd_clear2 0622                 _ram_address_h 005D                 _ram_address_l 005C  
                   ?_fifo_pop 0077                     ?_lcd_putc 0077                    __stringtab 0002  
                  _ldel_count 005A                     ?_mem_dump 0077     __size_of_print_string_lcd 001E  
           __end_of_fifo_push 02F3        print_string_lcd@string 00E0             __end_of_hex_table 0018  
            ??_usb_file_close 0077                    _initialize 051C                       __ptext1 0369  
                     __ptext2 02F3                       __ptext3 01D2                       __ptext4 0213  
                     __ptext5 01B4                       __ptext6 0298                       __ptext7 024B  
                     __ptext8 01F0              ??_usb_disk_mount 0077              ??_usb_disk_query 0077  
            ??_usb_get_status 0077                    _s_reg_high 0048                    _sdel_count 005B  
                  ??_fifo_pop 0079                       clrloop0 01A5                    ??_lcd_putc 0077  
        end_of_initialization 07FD                    ??_mem_dump 0077              ??_usb_autoconfig 00E2  
        __size_of_print_query 0076             ?_usb_check_exists 0077            ??_usb_check_exists 0077  
                  _print_name 063A                   ?_lcd_clear2 0077                  _hex_char_low 0075  
             _fifo_write_bank 0041            _usb_bytes_read_low 0050             ??_print_test_data 0077  
__size_of_print_string_serial 001E                   ?_initialize 0077           start_initialization 07BE  
               ?_usb_set_mode 0077              _print_string_lcd 01D2                   __pdataBANK0 0061  
               ??_byte_to_hex 0069                   ?_print_name 0077            _usb_file_size_high 0053  
               _tape_size_low 0054                   __pbssCOMMON 0070                     ___latbits 0001  
              ??_usb_set_mode 0077          print_string_serial@i 00E0                 __pcstackBANK0 0069  
               __pcstackBANK1 00E0                 _delay_counter 0044       __size_of_print_capacity 0038  
           __size_of_fifo_pop 004D             ?_usb_disk_connect 0077            ??_usb_disk_connect 0077  
                   _gen_count 0059                     _fifo_push 0298                     _lcd_line2 0609  
          _usb_logical_bytes1 004C            _usb_logical_bytes2 004B            _usb_logical_bytes3 004A  
                   __pstrings 0002                _fifo_read_bank 0042                     _hex_table 0008  
                   _mem_clear 0550             print_string_lcd@i 00E1                   _fifo_bank_A 0190  
                 _fifo_bank_B 0110                   _fifo_bank_C 0020                   _fifo_bank_D 00C0  
                 _fifo_bank_E 00A0                   _fifo_bank_F 01D0           __end_of_byte_to_hex 0213  
                   _s_reg_low 0047                _fifo_num_bytes 0040                     clear_ram0 01A4  
                   _tape_name 0061                     _uart_read 056C                     _uart_send 0570  
                  ?_fifo_push 0077                    ?_lcd_line2 0077                   __stringbase 0007  
                ??_lcd_clear2 0077                _fifo_write_idx 0070                     main@state 00E5  
                  ?_mem_clear 0077           _print_string_serial 01B4               _print_test_data 0675  
               ??_print_query 0077          ?_print_string_serial 0077                    ?_uart_read 0077  
                  ?_uart_send 0077                  ??_initialize 0077     print_string_serial@string 00E1  
          __end_of__stringtab 0008                   _byte_to_hex 01F0             ??_usb_file_create 0077  
    __end_of_print_string_lcd 01F0                      _flag_reg 0043                      _fifo_pop 024B  
              _print_capacity 0213                      _lcd_putc 05D6                 _fifo_read_idx 0071  
                    _mem_dump 055E          __end_of_str_cmd_mode 0026                 __size_of_main 012D  
               ?_delay_millis 0077             ??_usb_get_version 0077         ??_print_string_serial 006C  
         __end_of_print_query 0369       __size_of_usb_autoconfig 0086                   ??_fifo_push 0077  
                 ??_lcd_line2 0077                      main@temp 00E6                  ??_print_name 0077  
                 ??_mem_clear 0077        __end_of_print_capacity 024B                      intlevel1 0000  
              ??_delay_millis 0077                     stringcode 0002                   ??_uart_read 0077  
                 ??_uart_send 0077           __end_of_str_timeout 0030                  _timeout_high 0046  
                    stringdir 0002                      stringtab 0002               ?_print_capacity 0077  
            _usb_check_exists 06E2                   _timeout_low 0045                   _print_query 02F3  
                fifo_pop@temp 007A                 fifo_push@data 0078  

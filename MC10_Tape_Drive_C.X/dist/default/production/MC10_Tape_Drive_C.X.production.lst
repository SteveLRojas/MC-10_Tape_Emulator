

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon May 29 14:49:11 2023

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	16F747
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.05
    28                           ; Generated 20/12/2018 GMT
    29                           ; 
    30                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F747 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  018C                     	;# 
   129                           
   130                           	psect	idataBANK0
   131  01AD                     __pidataBANK0:	
   132                           
   133                           ;initializer for _tape_name
   134  01AD  3444               	retlw	68
   135  01AE  3445               	retlw	69
   136  01AF  3452               	retlw	82
   137  01B0  3447               	retlw	71
   138  01B1  3441               	retlw	65
   139  01B2  344E               	retlw	78
   140  01B3  3451               	retlw	81
   141  01B4  3451               	retlw	81
   142                           
   143                           	psect	strings
   144  0002                     __pstrings:	
   145  0002                     stringtab:	
   146  0002                     __stringtab:	
   147  0002                     stringcode:	
   148                           ;	String table - string pointers are 1 byte each
   149                           
   150  0002                     stringdir:	
   151  0002  3000               	movlw	high stringdir
   152  0003  008A               	movwf	10
   153  0004  0804               	movf	4,w
   154  0005  0A84               	incf	4,f
   155  0006  0782               	addwf	2,f
   156  0007                     __stringbase:	
   157  0007  3400               	retlw	0
   158  0008                     __end_of__stringtab:	
   159  0008                     _hex_table:	
   160  0008  3430               	retlw	48
   161  0009  3431               	retlw	49
   162  000A  3432               	retlw	50
   163  000B  3433               	retlw	51
   164  000C  3434               	retlw	52
   165  000D  3435               	retlw	53
   166  000E  3436               	retlw	54
   167  000F  3437               	retlw	55
   168  0010  3438               	retlw	56
   169  0011  3439               	retlw	57
   170  0012  3441               	retlw	65
   171  0013  3442               	retlw	66
   172  0014  3443               	retlw	67
   173  0015  3444               	retlw	68
   174  0016  3445               	retlw	69
   175  0017  3446               	retlw	70
   176  0018                     __end_of_hex_table:	
   177  0018                     _str_cmd_mode:	
   178  0018  3443               	retlw	67
   179  0019  346F               	retlw	111
   180  001A  346D               	retlw	109
   181  001B  346D               	retlw	109
   182  001C  3461               	retlw	97
   183  001D  346E               	retlw	110
   184  001E  3464               	retlw	100
   185  001F  3420               	retlw	32
   186  0020  346D               	retlw	109
   187  0021  346F               	retlw	111
   188  0022  3464               	retlw	100
   189  0023  3465               	retlw	101
   190  0024  340A               	retlw	10
   191  0025  3400               	retlw	0
   192  0026                     __end_of_str_cmd_mode:	
   193  0026                     _str_timeout:	
   194  0026  3454               	retlw	84
   195  0027  3469               	retlw	105
   196  0028  346D               	retlw	109
   197  0029  3465               	retlw	101
   198  002A  346F               	retlw	111
   199  002B  3475               	retlw	117
   200  002C  3474               	retlw	116
   201  002D  343A               	retlw	58
   202  002E  3420               	retlw	32
   203  002F  3400               	retlw	0
   204  0030                     __end_of_str_timeout:	
   205  0030                     STR_4:	
   206  0030  3455               	retlw	85	;'U'
   207  0031  3453               	retlw	83	;'S'
   208  0032  3442               	retlw	66	;'B'
   209  0033  3420               	retlw	32	;' '
   210  0034  3441               	retlw	65	;'A'
   211  0035  3475               	retlw	117	;'u'
   212  0036  3474               	retlw	116	;'t'
   213  0037  346F               	retlw	111	;'o'
   214  0038  3463               	retlw	99	;'c'
   215  0039  346F               	retlw	111	;'o'
   216  003A  346E               	retlw	110	;'n'
   217  003B  3466               	retlw	102	;'f'
   218  003C  3469               	retlw	105	;'i'
   219  003D  3467               	retlw	103	;'g'
   220  003E  343A               	retlw	58	;':'
   221  003F  340A               	retlw	10
   222  0040  3400               	retlw	0
   223  0041                     STR_1:	
   224  0041  3450               	retlw	80	;'P'
   225  0042  3468               	retlw	104	;'h'
   226  0043  3479               	retlw	121	;'y'
   227  0044  3473               	retlw	115	;'s'
   228  0045  3469               	retlw	105	;'i'
   229  0046  3463               	retlw	99	;'c'
   230  0047  3461               	retlw	97	;'a'
   231  0048  346C               	retlw	108	;'l'
   232  0049  3420               	retlw	32	;' '
   233  004A  3462               	retlw	98	;'b'
   234  004B  3479               	retlw	121	;'y'
   235  004C  3474               	retlw	116	;'t'
   236  004D  3465               	retlw	101	;'e'
   237  004E  3473               	retlw	115	;'s'
   238  004F  343A               	retlw	58	;':'
   239  0050  3420               	retlw	32	;' '
   240  0051  3400               	retlw	0
   241  0052                     STR_2:	
   242  0052  344C               	retlw	76	;'L'
   243  0053  346F               	retlw	111	;'o'
   244  0054  3467               	retlw	103	;'g'
   245  0055  3469               	retlw	105	;'i'
   246  0056  3463               	retlw	99	;'c'
   247  0057  3461               	retlw	97	;'a'
   248  0058  346C               	retlw	108	;'l'
   249  0059  3420               	retlw	32	;' '
   250  005A  3462               	retlw	98	;'b'
   251  005B  3479               	retlw	121	;'y'
   252  005C  3474               	retlw	116	;'t'
   253  005D  3465               	retlw	101	;'e'
   254  005E  3473               	retlw	115	;'s'
   255  005F  343A               	retlw	58	;':'
   256  0060  3420               	retlw	32	;' '
   257  0061  3400               	retlw	0
   258  0062                     STR_3:	
   259  0062  3446               	retlw	70	;'F'
   260  0063  3472               	retlw	114	;'r'
   261  0064  3465               	retlw	101	;'e'
   262  0065  3465               	retlw	101	;'e'
   263  0066  3420               	retlw	32	;' '
   264  0067  3462               	retlw	98	;'b'
   265  0068  3479               	retlw	121	;'y'
   266  0069  3474               	retlw	116	;'t'
   267  006A  3465               	retlw	101	;'e'
   268  006B  3473               	retlw	115	;'s'
   269  006C  343A               	retlw	58	;':'
   270  006D  3420               	retlw	32	;' '
   271  006E  3400               	retlw	0
   272  006F                     STR_9:	
   273  006F  3446               	retlw	70	;'F'
   274  0070  3469               	retlw	105	;'i'
   275  0071  346C               	retlw	108	;'l'
   276  0072  3465               	retlw	101	;'e'
   277  0073  3420               	retlw	32	;' '
   278  0074  3473               	retlw	115	;'s'
   279  0075  3469               	retlw	105	;'i'
   280  0076  347A               	retlw	122	;'z'
   281  0077  3465               	retlw	101	;'e'
   282  0078  343A               	retlw	58	;':'
   283  0079  3420               	retlw	32	;' '
   284  007A  3400               	retlw	0
   285  007B                     STR_8:	
   286  007B  3464               	retlw	100	;'d'
   287  007C  3465               	retlw	101	;'e'
   288  007D  3461               	retlw	97	;'a'
   289  007E  3464               	retlw	100	;'d'
   290  007F  3462               	retlw	98	;'b'
   291  0080  3465               	retlw	101	;'e'
   292  0081  3465               	retlw	101	;'e'
   293  0082  3466               	retlw	102	;'f'
   294  0083  340A               	retlw	10
   295  0084  3400               	retlw	0
   296  0085                     STR_5:	
   297  0085  3456               	retlw	86	;'V'
   298  0086  3465               	retlw	101	;'e'
   299  0087  3472               	retlw	114	;'r'
   300  0088  3473               	retlw	115	;'s'
   301  0089  3469               	retlw	105	;'i'
   302  008A  346F               	retlw	111	;'o'
   303  008B  346E               	retlw	110	;'n'
   304  008C  343A               	retlw	58	;':'
   305  008D  3420               	retlw	32	;' '
   306  008E  3400               	retlw	0
   307  008F                     STR_6:	
   308  008F  3453               	retlw	83	;'S'
   309  0090  3474               	retlw	116	;'t'
   310  0091  3461               	retlw	97	;'a'
   311  0092  3474               	retlw	116	;'t'
   312  0093  3475               	retlw	117	;'u'
   313  0094  3473               	retlw	115	;'s'
   314  0095  343A               	retlw	58	;':'
   315  0096  3420               	retlw	32	;' '
   316  0097  3400               	retlw	0
   317  0098                     STR_7:	
   318  0098  3444               	retlw	68	;'D'
   319  0099  3472               	retlw	114	;'r'
   320  009A  3461               	retlw	97	;'a'
   321  009B  3467               	retlw	103	;'g'
   322  009C  346F               	retlw	111	;'o'
   323  009D  346E               	retlw	110	;'n'
   324  009E  3473               	retlw	115	;'s'
   325  009F  3400               	retlw	0
   326                           
   327                           ; #config settings
   328  0000                     
   329                           	psect	cinit
   330  07BE                     start_initialization:	
   331  07BE                     __initialization:	
   332                           
   333                           ; Initialize objects allocated to BANK0
   334  07BE  118A  21AD  118A   	fcall	__pidataBANK0	;fetch initializer
   335  07C1  00CC               	movwf	__pdataBANK0& (0+127)
   336  07C2  118A  21AE  118A   	fcall	__pidataBANK0+1	;fetch initializer
   337  07C5  00CD               	movwf	(__pdataBANK0+1)& (0+127)
   338  07C6  118A  21AF  118A   	fcall	__pidataBANK0+2	;fetch initializer
   339  07C9  00CE               	movwf	(__pdataBANK0+2)& (0+127)
   340  07CA  118A  21B0  118A   	fcall	__pidataBANK0+3	;fetch initializer
   341  07CD  00CF               	movwf	(__pdataBANK0+3)& (0+127)
   342  07CE  118A  21B1  118A   	fcall	__pidataBANK0+4	;fetch initializer
   343  07D1  00D0               	movwf	(__pdataBANK0+4)& (0+127)
   344  07D2  118A  21B2  118A   	fcall	__pidataBANK0+5	;fetch initializer
   345  07D5  00D1               	movwf	(__pdataBANK0+5)& (0+127)
   346  07D6  118A  21B3  118A   	fcall	__pidataBANK0+6	;fetch initializer
   347  07D9  00D2               	movwf	(__pdataBANK0+6)& (0+127)
   348  07DA  118A  21B4  118A   	fcall	__pidataBANK0+7	;fetch initializer
   349  07DD  00D3               	movwf	(__pdataBANK0+7)& (0+127)
   350                           
   351                           ; Clear objects allocated to BANK3
   352  07DE  1783               	bsf	3,7	;select IRP bank2
   353  07DF  3090               	movlw	low __pbssBANK3
   354  07E0  0084               	movwf	4
   355  07E1  30F0               	movlw	low (__pbssBANK3+96)
   356  07E2  118A  21A5  118A   	fcall	clear_ram0
   357                           
   358                           ; Clear objects allocated to BANK2
   359  07E5  3010               	movlw	low __pbssBANK2
   360  07E6  0084               	movwf	4
   361  07E7  3070               	movlw	low (__pbssBANK2+96)
   362  07E8  118A  21A5  118A   	fcall	clear_ram0
   363                           
   364                           ; Clear objects allocated to BANK1
   365  07EB  1383               	bcf	3,7	;select IRP bank0
   366  07EC  30A0               	movlw	low __pbssBANK1
   367  07ED  0084               	movwf	4
   368  07EE  30E0               	movlw	low (__pbssBANK1+64)
   369  07EF  118A  21A5  118A   	fcall	clear_ram0
   370                           
   371                           ; Clear objects allocated to BANK0
   372  07F2  3020               	movlw	low __pbssBANK0
   373  07F3  0084               	movwf	4
   374  07F4  3041               	movlw	low (__pbssBANK0+33)
   375  07F5  118A  21A5  118A   	fcall	clear_ram0
   376                           
   377                           ; Clear objects allocated to COMMON
   378  07F8  3070               	movlw	low __pbssCOMMON
   379  07F9  0084               	movwf	4
   380  07FA  3077               	movlw	low (__pbssCOMMON+7)
   381  07FB  118A  21A5         	fcall	clear_ram0
   382  07FD                     end_of_initialization:	
   383                           ;End of C runtime variable initialization code
   384                           
   385  07FD                     __end_of__initialization:	
   386  07FD  0183               	clrf	3
   387  07FE  118A  2BC8         	ljmp	_main	;jump to C main() function
   388                           
   389                           	psect	bssCOMMON
   390  0070                     __pbssCOMMON:	
   391  0070                     _fifo_write_idx:	
   392  0070                     	ds	1
   393  0071                     _fifo_read_idx:	
   394  0071                     	ds	1
   395  0072                     _usb_drive_size3:	
   396  0072                     	ds	1
   397  0073                     _usb_drive_size2:	
   398  0073                     	ds	1
   399  0074                     _usb_drive_size1:	
   400  0074                     	ds	1
   401  0075                     _hex_char_low:	
   402  0075                     	ds	1
   403  0076                     _hex_char_high:	
   404  0076                     	ds	1
   405                           
   406                           	psect	bssBANK0
   407  0020                     __pbssBANK0:	
   408  0020                     _fifo_num_bytes:	
   409  0020                     	ds	1
   410  0021                     _fifo_write_bank:	
   411  0021                     	ds	1
   412  0022                     _fifo_read_bank:	
   413  0022                     	ds	1
   414  0023                     _flag_reg:	
   415  0023                     	ds	1
   416  0024                     _delay_counter:	
   417  0024                     	ds	1
   418  0025                     _timeout_low:	
   419  0025                     	ds	1
   420  0026                     _timeout_high:	
   421  0026                     	ds	1
   422  0027                     _s_reg_low:	
   423  0027                     	ds	1
   424  0028                     _s_reg_high:	
   425  0028                     	ds	1
   426  0029                     _usb_target_status:	
   427  0029                     	ds	1
   428  002A                     _usb_logical_bytes3:	
   429  002A                     	ds	1
   430  002B                     _usb_logical_bytes2:	
   431  002B                     	ds	1
   432  002C                     _usb_logical_bytes1:	
   433  002C                     	ds	1
   434  002D                     _usb_free_space3:	
   435  002D                     	ds	1
   436  002E                     _usb_free_space2:	
   437  002E                     	ds	1
   438  002F                     _usb_free_space1:	
   439  002F                     	ds	1
   440  0030                     _usb_bytes_read_low:	
   441  0030                     	ds	1
   442  0031                     _usb_bytes_read_high:	
   443  0031                     	ds	1
   444  0032                     _usb_file_size_low:	
   445  0032                     	ds	1
   446  0033                     _usb_file_size_high:	
   447  0033                     	ds	1
   448  0034                     _tape_size_low:	
   449  0034                     	ds	1
   450  0035                     _tape_size_high:	
   451  0035                     	ds	1
   452  0036                     _gen_count4:	
   453  0036                     	ds	1
   454  0037                     _gen_count3:	
   455  0037                     	ds	1
   456  0038                     _gen_count2:	
   457  0038                     	ds	1
   458  0039                     _gen_count:	
   459  0039                     	ds	1
   460  003A                     _ldel_count:	
   461  003A                     	ds	1
   462  003B                     _sdel_count:	
   463  003B                     	ds	1
   464  003C                     _ram_address_l:	
   465  003C                     	ds	1
   466  003D                     _ram_address_h:	
   467  003D                     	ds	1
   468  003E                     _temp5:	
   469  003E                     	ds	1
   470  003F                     _temp4:	
   471  003F                     	ds	1
   472  0040                     _temp3:	
   473  0040                     	ds	1
   474                           
   475                           	psect	dataBANK0
   476  004C                     __pdataBANK0:	
   477  004C                     _tape_name:	
   478  004C                     	ds	8
   479                           
   480                           	psect	bssBANK1
   481  00A0                     __pbssBANK1:	
   482  00A0                     _fifo_bank_A:	
   483  00A0                     	ds	64
   484                           
   485                           	psect	bssBANK3
   486  0190                     __pbssBANK3:	
   487  0190                     _fifo_bank_B:	
   488  0190                     	ds	96
   489                           
   490                           	psect	bssBANK2
   491  0110                     __pbssBANK2:	
   492  0110                     _fifo_bank_C:	
   493  0110                     	ds	96
   494                           
   495                           	psect	clrtext
   496  01A5                     clear_ram0:	
   497                           ;	Called with FSR containing the base address, and
   498                           ;	W with the last address+1
   499                           
   500  01A5  0064               	clrwdt	;clear the watchdog before getting into this loop
   501  01A6                     clrloop0:	
   502  01A6  0180               	clrf	0	;clear RAM location pointed to by FSR
   503  01A7  0A84               	incf	4,f	;increment pointer
   504  01A8  0604               	xorwf	4,w	;XOR with final address
   505  01A9  1903               	btfsc	3,2	;have we reached the end yet?
   506  01AA  3400               	retlw	0	;all done for this memory range, return
   507  01AB  0604               	xorwf	4,w	;XOR again to restore value
   508  01AC  29A6               	goto	clrloop0	;do the next byte
   509                           
   510                           	psect	cstackCOMMON
   511  0077                     __pcstackCOMMON:	
   512  0077                     ?_lcd_putc:	
   513  0077                     ??_lcd_putc:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0077                     ?_uart_send:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0077                     ??_uart_send:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0077                     ?_usb_disk_capacity:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0077                     ??_usb_disk_capacity:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0077                     ?_usb_disk_query:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0077                     ??_usb_disk_query:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0077                     ?_usb_check_exists:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0077                     ??_usb_check_exists:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0077                     ?_usb_get_version:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0077                     ??_usb_get_version:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0077                     ?_usb_set_mode:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0077                     ??_usb_set_mode:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0077                     ?_delay_millis:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0077                     ??_delay_millis:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0077                     ?_usb_disk_connect:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0077                     ??_usb_disk_connect:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0077                     ?_usb_disk_mount:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0077                     ??_usb_disk_mount:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0077                     ?_usb_get_status:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0077                     ??_usb_get_status:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0077                     ?_initialize:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0077                     ??_initialize:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0077                     ?_lcd_line2:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0077                     ??_lcd_line2:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0077                     ?_uart_read:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0077                     ??_uart_read:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0077                     ?_usb_reset_all:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0077                     ??_usb_reset_all:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0077                     ?_usb_set_file_name:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0077                     ??_usb_set_file_name:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0077                     ?_print_name:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0077                     ??_print_name:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0077                     ?_usb_file_open:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0077                     ??_usb_file_open:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0077                     ?_usb_file_close:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0077                     ??_usb_file_close:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0077                     ?_usb_get_file_size:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0077                     ??_usb_get_file_size:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0077                     ?_usb_file_read:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0077                     ??_usb_file_read:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0077                     ?_usb_file_create:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0077                     ??_usb_file_create:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0077                     ?_mem_clear:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0077                     ??_mem_clear:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0077                     ?_mem_dump:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0077                     ??_mem_dump:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0077                     ?_file_dump:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0077                     ??_file_dump:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0077                     ?_print_test_data:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0077                     ??_print_test_data:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0077                     ?_lcd_clear2:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0077                     ??_lcd_clear2:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0077                     ?_fifo_push:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0077                     ??_fifo_push:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0077                     ?_fifo_pop:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0077                     ?_byte_to_hex:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0077                     ?_print_string_lcd:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0077                     ?_print_string_serial:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0077                     ?_print_capacity:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0077                     ??_print_capacity:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0077                     ?_print_query:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0077                     ??_print_query:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0077                     ?_usb_autoconfig:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0077                     ?_main:	
   706                           ; 1 bytes @ 0x0
   707                           
   708                           
   709                           ; 1 bytes @ 0x0
   710  0077                     	ds	1
   711  0078                     fifo_push@data:	
   712                           
   713                           ; 1 bytes @ 0x1
   714  0078                     	ds	1
   715  0079                     ??_fifo_pop:	
   716                           
   717                           ; 1 bytes @ 0x2
   718  0079                     	ds	1
   719  007A                     fifo_pop@temp:	
   720                           
   721                           ; 1 bytes @ 0x3
   722  007A                     	ds	1
   723                           
   724                           	psect	cstackBANK0
   725  0041                     __pcstackBANK0:	
   726  0041                     ??_byte_to_hex:	
   727                           
   728                           ; 1 bytes @ 0x0
   729  0041                     	ds	2
   730  0043                     byte_to_hex@data:	
   731                           
   732                           ; 1 bytes @ 0x2
   733  0043                     	ds	1
   734  0044                     ??_print_string_lcd:	
   735  0044                     ??_print_string_serial:	
   736                           ; 1 bytes @ 0x3
   737                           
   738                           
   739                           ; 1 bytes @ 0x3
   740  0044                     	ds	1
   741  0045                     print_string_lcd@string:	
   742  0045                     print_string_serial@i:	
   743                           ; 1 bytes @ 0x4
   744                           
   745                           
   746                           ; 1 bytes @ 0x4
   747  0045                     	ds	1
   748  0046                     print_string_lcd@i:	
   749  0046                     print_string_serial@string:	
   750                           ; 1 bytes @ 0x5
   751                           
   752                           
   753                           ; 1 bytes @ 0x5
   754  0046                     	ds	1
   755  0047                     ??_usb_autoconfig:	
   756                           
   757                           ; 1 bytes @ 0x6
   758  0047                     	ds	1
   759  0048                     usb_autoconfig@temp:	
   760                           
   761                           ; 1 bytes @ 0x7
   762  0048                     	ds	1
   763  0049                     ??_main:	
   764                           
   765                           ; 1 bytes @ 0x8
   766  0049                     	ds	1
   767  004A                     main@state:	
   768                           
   769                           ; 1 bytes @ 0x9
   770  004A                     	ds	1
   771  004B                     main@temp:	
   772                           
   773                           ; 1 bytes @ 0xA
   774  004B                     	ds	1
   775                           
   776                           	psect	maintext
   777  03C8                     __pmaintext:	
   778 ;;
   779 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   780 ;;
   781 ;; *************** function _main *****************
   782 ;; Defined at:
   783 ;;		line 303 in file "main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  temp            1   10[BANK0 ] unsigned char 
   788 ;;  state           1    9[BANK0 ] unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : B00/0
   795 ;;		On exit  : 300/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         0       2       0       0       0
   800 ;;      Temps:          0       1       0       0       0
   801 ;;      Totals:         0       3       0       0       0
   802 ;;Total ram usage:        3 bytes
   803 ;; Hardware stack levels required when called:    6
   804 ;; This function calls:
   805 ;;		_byte_to_hex
   806 ;;		_file_dump
   807 ;;		_initialize
   808 ;;		_lcd_clear2
   809 ;;		_lcd_line2
   810 ;;		_lcd_putc
   811 ;;		_mem_clear
   812 ;;		_mem_dump
   813 ;;		_print_capacity
   814 ;;		_print_name
   815 ;;		_print_query
   816 ;;		_print_string_lcd
   817 ;;		_print_string_serial
   818 ;;		_print_test_data
   819 ;;		_uart_read
   820 ;;		_uart_send
   821 ;;		_usb_autoconfig
   822 ;;		_usb_disk_connect
   823 ;;		_usb_disk_mount
   824 ;;		_usb_file_close
   825 ;;		_usb_file_create
   826 ;;		_usb_file_open
   827 ;;		_usb_file_read
   828 ;;		_usb_get_file_size
   829 ;;		_usb_get_status
   830 ;;		_usb_get_version
   831 ;;		_usb_reset_all
   832 ;;		_usb_set_file_name
   833 ;;		_usb_set_mode
   834 ;; This function is called by:
   835 ;;		Startup code after reset
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           
   840                           ;psect for function _main
   841  03C8                     _main:	
   842                           
   843                           ;main.c: 305: unsigned char state = 0;
   844                           
   845                           ;incstack = 0
   846                           ; Regs used in _main: [allreg]
   847  03C8  01CA               	clrf	main@state
   848                           
   849                           ;main.c: 306: initialize();
   850  03C9  118A  24F9  118A   	fcall	_initialize
   851                           
   852                           ;main.c: 312: print_string_lcd("Dragons");
   853  03CC  3091               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   854  03CD  118A  21D2  118A   	fcall	_print_string_lcd
   855                           
   856                           ;main.c: 313: lcd_line2();
   857  03D0  118A  25FF  118A   	fcall	_lcd_line2
   858                           
   859                           ;main.c: 315: print_string_serial("deadbeef\n");
   860  03D3  3074               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   861  03D4  118A  21B5  118A   	fcall	_print_string_serial
   862                           
   863                           ;main.c: 322: switch(state)
   864  03D7  2CDE               	goto	l2148
   865  03D8                     l2150:	
   866                           
   867                           ;main.c: 325: if(temp == 0xDE)
   868  03D8  30DE               	movlw	222
   869  03D9  064B               	xorwf	main@temp,w
   870  03DA  1D03               	btfss	3,2
   871  03DB  2CDE               	goto	l2148
   872                           
   873                           ;main.c: 326: state = 1;
   874  03DC  01CA               	clrf	main@state
   875  03DD  0ACA               	incf	main@state,f
   876  03DE  2CDE               	goto	l2148
   877  03DF                     l2154:	
   878                           
   879                           ;main.c: 329: if(temp == 0xAD)
   880  03DF  30AD               	movlw	173
   881  03E0  064B               	xorwf	main@temp,w
   882  03E1  1D03               	btfss	3,2
   883  03E2  2BE5               	goto	l2158
   884                           
   885                           ;main.c: 330: state = 2;
   886  03E3  3002               	movlw	2
   887  03E4  2BF6               	goto	L2
   888  03E5                     l2158:	
   889                           
   890                           ;main.c: 331: else;main.c: 332: state = 0;
   891  03E5  01CA               	clrf	main@state
   892  03E6  2CDE               	goto	l2148
   893  03E7                     l2160:	
   894                           
   895                           ;main.c: 335: if(temp == 0xBE)
   896  03E7  30BE               	movlw	190
   897  03E8  064B               	xorwf	main@temp,w
   898  03E9  1D03               	btfss	3,2
   899  03EA  2BE5               	goto	l2158
   900                           
   901                           ;main.c: 336: state = 3;
   902  03EB  3003               	movlw	3
   903  03EC  2BF6               	goto	L2
   904  03ED                     l2166:	
   905                           
   906                           ;main.c: 341: if(temp == 0xEF)
   907  03ED  30EF               	movlw	239
   908  03EE  064B               	xorwf	main@temp,w
   909  03EF  1D03               	btfss	3,2
   910  03F0  2BF5               	goto	l2170
   911                           
   912                           ;main.c: 342: print_string_serial(str_cmd_mode);
   913  03F1  3011               	movlw	(low ((_str_cmd_mode-__stringbase)| (0+32768)))& (0+255)
   914  03F2  118A  21B5  118A   	fcall	_print_string_serial
   915  03F5                     l2170:	
   916                           
   917                           ;main.c: 343: state = 4;
   918  03F5  3004               	movlw	4
   919  03F6                     L2:	
   920  03F6  00C9               	movwf	??_main
   921  03F7  0849               	movf	??_main,w
   922  03F8  00CA               	movwf	main@state
   923                           
   924                           ;main.c: 344: break;
   925  03F9  2CDE               	goto	l2148
   926  03FA                     l2172:	
   927                           
   928                           ;main.c: 349: usb_reset_all();
   929  03FA  118A  2685  118A   	fcall	_usb_reset_all
   930                           
   931                           ;main.c: 350: break;
   932  03FD  2CC5               	goto	l2230
   933  03FE                     l2174:	
   934                           
   935                           ;main.c: 352: usb_autoconfig();
   936  03FE  118A  2342  118A   	fcall	_usb_autoconfig
   937                           
   938                           ;main.c: 353: break;
   939  0401  2CC5               	goto	l2230
   940  0402                     l2176:	
   941                           
   942                           ;main.c: 355: temp = usb_get_version();
   943  0402  118A  270F  118A   	fcall	_usb_get_version
   944  0405  2C61               	goto	L4
   945  0406                     l2178:	
   946                           ;main.c: 356: break;
   947                           
   948                           
   949                           ;main.c: 358: usb_set_mode(0x05);
   950  0406  3005               	movlw	5
   951  0407  118A  2707  118A   	fcall	_usb_set_mode
   952                           
   953                           ;main.c: 359: break;
   954  040A  2CC5               	goto	l2230
   955  040B                     l2180:	
   956                           
   957                           ;main.c: 361: usb_set_mode(0x06);
   958  040B  3006               	movlw	6
   959  040C  118A  2707  118A   	fcall	_usb_set_mode
   960                           
   961                           ;main.c: 362: break;
   962  040F  2CC5               	goto	l2230
   963  0410                     l2182:	
   964                           
   965                           ;main.c: 364: usb_set_mode(0x07);
   966  0410  3007               	movlw	7
   967  0411  118A  2707  118A   	fcall	_usb_set_mode
   968                           
   969                           ;main.c: 365: break;
   970  0414  2CC5               	goto	l2230
   971  0415                     l2184:	
   972                           
   973                           ;main.c: 367: usb_disk_connect();
   974  0415  118A  2702  118A   	fcall	_usb_disk_connect
   975                           
   976                           ;main.c: 368: break;
   977  0418  2CC5               	goto	l2230
   978  0419                     l2186:	
   979                           
   980                           ;main.c: 370: usb_disk_mount();
   981  0419  118A  26FD  118A   	fcall	_usb_disk_mount
   982                           
   983                           ;main.c: 371: break;
   984  041C  2CC5               	goto	l2230
   985  041D                     l2188:	
   986                           
   987                           ;main.c: 373: temp = usb_get_status();
   988  041D  118A  26F6  118A   	fcall	_usb_get_status
   989  0420  2C61               	goto	L4
   990  0421                     l2190:	
   991                           ;main.c: 374: break;
   992                           
   993                           
   994                           ;main.c: 376: print_query();
   995  0421  118A  22CE  118A   	fcall	_print_query
   996                           
   997                           ;main.c: 377: break;
   998  0424  2CC5               	goto	l2230
   999  0425                     l2192:	
  1000                           
  1001                           ;main.c: 379: print_capacity();
  1002  0425  118A  2212  118A   	fcall	_print_capacity
  1003                           
  1004                           ;main.c: 380: break;
  1005  0428  2CC5               	goto	l2230
  1006  0429                     l2194:	
  1007                           
  1008                           ;main.c: 382: usb_set_file_name();
  1009  0429  118A  268A  118A   	fcall	_usb_set_file_name
  1010                           
  1011                           ;main.c: 383: print_name();
  1012  042C  118A  2630  118A   	fcall	_print_name
  1013                           
  1014                           ;main.c: 384: break;
  1015  042F  2CC5               	goto	l2230
  1016  0430                     l2196:	
  1017                           
  1018                           ;main.c: 386: usb_file_open();
  1019  0430  118A  269D  118A   	fcall	_usb_file_open
  1020                           
  1021                           ;main.c: 387: break;
  1022  0433  2CC5               	goto	l2230
  1023  0434                     l2198:	
  1024                           
  1025                           ;main.c: 389: usb_file_close();
  1026  0434  118A  26A2  118A   	fcall	_usb_file_close
  1027                           
  1028                           ;main.c: 390: break;
  1029  0437  2CC5               	goto	l2230
  1030  0438                     l2200:	
  1031                           
  1032                           ;main.c: 392: usb_get_file_size();
  1033  0438  118A  26C8  118A   	fcall	_usb_get_file_size
  1034                           
  1035                           ;main.c: 393: print_string_serial("File size: ");
  1036  043B  3068               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1037  043C  118A  21B5  118A   	fcall	_print_string_serial
  1038                           
  1039                           ;main.c: 394: byte_to_hex(usb_file_size_high);
  1040  043F  0833               	movf	_usb_file_size_high,w
  1041  0440  118A  21EF  118A   	fcall	_byte_to_hex
  1042                           
  1043                           ;main.c: 395: uart_send(hex_char_high);
  1044  0443  0876               	movf	_hex_char_high,w
  1045  0444  118A  2566  118A   	fcall	_uart_send
  1046                           
  1047                           ;main.c: 396: uart_send(hex_char_low);
  1048  0447  0875               	movf	_hex_char_low,w
  1049  0448  118A  2566  118A   	fcall	_uart_send
  1050                           
  1051                           ;main.c: 397: byte_to_hex(usb_file_size_low);
  1052  044B  1283               	bcf	3,5	;RP0=0, select bank0
  1053  044C  1303               	bcf	3,6	;RP1=0, select bank0
  1054  044D  0832               	movf	_usb_file_size_low,w
  1055  044E  118A  21EF  118A   	fcall	_byte_to_hex
  1056                           
  1057                           ;main.c: 398: uart_send(hex_char_high);
  1058  0451  0876               	movf	_hex_char_high,w
  1059  0452  118A  2566  118A   	fcall	_uart_send
  1060                           
  1061                           ;main.c: 399: uart_send(hex_char_low);
  1062  0455  0875               	movf	_hex_char_low,w
  1063  0456  118A  2566  118A   	fcall	_uart_send
  1064                           
  1065                           ;main.c: 400: uart_send('\n');
  1066  0459  300A               	movlw	10
  1067  045A  118A  2566  118A   	fcall	_uart_send
  1068                           
  1069                           ;main.c: 401: break;
  1070  045D  2CC5               	goto	l2230
  1071  045E                     l2210:	
  1072                           
  1073                           ;main.c: 403: temp = usb_file_read();
  1074  045E  118A  277A  118A   	fcall	_usb_file_read
  1075  0461                     L4:	
  1076  0461  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0462  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0463  00C9               	movwf	??_main
  1079  0464  0849               	movf	??_main,w
  1080  0465  00CB               	movwf	main@temp
  1081                           
  1082                           ;main.c: 404: break;
  1083  0466  2CC5               	goto	l2230
  1084  0467                     l2212:	
  1085                           
  1086                           ;main.c: 406: usb_file_create();
  1087  0467  118A  26E3  118A   	fcall	_usb_file_create
  1088                           
  1089                           ;main.c: 407: break;
  1090  046A  2CC5               	goto	l2230
  1091  046B                     l2214:	
  1092                           
  1093                           ;main.c: 415: mem_clear();
  1094  046B  118A  2533  118A   	fcall	_mem_clear
  1095                           
  1096                           ;main.c: 416: break;
  1097  046E  2CC5               	goto	l2230
  1098  046F                     l2216:	
  1099                           
  1100                           ;main.c: 418: mem_dump();
  1101  046F  118A  2541  118A   	fcall	_mem_dump
  1102                           
  1103                           ;main.c: 419: break;
  1104  0472  2CC5               	goto	l2230
  1105  0473                     l2218:	
  1106                           
  1107                           ;main.c: 421: file_dump();
  1108  0473  118A  254F  118A   	fcall	_file_dump
  1109                           
  1110                           ;main.c: 422: break;
  1111  0476  2CC5               	goto	l2230
  1112  0477                     l2220:	
  1113                           
  1114                           ;main.c: 424: print_test_data();
  1115  0477  118A  266C  118A   	fcall	_print_test_data
  1116                           
  1117                           ;main.c: 425: break;
  1118  047A  2CC5               	goto	l2230
  1119  047B                     l2222:	
  1120                           
  1121                           ;main.c: 427: usb_file_size_low = 16;
  1122  047B  3010               	movlw	16
  1123  047C  00C9               	movwf	??_main
  1124  047D  0849               	movf	??_main,w
  1125  047E  00B2               	movwf	_usb_file_size_low
  1126                           
  1127                           ;main.c: 428: usb_file_size_high = 0;
  1128  047F  01B3               	clrf	_usb_file_size_high
  1129  0480  2C73               	goto	l2218
  1130  0481                     l2228:	
  1131  0481  084B               	movf	main@temp,w
  1132                           
  1133                           ; Switch size 1, requested type "simple"
  1134                           ; Number of cases is 22, Range of values is 0 to 36
  1135                           ; switch strategies available:
  1136                           ; Name         Instructions Cycles
  1137                           ; simple_byte           67    34 (average)
  1138                           ; direct_byte           81     7 (fixed)
  1139                           ; jumptable            260     6 (fixed)
  1140                           ;	Chosen strategy is simple_byte
  1141  0482  3A00               	xorlw	0	; case 0
  1142  0483  1903               	skipnz
  1143  0484  2BFA               	goto	l2172
  1144  0485  3A01               	xorlw	1	; case 1
  1145  0486  1903               	skipnz
  1146  0487  2BFE               	goto	l2174
  1147  0488  3A03               	xorlw	3	; case 2
  1148  0489  1903               	skipnz
  1149  048A  2C02               	goto	l2176
  1150  048B  3A01               	xorlw	1	; case 3
  1151  048C  1903               	skipnz
  1152  048D  2C06               	goto	l2178
  1153  048E  3A07               	xorlw	7	; case 4
  1154  048F  1903               	skipnz
  1155  0490  2C0B               	goto	l2180
  1156  0491  3A01               	xorlw	1	; case 5
  1157  0492  1903               	skipnz
  1158  0493  2C10               	goto	l2182
  1159  0494  3A03               	xorlw	3	; case 6
  1160  0495  1903               	skipnz
  1161  0496  2C15               	goto	l2184
  1162  0497  3A01               	xorlw	1	; case 7
  1163  0498  1903               	skipnz
  1164  0499  2C19               	goto	l2186
  1165  049A  3A0F               	xorlw	15	; case 8
  1166  049B  1903               	skipnz
  1167  049C  2C1D               	goto	l2188
  1168  049D  3A01               	xorlw	1	; case 9
  1169  049E  1903               	skipnz
  1170  049F  2C21               	goto	l2190
  1171  04A0  3A03               	xorlw	3	; case 10
  1172  04A1  1903               	skipnz
  1173  04A2  2C25               	goto	l2192
  1174  04A3  3A01               	xorlw	1	; case 11
  1175  04A4  1903               	skipnz
  1176  04A5  2C29               	goto	l2194
  1177  04A6  3A07               	xorlw	7	; case 12
  1178  04A7  1903               	skipnz
  1179  04A8  2C30               	goto	l2196
  1180  04A9  3A01               	xorlw	1	; case 13
  1181  04AA  1903               	skipnz
  1182  04AB  2C34               	goto	l2198
  1183  04AC  3A03               	xorlw	3	; case 14
  1184  04AD  1903               	skipnz
  1185  04AE  2C38               	goto	l2200
  1186  04AF  3A01               	xorlw	1	; case 15
  1187  04B0  1903               	skipnz
  1188  04B1  2C5E               	goto	l2210
  1189  04B2  3A1F               	xorlw	31	; case 16
  1190  04B3  1903               	skipnz
  1191  04B4  2C67               	goto	l2212
  1192  04B5  3A30               	xorlw	48	; case 32
  1193  04B6  1903               	skipnz
  1194  04B7  2C6B               	goto	l2214
  1195  04B8  3A01               	xorlw	1	; case 33
  1196  04B9  1903               	skipnz
  1197  04BA  2C6F               	goto	l2216
  1198  04BB  3A03               	xorlw	3	; case 34
  1199  04BC  1903               	skipnz
  1200  04BD  2C73               	goto	l2218
  1201  04BE  3A01               	xorlw	1	; case 35
  1202  04BF  1903               	skipnz
  1203  04C0  2C77               	goto	l2220
  1204  04C1  3A07               	xorlw	7	; case 36
  1205  04C2  1903               	skipnz
  1206  04C3  2C7B               	goto	l2222
  1207  04C4  2CC5               	goto	l2230
  1208  04C5                     l2230:	
  1209                           
  1210                           ;main.c: 431: byte_to_hex(temp);
  1211  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1212  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1213  04C7  084B               	movf	main@temp,w
  1214  04C8  118A  21EF  118A   	fcall	_byte_to_hex
  1215                           
  1216                           ;main.c: 432: uart_send(hex_char_high);
  1217  04CB  0876               	movf	_hex_char_high,w
  1218  04CC  118A  2566  118A   	fcall	_uart_send
  1219                           
  1220                           ;main.c: 433: uart_send(hex_char_low);
  1221  04CF  0875               	movf	_hex_char_low,w
  1222  04D0  118A  2566  118A   	fcall	_uart_send
  1223                           
  1224                           ;main.c: 434: lcd_clear2();
  1225  04D3  118A  2618  118A   	fcall	_lcd_clear2
  1226                           
  1227                           ;main.c: 435: lcd_putc(hex_char_high);
  1228  04D6  0876               	movf	_hex_char_high,w
  1229  04D7  118A  25CC  118A   	fcall	_lcd_putc
  1230                           
  1231                           ;main.c: 436: lcd_putc(hex_char_low);
  1232  04DA  0875               	movf	_hex_char_low,w
  1233  04DB  118A  25CC  118A   	fcall	_lcd_putc
  1234  04DE                     l2148:	
  1235                           ;main.c: 437: break;
  1236                           
  1237                           
  1238                           ;main.c: 319: {;main.c: 320: temp = uart_read();
  1239  04DE  118A  2562  118A   	fcall	_uart_read
  1240  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  1241  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  1242  04E3  00C9               	movwf	??_main
  1243  04E4  0849               	movf	??_main,w
  1244  04E5  00CB               	movwf	main@temp
  1245  04E6  084A               	movf	main@state,w
  1246                           
  1247                           ; Switch size 1, requested type "simple"
  1248                           ; Number of cases is 5, Range of values is 0 to 4
  1249                           ; switch strategies available:
  1250                           ; Name         Instructions Cycles
  1251                           ; simple_byte           16     9 (average)
  1252                           ; direct_byte           17     7 (fixed)
  1253                           ; jumptable            260     6 (fixed)
  1254                           ;	Chosen strategy is simple_byte
  1255  04E7  3A00               	xorlw	0	; case 0
  1256  04E8  1903               	skipnz
  1257  04E9  2BD8               	goto	l2150
  1258  04EA  3A01               	xorlw	1	; case 1
  1259  04EB  1903               	skipnz
  1260  04EC  2BDF               	goto	l2154
  1261  04ED  3A03               	xorlw	3	; case 2
  1262  04EE  1903               	skipnz
  1263  04EF  2BE7               	goto	l2160
  1264  04F0  3A01               	xorlw	1	; case 3
  1265  04F1  1903               	skipnz
  1266  04F2  2BED               	goto	l2166
  1267  04F3  3A07               	xorlw	7	; case 4
  1268  04F4  1903               	skipnz
  1269  04F5  2C81               	goto	l2228
  1270  04F6  2CDE               	goto	l2148
  1271  04F7  118A  2800         	ljmp	start
  1272  04F9                     __end_of_main:	
  1273                           
  1274                           	psect	text1
  1275  0342                     __ptext1:	
  1276 ;; *************** function _usb_autoconfig *****************
  1277 ;; Defined at:
  1278 ;;		line 262 in file "main.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  temp            1    7[BANK0 ] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 300/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       0       0       0
  1293 ;;      Locals:         0       1       0       0       0
  1294 ;;      Temps:          0       1       0       0       0
  1295 ;;      Totals:         0       2       0       0       0
  1296 ;;Total ram usage:        2 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    5
  1299 ;; This function calls:
  1300 ;;		_byte_to_hex
  1301 ;;		_delay_millis
  1302 ;;		_print_query
  1303 ;;		_print_string_serial
  1304 ;;		_uart_send
  1305 ;;		_usb_check_exists
  1306 ;;		_usb_disk_connect
  1307 ;;		_usb_disk_mount
  1308 ;;		_usb_get_status
  1309 ;;		_usb_get_version
  1310 ;;		_usb_set_mode
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           
  1317                           ;psect for function _usb_autoconfig
  1318  0342                     _usb_autoconfig:	
  1319                           
  1320                           ;main.c: 264: unsigned char temp;;main.c: 265: print_string_serial("USB Autoconfig:\n");
  1321                           
  1322                           ;incstack = 0
  1323                           ; Regs used in _usb_autoconfig: [allreg]
  1324  0342  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1325  0343  118A  21B5  118A   	fcall	_print_string_serial
  1326                           
  1327                           ;main.c: 266: temp = usb_check_exists(0x55);
  1328  0346  3055               	movlw	85
  1329  0347  118A  26D9  118A   	fcall	_usb_check_exists
  1330  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1331  034B  1303               	bcf	3,6	;RP1=0, select bank0
  1332  034C  00C7               	movwf	??_usb_autoconfig
  1333  034D  0847               	movf	??_usb_autoconfig,w
  1334  034E  00C8               	movwf	usb_autoconfig@temp
  1335                           
  1336                           ;main.c: 267: byte_to_hex(temp);
  1337  034F  0848               	movf	usb_autoconfig@temp,w
  1338  0350  118A  21EF  118A   	fcall	_byte_to_hex
  1339                           
  1340                           ;main.c: 268: uart_send(hex_char_high);
  1341  0353  0876               	movf	_hex_char_high,w
  1342  0354  118A  2566  118A   	fcall	_uart_send
  1343                           
  1344                           ;main.c: 269: uart_send(hex_char_low);
  1345  0357  0875               	movf	_hex_char_low,w
  1346  0358  118A  2566  118A   	fcall	_uart_send
  1347                           
  1348                           ;main.c: 270: uart_send('\n');
  1349  035B  300A               	movlw	10
  1350  035C  118A  2566  118A   	fcall	_uart_send
  1351                           
  1352                           ;main.c: 272: temp = usb_get_version();
  1353  035F  118A  270F  118A   	fcall	_usb_get_version
  1354  0362  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0363  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0364  00C7               	movwf	??_usb_autoconfig
  1357  0365  0847               	movf	??_usb_autoconfig,w
  1358  0366  00C8               	movwf	usb_autoconfig@temp
  1359                           
  1360                           ;main.c: 273: byte_to_hex(temp);
  1361  0367  0848               	movf	usb_autoconfig@temp,w
  1362  0368  118A  21EF  118A   	fcall	_byte_to_hex
  1363                           
  1364                           ;main.c: 274: print_string_serial("Version: ");
  1365  036B  307E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1366  036C  118A  21B5  118A   	fcall	_print_string_serial
  1367                           
  1368                           ;main.c: 275: uart_send(hex_char_high);
  1369  036F  0876               	movf	_hex_char_high,w
  1370  0370  118A  2566  118A   	fcall	_uart_send
  1371                           
  1372                           ;main.c: 276: uart_send(hex_char_low);
  1373  0373  0875               	movf	_hex_char_low,w
  1374  0374  118A  2566  118A   	fcall	_uart_send
  1375                           
  1376                           ;main.c: 277: uart_send('\n');
  1377  0377  300A               	movlw	10
  1378  0378  118A  2566  118A   	fcall	_uart_send
  1379                           
  1380                           ;main.c: 279: usb_set_mode(0x05);
  1381  037B  3005               	movlw	5
  1382  037C  118A  2707  118A   	fcall	_usb_set_mode
  1383                           
  1384                           ;main.c: 280: delay_millis(1);
  1385  037F  3001               	movlw	1
  1386  0380  118A  2660  118A   	fcall	_delay_millis
  1387                           
  1388                           ;main.c: 281: usb_set_mode(0x07);
  1389  0383  3007               	movlw	7
  1390  0384  118A  2707  118A   	fcall	_usb_set_mode
  1391                           
  1392                           ;main.c: 282: delay_millis(1);
  1393  0387  3001               	movlw	1
  1394  0388  118A  2660  118A   	fcall	_delay_millis
  1395                           
  1396                           ;main.c: 283: usb_set_mode(0x06);
  1397  038B  3006               	movlw	6
  1398  038C  118A  2707  118A   	fcall	_usb_set_mode
  1399                           
  1400                           ;main.c: 284: delay_millis(1);
  1401  038F  3001               	movlw	1
  1402  0390  118A  2660  118A   	fcall	_delay_millis
  1403                           
  1404                           ;main.c: 285: usb_disk_connect();
  1405  0393  118A  2702  118A   	fcall	_usb_disk_connect
  1406                           
  1407                           ;main.c: 286: delay_millis(250);
  1408  0396  30FA               	movlw	250
  1409  0397  118A  2660  118A   	fcall	_delay_millis
  1410                           
  1411                           ;main.c: 287: delay_millis(250);
  1412  039A  30FA               	movlw	250
  1413  039B  118A  2660  118A   	fcall	_delay_millis
  1414                           
  1415                           ;main.c: 288: usb_disk_mount();
  1416  039E  118A  26FD  118A   	fcall	_usb_disk_mount
  1417                           
  1418                           ;main.c: 289: delay_millis(250);
  1419  03A1  30FA               	movlw	250
  1420  03A2  118A  2660  118A   	fcall	_delay_millis
  1421                           
  1422                           ;main.c: 290: delay_millis(250);
  1423  03A5  30FA               	movlw	250
  1424  03A6  118A  2660  118A   	fcall	_delay_millis
  1425                           
  1426                           ;main.c: 292: temp = usb_get_status();
  1427  03A9  118A  26F6  118A   	fcall	_usb_get_status
  1428  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1429  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1430  03AE  00C7               	movwf	??_usb_autoconfig
  1431  03AF  0847               	movf	??_usb_autoconfig,w
  1432  03B0  00C8               	movwf	usb_autoconfig@temp
  1433                           
  1434                           ;main.c: 293: byte_to_hex(temp);
  1435  03B1  0848               	movf	usb_autoconfig@temp,w
  1436  03B2  118A  21EF  118A   	fcall	_byte_to_hex
  1437                           
  1438                           ;main.c: 294: print_string_serial("Status: ");
  1439  03B5  3088               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1440  03B6  118A  21B5  118A   	fcall	_print_string_serial
  1441                           
  1442                           ;main.c: 295: uart_send(hex_char_high);
  1443  03B9  0876               	movf	_hex_char_high,w
  1444  03BA  118A  2566  118A   	fcall	_uart_send
  1445                           
  1446                           ;main.c: 296: uart_send(hex_char_low);
  1447  03BD  0875               	movf	_hex_char_low,w
  1448  03BE  118A  2566  118A   	fcall	_uart_send
  1449                           
  1450                           ;main.c: 297: uart_send('\n');
  1451  03C1  300A               	movlw	10
  1452  03C2  118A  2566  118A   	fcall	_uart_send
  1453                           
  1454                           ;main.c: 299: print_query();
  1455  03C5  118A  22CE         	fcall	_print_query
  1456  03C7  0008               	return
  1457  03C8                     __end_of_usb_autoconfig:	
  1458                           
  1459                           	psect	text2
  1460  02CE                     __ptext2:	
  1461 ;; *************** function _print_query *****************
  1462 ;; Defined at:
  1463 ;;		line 230 in file "main.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1477 ;;      Params:         0       0       0       0       0
  1478 ;;      Locals:         0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0
  1480 ;;      Totals:         0       0       0       0       0
  1481 ;;Total ram usage:        0 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    4
  1484 ;; This function calls:
  1485 ;;		_byte_to_hex
  1486 ;;		_print_string_serial
  1487 ;;		_uart_send
  1488 ;;		_usb_disk_query
  1489 ;; This function is called by:
  1490 ;;		_usb_autoconfig
  1491 ;;		_main
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           
  1496                           ;psect for function _print_query
  1497  02CE                     _print_query:	
  1498                           
  1499                           ;main.c: 232: usb_disk_query();
  1500                           
  1501                           ;incstack = 0
  1502                           ; Regs used in _print_query: [allreg]
  1503  02CE  118A  2749  118A   	fcall	_usb_disk_query
  1504                           
  1505                           ;main.c: 233: print_string_serial("Logical bytes: ");
  1506  02D1  304B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1507  02D2  118A  21B5  118A   	fcall	_print_string_serial
  1508                           
  1509                           ;main.c: 234: byte_to_hex(usb_logical_bytes3);
  1510  02D5  082A               	movf	_usb_logical_bytes3,w
  1511  02D6  118A  21EF  118A   	fcall	_byte_to_hex
  1512                           
  1513                           ;main.c: 235: uart_send(hex_char_high);
  1514  02D9  0876               	movf	_hex_char_high,w
  1515  02DA  118A  2566  118A   	fcall	_uart_send
  1516                           
  1517                           ;main.c: 236: uart_send(hex_char_low);
  1518  02DD  0875               	movf	_hex_char_low,w
  1519  02DE  118A  2566  118A   	fcall	_uart_send
  1520                           
  1521                           ;main.c: 237: byte_to_hex(usb_logical_bytes2);
  1522  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1523  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1524  02E3  082B               	movf	_usb_logical_bytes2,w
  1525  02E4  118A  21EF  118A   	fcall	_byte_to_hex
  1526                           
  1527                           ;main.c: 238: uart_send(hex_char_high);
  1528  02E7  0876               	movf	_hex_char_high,w
  1529  02E8  118A  2566  118A   	fcall	_uart_send
  1530                           
  1531                           ;main.c: 239: uart_send(hex_char_low);
  1532  02EB  0875               	movf	_hex_char_low,w
  1533  02EC  118A  2566  118A   	fcall	_uart_send
  1534                           
  1535                           ;main.c: 240: byte_to_hex(usb_logical_bytes1);
  1536  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1537  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1538  02F1  082C               	movf	_usb_logical_bytes1,w
  1539  02F2  118A  21EF  118A   	fcall	_byte_to_hex
  1540                           
  1541                           ;main.c: 241: uart_send(hex_char_high);
  1542  02F5  0876               	movf	_hex_char_high,w
  1543  02F6  118A  2566  118A   	fcall	_uart_send
  1544                           
  1545                           ;main.c: 242: uart_send(hex_char_low);
  1546  02F9  0875               	movf	_hex_char_low,w
  1547  02FA  118A  2566  118A   	fcall	_uart_send
  1548                           
  1549                           ;main.c: 243: uart_send('0');
  1550  02FD  3030               	movlw	48
  1551  02FE  118A  2566  118A   	fcall	_uart_send
  1552                           
  1553                           ;main.c: 244: uart_send('0');
  1554  0301  3030               	movlw	48
  1555  0302  118A  2566  118A   	fcall	_uart_send
  1556                           
  1557                           ;main.c: 245: uart_send('\n');
  1558  0305  300A               	movlw	10
  1559  0306  118A  2566  118A   	fcall	_uart_send
  1560                           
  1561                           ;main.c: 246: print_string_serial("Free bytes: ");
  1562  0309  305B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1563  030A  118A  21B5  118A   	fcall	_print_string_serial
  1564                           
  1565                           ;main.c: 247: byte_to_hex(usb_free_space3);
  1566  030D  082D               	movf	_usb_free_space3,w
  1567  030E  118A  21EF  118A   	fcall	_byte_to_hex
  1568                           
  1569                           ;main.c: 248: uart_send(hex_char_high);
  1570  0311  0876               	movf	_hex_char_high,w
  1571  0312  118A  2566  118A   	fcall	_uart_send
  1572                           
  1573                           ;main.c: 249: uart_send(hex_char_low);
  1574  0315  0875               	movf	_hex_char_low,w
  1575  0316  118A  2566  118A   	fcall	_uart_send
  1576                           
  1577                           ;main.c: 250: byte_to_hex(usb_free_space2);
  1578  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1579  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1580  031B  082E               	movf	_usb_free_space2,w
  1581  031C  118A  21EF  118A   	fcall	_byte_to_hex
  1582                           
  1583                           ;main.c: 251: uart_send(hex_char_high);
  1584  031F  0876               	movf	_hex_char_high,w
  1585  0320  118A  2566  118A   	fcall	_uart_send
  1586                           
  1587                           ;main.c: 252: uart_send(hex_char_low);
  1588  0323  0875               	movf	_hex_char_low,w
  1589  0324  118A  2566  118A   	fcall	_uart_send
  1590                           
  1591                           ;main.c: 253: byte_to_hex(usb_free_space1);
  1592  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0329  082F               	movf	_usb_free_space1,w
  1595  032A  118A  21EF  118A   	fcall	_byte_to_hex
  1596                           
  1597                           ;main.c: 254: uart_send(hex_char_high);
  1598  032D  0876               	movf	_hex_char_high,w
  1599  032E  118A  2566  118A   	fcall	_uart_send
  1600                           
  1601                           ;main.c: 255: uart_send(hex_char_low);
  1602  0331  0875               	movf	_hex_char_low,w
  1603  0332  118A  2566  118A   	fcall	_uart_send
  1604                           
  1605                           ;main.c: 256: uart_send('0');
  1606  0335  3030               	movlw	48
  1607  0336  118A  2566  118A   	fcall	_uart_send
  1608                           
  1609                           ;main.c: 257: uart_send('0');
  1610  0339  3030               	movlw	48
  1611  033A  118A  2566  118A   	fcall	_uart_send
  1612                           
  1613                           ;main.c: 258: uart_send('\n');
  1614  033D  300A               	movlw	10
  1615  033E  118A  2566  118A   	fcall	_uart_send
  1616  0341  0008               	return
  1617  0342                     __end_of_print_query:	
  1618                           
  1619                           	psect	text3
  1620  01D2                     __ptext3:	
  1621 ;; *************** function _print_string_lcd *****************
  1622 ;; Defined at:
  1623 ;;		line 180 in file "main.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  string          1    wreg     PTR const unsigned char 
  1626 ;;		 -> STR_7(8), 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  string          1    4[BANK0 ] PTR const unsigned char 
  1629 ;;		 -> STR_7(8), 
  1630 ;;  i               1    5[BANK0 ] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 300/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       0       0       0       0
  1641 ;;      Locals:         0       2       0       0       0
  1642 ;;      Temps:          0       1       0       0       0
  1643 ;;      Totals:         0       3       0       0       0
  1644 ;;Total ram usage:        3 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    3
  1647 ;; This function calls:
  1648 ;;		_lcd_putc
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _print_string_lcd
  1656  01D2                     _print_string_lcd:	
  1657                           
  1658                           ;incstack = 0
  1659                           ; Regs used in _print_string_lcd: [allreg]
  1660                           ;print_string_lcd@string stored from wreg
  1661  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1662  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1663  01D4  00C5               	movwf	print_string_lcd@string
  1664                           
  1665                           ;main.c: 182: unsigned char i = 0;
  1666  01D5  01C6               	clrf	print_string_lcd@i
  1667  01D6                     l1260:	
  1668                           ;main.c: 183: while(string[i])
  1669                           
  1670  01D6  0846               	movf	print_string_lcd@i,w
  1671  01D7  0745               	addwf	print_string_lcd@string,w
  1672  01D8  0084               	movwf	4
  1673  01D9  118A  2002  118A   	fcall	stringdir
  1674  01DC  3A00               	xorlw	0
  1675  01DD  1903               	btfsc	3,2
  1676  01DE  0008               	return
  1677                           
  1678                           ;main.c: 184: {;main.c: 185: lcd_putc(string[i]);
  1679  01DF  0846               	movf	print_string_lcd@i,w
  1680  01E0  0745               	addwf	print_string_lcd@string,w
  1681  01E1  0084               	movwf	4
  1682  01E2  118A  2002  118A   	fcall	stringdir
  1683  01E5  118A  25CC  118A   	fcall	_lcd_putc
  1684                           
  1685                           ;main.c: 186: ++i;
  1686  01E8  3001               	movlw	1
  1687  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1688  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1689  01EB  00C4               	movwf	??_print_string_lcd
  1690  01EC  0844               	movf	??_print_string_lcd,w
  1691  01ED  07C6               	addwf	print_string_lcd@i,f
  1692  01EE  29D6               	goto	l1260
  1693  01EF                     __end_of_print_string_lcd:	
  1694                           
  1695                           	psect	text4
  1696  0212                     __ptext4:	
  1697 ;; *************** function _print_capacity *****************
  1698 ;; Defined at:
  1699 ;;		line 212 in file "main.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 300/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    4
  1720 ;; This function calls:
  1721 ;;		_byte_to_hex
  1722 ;;		_print_string_serial
  1723 ;;		_uart_send
  1724 ;;		_usb_disk_capacity
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           
  1731                           ;psect for function _print_capacity
  1732  0212                     _print_capacity:	
  1733                           
  1734                           ;main.c: 214: usb_disk_capacity();
  1735                           
  1736                           ;incstack = 0
  1737                           ; Regs used in _print_capacity: [allreg]
  1738  0212  118A  2727  118A   	fcall	_usb_disk_capacity
  1739                           
  1740                           ;main.c: 215: print_string_serial("Physical bytes: ");
  1741  0215  303A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1742  0216  118A  21B5  118A   	fcall	_print_string_serial
  1743                           
  1744                           ;main.c: 216: byte_to_hex(usb_drive_size3);
  1745  0219  0872               	movf	_usb_drive_size3,w
  1746  021A  118A  21EF  118A   	fcall	_byte_to_hex
  1747                           
  1748                           ;main.c: 217: uart_send(hex_char_high);
  1749  021D  0876               	movf	_hex_char_high,w
  1750  021E  118A  2566  118A   	fcall	_uart_send
  1751                           
  1752                           ;main.c: 218: uart_send(hex_char_low);
  1753  0221  0875               	movf	_hex_char_low,w
  1754  0222  118A  2566  118A   	fcall	_uart_send
  1755                           
  1756                           ;main.c: 219: byte_to_hex(usb_drive_size2);
  1757  0225  0873               	movf	_usb_drive_size2,w
  1758  0226  118A  21EF  118A   	fcall	_byte_to_hex
  1759                           
  1760                           ;main.c: 220: uart_send(hex_char_high);
  1761  0229  0876               	movf	_hex_char_high,w
  1762  022A  118A  2566  118A   	fcall	_uart_send
  1763                           
  1764                           ;main.c: 221: uart_send(hex_char_low);
  1765  022D  0875               	movf	_hex_char_low,w
  1766  022E  118A  2566  118A   	fcall	_uart_send
  1767                           
  1768                           ;main.c: 222: byte_to_hex(usb_drive_size1);
  1769  0231  0874               	movf	_usb_drive_size1,w
  1770  0232  118A  21EF  118A   	fcall	_byte_to_hex
  1771                           
  1772                           ;main.c: 223: uart_send(hex_char_high);
  1773  0235  0876               	movf	_hex_char_high,w
  1774  0236  118A  2566  118A   	fcall	_uart_send
  1775                           
  1776                           ;main.c: 224: uart_send(hex_char_low);
  1777  0239  0875               	movf	_hex_char_low,w
  1778  023A  118A  2566  118A   	fcall	_uart_send
  1779                           
  1780                           ;main.c: 225: uart_send('0');
  1781  023D  3030               	movlw	48
  1782  023E  118A  2566  118A   	fcall	_uart_send
  1783                           
  1784                           ;main.c: 226: uart_send('0');
  1785  0241  3030               	movlw	48
  1786  0242  118A  2566  118A   	fcall	_uart_send
  1787                           
  1788                           ;main.c: 227: uart_send('\n');
  1789  0245  300A               	movlw	10
  1790  0246  118A  2566  118A   	fcall	_uart_send
  1791  0249  0008               	return
  1792  024A                     __end_of_print_capacity:	
  1793                           
  1794                           	psect	text5
  1795  01B5                     __ptext5:	
  1796 ;; *************** function _print_string_serial *****************
  1797 ;; Defined at:
  1798 ;;		line 191 in file "main.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  string          1    wreg     PTR const unsigned char 
  1801 ;;		 -> STR_9(12), str_cmd_mode(14), STR_8(10), STR_6(9), 
  1802 ;;		 -> STR_5(10), STR_4(17), STR_3(13), STR_2(16), 
  1803 ;;		 -> STR_1(17), str_timeout(10), 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  string          1    5[BANK0 ] PTR const unsigned char 
  1806 ;;		 -> STR_9(12), str_cmd_mode(14), STR_8(10), STR_6(9), 
  1807 ;;		 -> STR_5(10), STR_4(17), STR_3(13), STR_2(16), 
  1808 ;;		 -> STR_1(17), str_timeout(10), 
  1809 ;;  i               1    4[BANK0 ] unsigned char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 300/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       0       0       0
  1820 ;;      Locals:         0       2       0       0       0
  1821 ;;      Temps:          0       1       0       0       0
  1822 ;;      Totals:         0       3       0       0       0
  1823 ;;Total ram usage:        3 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    3
  1826 ;; This function calls:
  1827 ;;		_uart_send
  1828 ;; This function is called by:
  1829 ;;		_print_capacity
  1830 ;;		_print_query
  1831 ;;		_usb_autoconfig
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           
  1837                           ;psect for function _print_string_serial
  1838  01B5                     _print_string_serial:	
  1839                           
  1840                           ;incstack = 0
  1841                           ; Regs used in _print_string_serial: [allreg]
  1842                           ;print_string_serial@string stored from wreg
  1843  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1844  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1845  01B7  00C6               	movwf	print_string_serial@string
  1846                           
  1847                           ;main.c: 193: unsigned char i = 0;
  1848  01B8  01C5               	clrf	print_string_serial@i
  1849  01B9                     l1216:	
  1850                           ;main.c: 194: while(string[i])
  1851                           
  1852  01B9  0845               	movf	print_string_serial@i,w
  1853  01BA  0746               	addwf	print_string_serial@string,w
  1854  01BB  0084               	movwf	4
  1855  01BC  118A  2002  118A   	fcall	stringdir
  1856  01BF  3A00               	xorlw	0
  1857  01C0  1903               	btfsc	3,2
  1858  01C1  0008               	return
  1859                           
  1860                           ;main.c: 195: {;main.c: 196: uart_send(string[i]);
  1861  01C2  0845               	movf	print_string_serial@i,w
  1862  01C3  0746               	addwf	print_string_serial@string,w
  1863  01C4  0084               	movwf	4
  1864  01C5  118A  2002  118A   	fcall	stringdir
  1865  01C8  118A  2566  118A   	fcall	_uart_send
  1866                           
  1867                           ;main.c: 197: ++i;
  1868  01CB  3001               	movlw	1
  1869  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1870  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1871  01CE  00C4               	movwf	??_print_string_serial
  1872  01CF  0844               	movf	??_print_string_serial,w
  1873  01D0  07C5               	addwf	print_string_serial@i,f
  1874  01D1  29B9               	goto	l1216
  1875  01D2                     __end_of_print_string_serial:	
  1876                           
  1877                           	psect	text6
  1878  0288                     __ptext6:	
  1879 ;; *************** function _fifo_push *****************
  1880 ;; Defined at:
  1881 ;;		line 115 in file "main.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  data            1    wreg     unsigned char 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  data            1    1[COMMON] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      unsigned char 
  1888 ;; Registers used:
  1889 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 300/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         0       0       0       0       0
  1896 ;;      Locals:         1       0       0       0       0
  1897 ;;      Temps:          1       0       0       0       0
  1898 ;;      Totals:         2       0       0       0       0
  1899 ;;Total ram usage:        2 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		Interrupt level 1
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           
  1909                           ;psect for function _fifo_push
  1910  0288                     _fifo_push:	
  1911                           
  1912                           ;incstack = 0
  1913                           ; Regs used in _fifo_push: [wreg-fsr0h+status,2+status,0]
  1914                           ;fifo_push@data stored from wreg
  1915  0288  00F8               	movwf	fifo_push@data
  1916                           
  1917                           ;main.c: 117: switch(fifo_write_bank)
  1918  0289  2AA0               	goto	l1060
  1919  028A                     l1052:	
  1920                           
  1921                           ;main.c: 120: case 1:;main.c: 121: fifo_bank_A[fifo_write_idx] = data;
  1922  028A  0878               	movf	fifo_push@data,w
  1923  028B  00F7               	movwf	??_fifo_push
  1924  028C  0870               	movf	_fifo_write_idx,w
  1925  028D  3EA0               	addlw	(low (_fifo_bank_A| 0))& (0+255)
  1926  028E  0084               	movwf	4
  1927  028F  0877               	movf	??_fifo_push,w
  1928  0290  1383               	bcf	3,7	;select IRP bank1
  1929  0291  2A9E               	goto	L6
  1930  0292                     l1054:	
  1931                           ;main.c: 122: break;
  1932                           
  1933                           
  1934                           ;main.c: 124: case 3:;main.c: 125: case 4:;main.c: 126: fifo_bank_B[fifo_write_idx - 64]
      +                           = data;
  1935  0292  0878               	movf	fifo_push@data,w
  1936  0293  00F7               	movwf	??_fifo_push
  1937  0294  0870               	movf	_fifo_write_idx,w
  1938  0295  3E50               	addlw	(low ((_fifo_bank_B| (0+256)+192)))& (0+255)
  1939  0296  2A9B               	goto	L7
  1940  0297                     l1056:	
  1941                           ;main.c: 127: break;
  1942                           
  1943                           
  1944                           ;main.c: 129: case 6:;main.c: 130: case 7:;main.c: 131: fifo_bank_C[fifo_write_idx - (64
      +                           + 96)] = data;
  1945  0297  0878               	movf	fifo_push@data,w
  1946  0298  00F7               	movwf	??_fifo_push
  1947  0299  0870               	movf	_fifo_write_idx,w
  1948  029A  3E70               	addlw	(low ((_fifo_bank_C| (0+256)+96)))& (0+255)
  1949  029B                     L7:	
  1950  029B  0084               	movwf	4
  1951  029C  0877               	movf	??_fifo_push,w
  1952  029D  1783               	bsf	3,7	;select IRP bank2
  1953  029E                     L6:	
  1954  029E  0080               	movwf	0
  1955                           
  1956                           ;main.c: 132: break;
  1957  029F  2ABC               	goto	l1062
  1958  02A0                     l1060:	
  1959  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1960  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1961  02A2  0821               	movf	_fifo_write_bank,w
  1962                           
  1963                           ; Switch size 1, requested type "simple"
  1964                           ; Number of cases is 8, Range of values is 0 to 7
  1965                           ; switch strategies available:
  1966                           ; Name         Instructions Cycles
  1967                           ; direct_byte           23     7 (fixed)
  1968                           ; simple_byte           25    13 (average)
  1969                           ; jumptable            260     6 (fixed)
  1970                           ;	Chosen strategy is simple_byte
  1971  02A3  3A00               	xorlw	0	; case 0
  1972  02A4  1903               	skipnz
  1973  02A5  2A8A               	goto	l1052
  1974  02A6  3A01               	xorlw	1	; case 1
  1975  02A7  1903               	skipnz
  1976  02A8  2A8A               	goto	l1052
  1977  02A9  3A03               	xorlw	3	; case 2
  1978  02AA  1903               	skipnz
  1979  02AB  2A92               	goto	l1054
  1980  02AC  3A01               	xorlw	1	; case 3
  1981  02AD  1903               	skipnz
  1982  02AE  2A92               	goto	l1054
  1983  02AF  3A07               	xorlw	7	; case 4
  1984  02B0  1903               	skipnz
  1985  02B1  2A92               	goto	l1054
  1986  02B2  3A01               	xorlw	1	; case 5
  1987  02B3  1903               	skipnz
  1988  02B4  2A97               	goto	l1056
  1989  02B5  3A03               	xorlw	3	; case 6
  1990  02B6  1903               	skipnz
  1991  02B7  2A97               	goto	l1056
  1992  02B8  3A01               	xorlw	1	; case 7
  1993  02B9  1903               	skipnz
  1994  02BA  2A97               	goto	l1056
  1995  02BB  2ABC               	goto	l1062
  1996  02BC                     l1062:	
  1997                           
  1998                           ;main.c: 134: ++fifo_write_idx;
  1999  02BC  3001               	movlw	1
  2000  02BD  00F7               	movwf	??_fifo_push
  2001  02BE  0877               	movf	??_fifo_push,w
  2002  02BF  07F0               	addwf	_fifo_write_idx,f
  2003                           
  2004                           ;main.c: 135: if(!(fifo_write_idx & 0x1F))
  2005  02C0  0870               	movf	_fifo_write_idx,w
  2006  02C1  391F               	andlw	31
  2007  02C2  1D03               	btfss	3,2
  2008  02C3  2AC8               	goto	l161
  2009                           
  2010                           ;main.c: 136: {;main.c: 137: ++fifo_write_bank;
  2011  02C4  3001               	movlw	1
  2012  02C5  00F7               	movwf	??_fifo_push
  2013  02C6  0877               	movf	??_fifo_push,w
  2014  02C7  07A1               	addwf	_fifo_write_bank,f
  2015  02C8                     l161:	
  2016                           
  2017                           ;main.c: 138: };main.c: 139: ++fifo_num_bytes;
  2018  02C8  3001               	movlw	1
  2019  02C9  00F7               	movwf	??_fifo_push
  2020  02CA  0877               	movf	??_fifo_push,w
  2021  02CB  07A0               	addwf	_fifo_num_bytes,f
  2022                           
  2023                           ;main.c: 140: return fifo_num_bytes;
  2024  02CC  0820               	movf	_fifo_num_bytes,w
  2025  02CD  0008               	return
  2026  02CE                     __end_of_fifo_push:	
  2027                           
  2028                           	psect	text7
  2029  024A                     __ptext7:	
  2030 ;; *************** function _fifo_pop *****************
  2031 ;; Defined at:
  2032 ;;		line 143 in file "main.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  temp            1    3[COMMON] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      unsigned char 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 300/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         0       0       0       0       0
  2047 ;;      Locals:         1       0       0       0       0
  2048 ;;      Temps:          1       0       0       0       0
  2049 ;;      Totals:         2       0       0       0       0
  2050 ;;Total ram usage:        2 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		Interrupt level 1
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function _fifo_pop
  2061  024A                     _fifo_pop:	
  2062                           
  2063                           ;main.c: 145: unsigned char temp;;main.c: 146: switch(fifo_read_bank)
  2064                           
  2065                           ;incstack = 0
  2066                           ; Regs used in _fifo_pop: [wreg-fsr0h+status,2+status,0]
  2067  024A  2A5C               	goto	l1082
  2068  024B                     l1074:	
  2069                           
  2070                           ;main.c: 149: case 1:;main.c: 150: temp = fifo_bank_A[fifo_read_idx];
  2071  024B  0871               	movf	_fifo_read_idx,w
  2072  024C  3EA0               	addlw	(low (_fifo_bank_A| 0))& (0+255)
  2073  024D  0084               	movwf	4
  2074  024E  1383               	bcf	3,7	;select IRP bank1
  2075  024F  2A57               	goto	L9
  2076  0250                     l1076:	
  2077                           ;main.c: 151: break;
  2078                           
  2079                           
  2080                           ;main.c: 153: case 3:;main.c: 154: case 4:;main.c: 155: temp = fifo_bank_B[fifo_read_idx
      +                           - 64];
  2081  0250  0871               	movf	_fifo_read_idx,w
  2082  0251  3E50               	addlw	(low ((_fifo_bank_B| (0+256)+192)))& (0+255)
  2083  0252  2A55               	goto	L10
  2084  0253                     l1078:	
  2085                           ;main.c: 156: break;
  2086                           
  2087                           
  2088                           ;main.c: 158: case 6:;main.c: 159: case 7:;main.c: 160: temp = fifo_bank_C[fifo_read_idx
      +                           - (64 + 96)];
  2089  0253  0871               	movf	_fifo_read_idx,w
  2090  0254  3E70               	addlw	(low ((_fifo_bank_C| (0+256)+96)))& (0+255)
  2091  0255                     L10:	
  2092  0255  0084               	movwf	4
  2093  0256  1783               	bsf	3,7	;select IRP bank2
  2094  0257                     L9:	
  2095  0257  0800               	movf	0,w
  2096  0258  00F9               	movwf	??_fifo_pop
  2097  0259  0879               	movf	??_fifo_pop,w
  2098  025A  00FA               	movwf	fifo_pop@temp
  2099                           
  2100                           ;main.c: 161: break;
  2101  025B  2A78               	goto	l1084
  2102  025C                     l1082:	
  2103  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2104  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2105  025E  0822               	movf	_fifo_read_bank,w
  2106                           
  2107                           ; Switch size 1, requested type "simple"
  2108                           ; Number of cases is 8, Range of values is 0 to 7
  2109                           ; switch strategies available:
  2110                           ; Name         Instructions Cycles
  2111                           ; direct_byte           23     7 (fixed)
  2112                           ; simple_byte           25    13 (average)
  2113                           ; jumptable            260     6 (fixed)
  2114                           ;	Chosen strategy is simple_byte
  2115  025F  3A00               	xorlw	0	; case 0
  2116  0260  1903               	skipnz
  2117  0261  2A4B               	goto	l1074
  2118  0262  3A01               	xorlw	1	; case 1
  2119  0263  1903               	skipnz
  2120  0264  2A4B               	goto	l1074
  2121  0265  3A03               	xorlw	3	; case 2
  2122  0266  1903               	skipnz
  2123  0267  2A50               	goto	l1076
  2124  0268  3A01               	xorlw	1	; case 3
  2125  0269  1903               	skipnz
  2126  026A  2A50               	goto	l1076
  2127  026B  3A07               	xorlw	7	; case 4
  2128  026C  1903               	skipnz
  2129  026D  2A50               	goto	l1076
  2130  026E  3A01               	xorlw	1	; case 5
  2131  026F  1903               	skipnz
  2132  0270  2A53               	goto	l1078
  2133  0271  3A03               	xorlw	3	; case 6
  2134  0272  1903               	skipnz
  2135  0273  2A53               	goto	l1078
  2136  0274  3A01               	xorlw	1	; case 7
  2137  0275  1903               	skipnz
  2138  0276  2A53               	goto	l1078
  2139  0277  2A78               	goto	l1084
  2140  0278                     l1084:	
  2141                           
  2142                           ;main.c: 163: ++fifo_read_idx;
  2143  0278  3001               	movlw	1
  2144  0279  00F9               	movwf	??_fifo_pop
  2145  027A  0879               	movf	??_fifo_pop,w
  2146  027B  07F1               	addwf	_fifo_read_idx,f
  2147                           
  2148                           ;main.c: 164: if(!(fifo_read_idx & 0x1F))
  2149  027C  0871               	movf	_fifo_read_idx,w
  2150  027D  391F               	andlw	31
  2151  027E  1D03               	btfss	3,2
  2152  027F  2A84               	goto	l175
  2153                           
  2154                           ;main.c: 165: {;main.c: 166: ++fifo_read_bank;
  2155  0280  3001               	movlw	1
  2156  0281  00F9               	movwf	??_fifo_pop
  2157  0282  0879               	movf	??_fifo_pop,w
  2158  0283  07A2               	addwf	_fifo_read_bank,f
  2159  0284                     l175:	
  2160                           
  2161                           ;main.c: 167: };main.c: 168: --fifo_num_bytes;
  2162  0284  3001               	movlw	1
  2163  0285  02A0               	subwf	_fifo_num_bytes,f
  2164                           
  2165                           ;main.c: 169: return temp;
  2166  0286  087A               	movf	fifo_pop@temp,w
  2167  0287  0008               	return
  2168  0288                     __end_of_fifo_pop:	
  2169                           
  2170                           	psect	text8
  2171  01EF                     __ptext8:	
  2172 ;; *************** function _byte_to_hex *****************
  2173 ;; Defined at:
  2174 ;;		line 172 in file "main.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  data            1    wreg     unsigned char 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  data            1    2[BANK0 ] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 300/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2188 ;;      Params:         0       0       0       0       0
  2189 ;;      Locals:         0       1       0       0       0
  2190 ;;      Temps:          0       2       0       0       0
  2191 ;;      Totals:         0       3       0       0       0
  2192 ;;Total ram usage:        3 bytes
  2193 ;; Hardware stack levels used:    2
  2194 ;; Hardware stack levels required when called:    2
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_print_capacity
  2199 ;;		_print_query
  2200 ;;		_usb_autoconfig
  2201 ;;		_main
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           
  2206                           ;psect for function _byte_to_hex
  2207  01EF                     _byte_to_hex:	
  2208                           
  2209                           ;incstack = 0
  2210 ;; using string table level
  2211                           ; Regs used in _byte_to_hex: [wreg-fsr0h+status,2+status,0+pclath]
  2212                           ;byte_to_hex@data stored from wreg
  2213  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2214  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2215  01F1  00C3               	movwf	byte_to_hex@data
  2216                           
  2217                           ;main.c: 174: hex_char_low = hex_table[data & (unsigned char)0x0F];
  2218  01F2  0843               	movf	byte_to_hex@data,w
  2219  01F3  390F               	andlw	15
  2220  01F4  3E01               	addlw	low ((_hex_table-__stringbase)| (0+32768))
  2221  01F5  0084               	movwf	4
  2222  01F6  118A  2002  118A   	fcall	stringdir
  2223  01F9  00C1               	movwf	??_byte_to_hex
  2224  01FA  0841               	movf	??_byte_to_hex,w
  2225  01FB  00F5               	movwf	_hex_char_low
  2226                           
  2227                           ;main.c: 175: data = data >> 4;
  2228  01FC  0843               	movf	byte_to_hex@data,w
  2229  01FD  00C1               	movwf	??_byte_to_hex
  2230  01FE  3004               	movlw	4
  2231  01FF                     u41_25:	
  2232  01FF  1003               	clrc
  2233  0200  0CC1               	rrf	??_byte_to_hex,f
  2234  0201  3EFF               	addlw	-1
  2235  0202  1D03               	skipz
  2236  0203  29FF               	goto	u41_25
  2237  0204  0841               	movf	??_byte_to_hex,w
  2238  0205  00C2               	movwf	??_byte_to_hex+1
  2239  0206  0842               	movf	??_byte_to_hex+1,w
  2240  0207  00C3               	movwf	byte_to_hex@data
  2241                           
  2242                           ;main.c: 176: hex_char_high = hex_table[data & (unsigned char)0x0F];
  2243  0208  0843               	movf	byte_to_hex@data,w
  2244  0209  390F               	andlw	15
  2245  020A  3E01               	addlw	low ((_hex_table-__stringbase)| (0+32768))
  2246  020B  0084               	movwf	4
  2247  020C  118A  2002         	fcall	stringdir
  2248  020E  00C1               	movwf	??_byte_to_hex
  2249  020F  0841               	movf	??_byte_to_hex,w
  2250  0210  00F6               	movwf	_hex_char_high
  2251  0211  0008               	return
  2252  0212                     __end_of_byte_to_hex:	
  2253  007E                     btemp	set	126	;btemp
  2254  007E                     wtemp0	set	126


Data Sizes:
    Strings     112
    Constant    40
    Data        8
    BSS         296
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      11
    BANK0            80     11      52
    BANK1            80      0      64
    BANK3            96      0      96
    BANK2            96      0      96

Pointer List with Targets:

    print_string_serial@string	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_9(CODE[12]), str_cmd_mode(CODE[14]), STR_8(CODE[10]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[17]), STR_3(CODE[13]), STR_2(CODE[16]), 
		 -> STR_1(CODE[17]), str_timeout(CODE[10]), 

    print_string_lcd@string	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_7(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _fifo_push in COMMON

    None.

Critical Paths under _fifo_pop in COMMON

    None.

Critical Paths under _byte_to_hex in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_usb_autoconfig
    _usb_autoconfig->_print_string_serial
    _print_query->_print_string_serial
    _print_capacity->_print_string_serial

Critical Paths under _fifo_push in BANK0

    None.

Critical Paths under _fifo_pop in BANK0

    None.

Critical Paths under _byte_to_hex in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fifo_push in BANK1

    None.

Critical Paths under _fifo_pop in BANK1

    None.

Critical Paths under _byte_to_hex in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fifo_push in BANK3

    None.

Critical Paths under _fifo_pop in BANK3

    None.

Critical Paths under _byte_to_hex in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fifo_push in BANK2

    None.

Critical Paths under _fifo_pop in BANK2

    None.

Critical Paths under _byte_to_hex in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5190
                                              8 BANK0      3     3      0
                        _byte_to_hex
                          _file_dump
                         _initialize
                         _lcd_clear2
                          _lcd_line2
                           _lcd_putc
                          _mem_clear
                           _mem_dump
                     _print_capacity
                         _print_name
                        _print_query
                   _print_string_lcd
                _print_string_serial
                    _print_test_data
                          _uart_read
                          _uart_send
                     _usb_autoconfig
                   _usb_disk_connect
                     _usb_disk_mount
                     _usb_file_close
                    _usb_file_create
                      _usb_file_open
                      _usb_file_read
                  _usb_get_file_size
                     _usb_get_status
                    _usb_get_version
                      _usb_reset_all
                  _usb_set_file_name
                       _usb_set_mode
 ---------------------------------------------------------------------------------
 (1) _usb_set_file_name                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_reset_all                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_file_size                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_read                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_open                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_create                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_close                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_autoconfig                                       2     2      0    1868
                                              6 BANK0      2     2      0
                        _byte_to_hex
                       _delay_millis
                        _print_query
                _print_string_serial
                          _uart_send
                   _usb_check_exists
                   _usb_disk_connect
                     _usb_disk_mount
                     _usb_get_status
                    _usb_get_version
                       _usb_set_mode
 ---------------------------------------------------------------------------------
 (1) _usb_set_mode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_version                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_status                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_disk_mount                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_disk_connect                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _usb_check_exists                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _print_query                                          0     0      0     772
                        _byte_to_hex
                _print_string_serial
                          _uart_send
                     _usb_disk_query
 ---------------------------------------------------------------------------------
 (3) _usb_disk_query                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _delay_millis                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_test_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_string_lcd                                     3     3      0     166
                                              3 BANK0      3     3      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_name                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_capacity                                       0     0      0     772
                        _byte_to_hex
                _print_string_serial
                          _uart_send
                  _usb_disk_capacity
 ---------------------------------------------------------------------------------
 (2) _usb_disk_capacity                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _print_string_serial                                  3     3      0     490
                                              3 BANK0      3     3      0
                          _uart_send
 ---------------------------------------------------------------------------------
 (2) _uart_send                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _byte_to_hex                                          3     3      0     282
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _mem_dump                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mem_clear                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_line2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_clear2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _file_dump                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fifo_push                                            2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fifo_pop                                             2     2      0      25
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _byte_to_hex                                          3     3      0     282
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _byte_to_hex
   _file_dump
   _initialize
   _lcd_clear2
   _lcd_line2
   _lcd_putc
   _mem_clear
   _mem_dump
   _print_capacity
     _byte_to_hex
     _print_string_serial
       _uart_send
     _uart_send
     _usb_disk_capacity
   _print_name
   _print_query
     _byte_to_hex
     _print_string_serial
       _uart_send
     _uart_send
     _usb_disk_query
   _print_string_lcd
     _lcd_putc
   _print_string_serial
     _uart_send
   _print_test_data
   _uart_read
   _uart_send
   _usb_autoconfig
     _byte_to_hex
     _delay_millis
     _print_query
       _byte_to_hex
       _print_string_serial
         _uart_send
       _uart_send
       _usb_disk_query
     _print_string_serial
       _uart_send
     _uart_send
     _usb_check_exists
     _usb_disk_connect
     _usb_disk_mount
     _usb_get_status
     _usb_get_version
     _usb_set_mode
   _usb_disk_connect
   _usb_disk_mount
   _usb_file_close
   _usb_file_create
   _usb_file_open
   _usb_file_read
   _usb_get_file_size
   _usb_get_status
   _usb_get_version
   _usb_reset_all
   _usb_set_file_name
   _usb_set_mode

 _fifo_push (ROOT)

 _fifo_pop (ROOT)

 _byte_to_hex (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      60      10      100.0%
BITBANK3            60      0       0       9        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      60      12      100.0%
BITBANK2            60      0       0      11        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       8       80.0%
BITBANK1            50      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      34       5       65.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     13F       6        0.0%
ABS                  0      0     13F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon May 29 14:49:11 2023

                           pc 0002                   __CFG_CP$OFF 0000                            fsr 0004  
               _hex_char_high 0076                 _usb_file_read 077A                 _usb_file_open 069D  
                         l161 02C8                           l175 0284              ?_print_test_data 0077  
                         fsr0 0004                           indf 0000                  __CFG_BORV$42 0000  
                __CFG_FOSC$XT 0000           _usb_bytes_read_high 0031                _usb_file_close 06A2  
                _usb_set_mode 0707                          l1052 028A                          l1060 02A0  
                        l1054 0292                          l1062 02BC                          l1056 0297  
                        l1216 01B9                          l2200 0438                          l1074 024B  
                        l1082 025C                          l2210 045E                          l1076 0250  
                        l1084 0278                          l1260 01D6                          l2220 0477  
                        l2212 0467                          l1078 0253                          l2222 047B  
                        l2214 046B                          l2230 04C5                          l2150 03D8  
                        l2216 046F                          l2160 03E7                          l2218 0473  
                        l2170 03F5                          l2154 03DF                          l2228 0481  
                        l2180 040B                          l2172 03FA                          l2148 04DE  
              _usb_disk_mount 06FD                          l2190 0421                          l2182 0410  
                        l2174 03FE                          l2166 03ED                          l2158 03E5  
                        l2192 0425                          l2184 0415                          l2176 0402  
                        l2194 0429                          l2186 0419                          l2178 0406  
                        l2196 0430                          l2188 041D                          l2198 0434  
              _usb_disk_query 0749                          STR_1 0041                          STR_2 0052  
                        STR_3 0062                          STR_4 0030                          STR_5 0085  
                        STR_6 008F                          STR_7 0098                          STR_8 007B  
                        STR_9 006F                _usb_get_status 06F6                          _main 03C8  
          usb_autoconfig@temp 0048                          btemp 007E                 __CFG_BOREN$ON 0000  
                        start 0000                 __CFG_IESO$OFF 0000                   _str_timeout 0026  
               __CFG_MCLRE$ON 0000               _usb_file_create 06E3                 _usb_reset_all 0685  
              _usb_autoconfig 0342                ?_usb_file_read 0077                ?_usb_file_open 0077  
                       ?_main 0077                  ?_byte_to_hex 0077                 __CFG_WDTE$OFF 0000  
                _str_cmd_mode 0018                         u41_25 01FF                 __CFG_PWRTE$ON 0000  
           ?_print_string_lcd 0077                __CFG_FCMEN$OFF 0000               _usb_get_version 070F  
          ??_print_string_lcd 0044                         _temp3 0040                         _temp4 003F  
                       _temp5 003E                         pclath 000A                         status 0003  
                       wtemp0 007E               _usb_free_space1 002F               _usb_free_space2 002E  
             _usb_free_space3 002D             _usb_target_status 0029               __initialization 07BE  
      __end_of_usb_autoconfig 03C8                ?_usb_reset_all 0077                  __end_of_main 04F9  
             _usb_drive_size1 0074               _usb_drive_size2 0073               _usb_drive_size3 0072  
           _usb_set_file_name 068A            ?_usb_set_file_name 0077                        ??_main 0049  
            _usb_disk_connect 0702               ?_usb_file_close 0077           ??_usb_set_file_name 0077  
             __CFG_CCP2MX$RC1 0000               ?_usb_disk_mount 0077               ?_usb_disk_query 0077  
             ?_usb_get_status 0077   __end_of_print_string_serial 01D2              __end_of_fifo_pop 0288  
             ?_usb_autoconfig 0077               ??_usb_file_read 0077               ??_usb_file_open 0077  
            ??_print_capacity 0077               __CFG_BORSEN$OFF 0000       __end_of__initialization 07FD  
                ?_print_query 0077                _tape_size_high 0035               ??_usb_reset_all 0077  
              __pcstackCOMMON 0077                  __pidataBANK0 01AD          __size_of_byte_to_hex 0023  
          __size_of_fifo_push 0046             _usb_disk_capacity 0727            ?_usb_disk_capacity 0077  
                  __pbssBANK0 0020                    __pbssBANK1 00A0                    __pbssBANK2 0110  
                  __pbssBANK3 0190             _usb_file_size_low 0032              ?_usb_file_create 0077  
         ??_usb_disk_capacity 0077                  _delay_millis 0660             _usb_get_file_size 06C8  
                  __pmaintext 03C8            ?_usb_get_file_size 0077                    _gen_count2 0038  
                  _gen_count3 0037                    _gen_count4 0036              ?_usb_get_version 0077  
         ??_usb_get_file_size 0077               byte_to_hex@data 0043                    _lcd_clear2 0618  
               _ram_address_h 003D                 _ram_address_l 003C                     ?_fifo_pop 0077  
                   ?_lcd_putc 0077                    __stringtab 0002                    _ldel_count 003A  
                   ?_mem_dump 0077     __size_of_print_string_lcd 001D             __end_of_fifo_push 02CE  
      print_string_lcd@string 0045             __end_of_hex_table 0018              ??_usb_file_close 0077  
                  _initialize 04F9                       __ptext1 0342                       __ptext2 02CE  
                     __ptext3 01D2                       __ptext4 0212                       __ptext5 01B5  
                     __ptext6 0288                       __ptext7 024A                       __ptext8 01EF  
            ??_usb_disk_mount 0077              ??_usb_disk_query 0077              ??_usb_get_status 0077  
                  _s_reg_high 0028                    _sdel_count 003B                    ??_fifo_pop 0079  
                     clrloop0 01A6                    ??_lcd_putc 0077          end_of_initialization 07FD  
                  ??_mem_dump 0077              ??_usb_autoconfig 0047          __size_of_print_query 0074  
           ?_usb_check_exists 0077            ??_usb_check_exists 0077                    _print_name 0630  
                 ?_lcd_clear2 0077                  _hex_char_low 0075               _fifo_write_bank 0021  
          _usb_bytes_read_low 0030             ??_print_test_data 0077  __size_of_print_string_serial 001D  
                 ?_initialize 0077           start_initialization 07BE                 ?_usb_set_mode 0077  
            _print_string_lcd 01D2                   __pdataBANK0 004C                 ??_byte_to_hex 0041  
                 ?_print_name 0077            _usb_file_size_high 0033                 _tape_size_low 0034  
                 __pbssCOMMON 0070                     ___latbits 0001                ??_usb_set_mode 0077  
        print_string_serial@i 0045                 __pcstackBANK0 0041                 _delay_counter 0024  
     __size_of_print_capacity 0038             __size_of_fifo_pop 003E             ?_usb_disk_connect 0077  
          ??_usb_disk_connect 0077                     _gen_count 0039                     _file_dump 054F  
                   _fifo_push 0288                     _lcd_line2 05FF            _usb_logical_bytes1 002C  
          _usb_logical_bytes2 002B            _usb_logical_bytes3 002A                     __pstrings 0002  
              _fifo_read_bank 0022                     _hex_table 0008                     _mem_clear 0533  
           print_string_lcd@i 0046                   _fifo_bank_A 00A0                   _fifo_bank_B 0190  
                 _fifo_bank_C 0110           __end_of_byte_to_hex 0212                     _s_reg_low 0027  
              _fifo_num_bytes 0020                     clear_ram0 01A5                     _tape_name 004C  
                   _uart_read 0562                     _uart_send 0566                    ?_file_dump 0077  
                  ?_fifo_push 0077                    ?_lcd_line2 0077                   __stringbase 0007  
                ??_lcd_clear2 0077                _fifo_write_idx 0070                     main@state 004A  
                  ?_mem_clear 0077           _print_string_serial 01B5               _print_test_data 066C  
               ??_print_query 0077          ?_print_string_serial 0077                    ?_uart_read 0077  
                  ?_uart_send 0077                  ??_initialize 0077     print_string_serial@string 0046  
          __end_of__stringtab 0008                   _byte_to_hex 01EF             ??_usb_file_create 0077  
    __end_of_print_string_lcd 01EF                      _flag_reg 0023                      _fifo_pop 024A  
              _print_capacity 0212                      _lcd_putc 05CC                 _fifo_read_idx 0071  
                    _mem_dump 0541          __end_of_str_cmd_mode 0026                 __size_of_main 0131  
               ?_delay_millis 0077             ??_usb_get_version 0077         ??_print_string_serial 0044  
         __end_of_print_query 0342                   ??_file_dump 0077       __size_of_usb_autoconfig 0086  
                 ??_fifo_push 0077                   ??_lcd_line2 0077                      main@temp 004B  
                ??_print_name 0077                   ??_mem_clear 0077        __end_of_print_capacity 024A  
                    intlevel1 0000                ??_delay_millis 0077                     stringcode 0002  
                 ??_uart_read 0077                   ??_uart_send 0077           __end_of_str_timeout 0030  
                _timeout_high 0026                      stringdir 0002                      stringtab 0002  
             ?_print_capacity 0077              _usb_check_exists 06D9                   _timeout_low 0025  
                 _print_query 02CE                  fifo_pop@temp 007A                 fifo_push@data 0078  



Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jun 10 16:15:36 2023

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	16F747
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.05
    28                           ; Generated 20/12/2018 GMT
    29                           ; 
    30                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F747 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  018C                     	;# 
   129                           
   130                           	psect	idataBANK0
   131  05E7                     __pidataBANK0:	
   132                           
   133                           ;initializer for _tape_name
   134  05E7  3444               	retlw	68
   135  05E8  3445               	retlw	69
   136  05E9  3452               	retlw	82
   137  05EA  3447               	retlw	71
   138  05EB  3441               	retlw	65
   139  05EC  344E               	retlw	78
   140  05ED  3451               	retlw	81
   141  05EE  3451               	retlw	81
   142                           
   143                           	psect	strings
   144  0600                     __pstrings:	
   145  0600                     stringtab:	
   146  0600                     __stringtab:	
   147  0600                     stringcode:	
   148                           ;	String table - string pointers are 1 byte each
   149                           
   150  0600                     stringdir:	
   151  0600  3006               	movlw	high stringdir
   152  0601  008A               	movwf	10
   153  0602  0804               	movf	4,w
   154  0603  0A84               	incf	4,f
   155  0604  0782               	addwf	2,f
   156  0605                     __stringbase:	
   157  0605  3400               	retlw	0
   158  0606                     __end_of__stringtab:	
   159  0606                     _hex_table:	
   160  0606  3430               	retlw	48
   161  0607  3431               	retlw	49
   162  0608  3432               	retlw	50
   163  0609  3433               	retlw	51
   164  060A  3434               	retlw	52
   165  060B  3435               	retlw	53
   166  060C  3436               	retlw	54
   167  060D  3437               	retlw	55
   168  060E  3438               	retlw	56
   169  060F  3439               	retlw	57
   170  0610  3441               	retlw	65
   171  0611  3442               	retlw	66
   172  0612  3443               	retlw	67
   173  0613  3444               	retlw	68
   174  0614  3445               	retlw	69
   175  0615  3446               	retlw	70
   176  0616                     __end_of_hex_table:	
   177  0616                     _str_cmd_mode:	
   178  0616  3443               	retlw	67
   179  0617  346F               	retlw	111
   180  0618  346D               	retlw	109
   181  0619  346D               	retlw	109
   182  061A  3461               	retlw	97
   183  061B  346E               	retlw	110
   184  061C  3464               	retlw	100
   185  061D  3420               	retlw	32
   186  061E  346D               	retlw	109
   187  061F  346F               	retlw	111
   188  0620  3464               	retlw	100
   189  0621  3465               	retlw	101
   190  0622  340A               	retlw	10
   191  0623  3400               	retlw	0
   192  0624                     __end_of_str_cmd_mode:	
   193  0624                     _str_timeout:	
   194  0624  3454               	retlw	84
   195  0625  3469               	retlw	105
   196  0626  346D               	retlw	109
   197  0627  3465               	retlw	101
   198  0628  346F               	retlw	111
   199  0629  3475               	retlw	117
   200  062A  3474               	retlw	116
   201  062B  343A               	retlw	58
   202  062C  3420               	retlw	32
   203  062D  3400               	retlw	0
   204  062E                     __end_of_str_timeout:	
   205  062E                     STR_4:	
   206  062E  3455               	retlw	85	;'U'
   207  062F  3453               	retlw	83	;'S'
   208  0630  3442               	retlw	66	;'B'
   209  0631  3420               	retlw	32	;' '
   210  0632  3441               	retlw	65	;'A'
   211  0633  3475               	retlw	117	;'u'
   212  0634  3474               	retlw	116	;'t'
   213  0635  346F               	retlw	111	;'o'
   214  0636  3463               	retlw	99	;'c'
   215  0637  346F               	retlw	111	;'o'
   216  0638  346E               	retlw	110	;'n'
   217  0639  3466               	retlw	102	;'f'
   218  063A  3469               	retlw	105	;'i'
   219  063B  3467               	retlw	103	;'g'
   220  063C  343A               	retlw	58	;':'
   221  063D  340A               	retlw	10
   222  063E  3400               	retlw	0
   223  063F                     STR_1:	
   224  063F  3450               	retlw	80	;'P'
   225  0640  3468               	retlw	104	;'h'
   226  0641  3479               	retlw	121	;'y'
   227  0642  3473               	retlw	115	;'s'
   228  0643  3469               	retlw	105	;'i'
   229  0644  3463               	retlw	99	;'c'
   230  0645  3461               	retlw	97	;'a'
   231  0646  346C               	retlw	108	;'l'
   232  0647  3420               	retlw	32	;' '
   233  0648  3462               	retlw	98	;'b'
   234  0649  3479               	retlw	121	;'y'
   235  064A  3474               	retlw	116	;'t'
   236  064B  3465               	retlw	101	;'e'
   237  064C  3473               	retlw	115	;'s'
   238  064D  343A               	retlw	58	;':'
   239  064E  3420               	retlw	32	;' '
   240  064F  3400               	retlw	0
   241  0650                     STR_2:	
   242  0650  344C               	retlw	76	;'L'
   243  0651  346F               	retlw	111	;'o'
   244  0652  3467               	retlw	103	;'g'
   245  0653  3469               	retlw	105	;'i'
   246  0654  3463               	retlw	99	;'c'
   247  0655  3461               	retlw	97	;'a'
   248  0656  346C               	retlw	108	;'l'
   249  0657  3420               	retlw	32	;' '
   250  0658  3462               	retlw	98	;'b'
   251  0659  3479               	retlw	121	;'y'
   252  065A  3474               	retlw	116	;'t'
   253  065B  3465               	retlw	101	;'e'
   254  065C  3473               	retlw	115	;'s'
   255  065D  343A               	retlw	58	;':'
   256  065E  3420               	retlw	32	;' '
   257  065F  3400               	retlw	0
   258  0660                     STR_3:	
   259  0660  3446               	retlw	70	;'F'
   260  0661  3472               	retlw	114	;'r'
   261  0662  3465               	retlw	101	;'e'
   262  0663  3465               	retlw	101	;'e'
   263  0664  3420               	retlw	32	;' '
   264  0665  3462               	retlw	98	;'b'
   265  0666  3479               	retlw	121	;'y'
   266  0667  3474               	retlw	116	;'t'
   267  0668  3465               	retlw	101	;'e'
   268  0669  3473               	retlw	115	;'s'
   269  066A  343A               	retlw	58	;':'
   270  066B  3420               	retlw	32	;' '
   271  066C  3400               	retlw	0
   272  066D                     STR_9:	
   273  066D  3446               	retlw	70	;'F'
   274  066E  3469               	retlw	105	;'i'
   275  066F  346C               	retlw	108	;'l'
   276  0670  3465               	retlw	101	;'e'
   277  0671  3420               	retlw	32	;' '
   278  0672  3473               	retlw	115	;'s'
   279  0673  3469               	retlw	105	;'i'
   280  0674  347A               	retlw	122	;'z'
   281  0675  3465               	retlw	101	;'e'
   282  0676  343A               	retlw	58	;':'
   283  0677  3420               	retlw	32	;' '
   284  0678  3400               	retlw	0
   285  0679                     STR_8:	
   286  0679  3464               	retlw	100	;'d'
   287  067A  3465               	retlw	101	;'e'
   288  067B  3461               	retlw	97	;'a'
   289  067C  3464               	retlw	100	;'d'
   290  067D  3462               	retlw	98	;'b'
   291  067E  3465               	retlw	101	;'e'
   292  067F  3465               	retlw	101	;'e'
   293  0680  3466               	retlw	102	;'f'
   294  0681  340A               	retlw	10
   295  0682  3400               	retlw	0
   296  0683                     STR_5:	
   297  0683  3456               	retlw	86	;'V'
   298  0684  3465               	retlw	101	;'e'
   299  0685  3472               	retlw	114	;'r'
   300  0686  3473               	retlw	115	;'s'
   301  0687  3469               	retlw	105	;'i'
   302  0688  346F               	retlw	111	;'o'
   303  0689  346E               	retlw	110	;'n'
   304  068A  343A               	retlw	58	;':'
   305  068B  3420               	retlw	32	;' '
   306  068C  3400               	retlw	0
   307  068D                     STR_6:	
   308  068D  3453               	retlw	83	;'S'
   309  068E  3474               	retlw	116	;'t'
   310  068F  3461               	retlw	97	;'a'
   311  0690  3474               	retlw	116	;'t'
   312  0691  3475               	retlw	117	;'u'
   313  0692  3473               	retlw	115	;'s'
   314  0693  343A               	retlw	58	;':'
   315  0694  3420               	retlw	32	;' '
   316  0695  3400               	retlw	0
   317  0696                     STR_7:	
   318  0696  3444               	retlw	68	;'D'
   319  0697  3472               	retlw	114	;'r'
   320  0698  3461               	retlw	97	;'a'
   321  0699  3467               	retlw	103	;'g'
   322  069A  346F               	retlw	111	;'o'
   323  069B  346E               	retlw	110	;'n'
   324  069C  3473               	retlw	115	;'s'
   325  069D  3400               	retlw	0
   326                           
   327                           ; #config settings
   328  0000                     
   329                           	psect	cinit
   330  0007                     start_initialization:	
   331  0007                     __initialization:	
   332                           
   333                           ; Initialize objects allocated to BANK0
   334  0007  118A  25E7  118A   	fcall	__pidataBANK0	;fetch initializer
   335  000A  00D3               	movwf	__pdataBANK0& (0+127)
   336  000B  118A  25E8  118A   	fcall	__pidataBANK0+1	;fetch initializer
   337  000E  00D4               	movwf	(__pdataBANK0+1)& (0+127)
   338  000F  118A  25E9  118A   	fcall	__pidataBANK0+2	;fetch initializer
   339  0012  00D5               	movwf	(__pdataBANK0+2)& (0+127)
   340  0013  118A  25EA  118A   	fcall	__pidataBANK0+3	;fetch initializer
   341  0016  00D6               	movwf	(__pdataBANK0+3)& (0+127)
   342  0017  118A  25EB  118A   	fcall	__pidataBANK0+4	;fetch initializer
   343  001A  00D7               	movwf	(__pdataBANK0+4)& (0+127)
   344  001B  118A  25EC  118A   	fcall	__pidataBANK0+5	;fetch initializer
   345  001E  00D8               	movwf	(__pdataBANK0+5)& (0+127)
   346  001F  118A  25ED  118A   	fcall	__pidataBANK0+6	;fetch initializer
   347  0022  00D9               	movwf	(__pdataBANK0+6)& (0+127)
   348  0023  118A  25EE  118A   	fcall	__pidataBANK0+7	;fetch initializer
   349  0026  00DA               	movwf	(__pdataBANK0+7)& (0+127)
   350                           
   351                           ; Clear objects allocated to BANK3
   352  0027  1783               	bsf	3,7	;select IRP bank2
   353  0028  3090               	movlw	low __pbssBANK3
   354  0029  0084               	movwf	4
   355  002A  30F0               	movlw	low (__pbssBANK3+96)
   356  002B  118A  25EF  118A   	fcall	clear_ram0
   357                           
   358                           ; Clear objects allocated to BANK2
   359  002E  3010               	movlw	low __pbssBANK2
   360  002F  0084               	movwf	4
   361  0030  3070               	movlw	low (__pbssBANK2+96)
   362  0031  118A  25EF  118A   	fcall	clear_ram0
   363                           
   364                           ; Clear objects allocated to BANK1
   365  0034  1383               	bcf	3,7	;select IRP bank0
   366  0035  30A0               	movlw	low __pbssBANK1
   367  0036  0084               	movwf	4
   368  0037  30E0               	movlw	low (__pbssBANK1+64)
   369  0038  118A  25EF  118A   	fcall	clear_ram0
   370                           
   371                           ; Clear objects allocated to BANK0
   372  003B  3020               	movlw	low __pbssBANK0
   373  003C  0084               	movwf	4
   374  003D  3048               	movlw	low (__pbssBANK0+40)
   375  003E  118A  25EF  118A   	fcall	clear_ram0
   376                           
   377                           ; Clear objects allocated to COMMON
   378  0041  3070               	movlw	low __pbssCOMMON
   379  0042  0084               	movwf	4
   380  0043  3077               	movlw	low (__pbssCOMMON+7)
   381  0044  118A  25EF         	fcall	clear_ram0
   382  0046                     end_of_initialization:	
   383                           ;End of C runtime variable initialization code
   384                           
   385  0046                     __end_of__initialization:	
   386  0046  0183               	clrf	3
   387  0047  118A  2C6A         	ljmp	_main	;jump to C main() function
   388                           
   389                           	psect	bssCOMMON
   390  0070                     __pbssCOMMON:	
   391  0070                     _fifo_write_idx:	
   392  0070                     	ds	1
   393  0071                     _fifo_read_idx:	
   394  0071                     	ds	1
   395  0072                     _usb_drive_size3:	
   396  0072                     	ds	1
   397  0073                     _usb_drive_size2:	
   398  0073                     	ds	1
   399  0074                     _usb_drive_size1:	
   400  0074                     	ds	1
   401  0075                     _hex_char_low:	
   402  0075                     	ds	1
   403  0076                     _hex_char_high:	
   404  0076                     	ds	1
   405                           
   406                           	psect	bssBANK0
   407  0020                     __pbssBANK0:	
   408  0020                     _fifo_num_bytes:	
   409  0020                     	ds	1
   410  0021                     _fifo_write_bank:	
   411  0021                     	ds	1
   412  0022                     _fifo_read_bank:	
   413  0022                     	ds	1
   414  0023                     _flag_reg:	
   415  0023                     	ds	1
   416  0024                     _delay_counter:	
   417  0024                     	ds	1
   418  0025                     _timeout_low:	
   419  0025                     	ds	1
   420  0026                     _timeout_high:	
   421  0026                     	ds	1
   422  0027                     _s_reg_low:	
   423  0027                     	ds	1
   424  0028                     _s_reg_high:	
   425  0028                     	ds	1
   426  0029                     _usb_target_status:	
   427  0029                     	ds	1
   428  002A                     _usb_logical_bytes3:	
   429  002A                     	ds	1
   430  002B                     _usb_logical_bytes2:	
   431  002B                     	ds	1
   432  002C                     _usb_logical_bytes1:	
   433  002C                     	ds	1
   434  002D                     _usb_free_space3:	
   435  002D                     	ds	1
   436  002E                     _usb_free_space2:	
   437  002E                     	ds	1
   438  002F                     _usb_free_space1:	
   439  002F                     	ds	1
   440  0030                     _usb_bytes_read_low:	
   441  0030                     	ds	1
   442  0031                     _usb_bytes_read_high:	
   443  0031                     	ds	1
   444  0032                     _usb_file_size_low:	
   445  0032                     	ds	1
   446  0033                     _usb_file_size_high:	
   447  0033                     	ds	1
   448  0034                     _usb_bytes_sent_low:	
   449  0034                     	ds	1
   450  0035                     _usb_bytes_sent_high:	
   451  0035                     	ds	1
   452  0036                     _bit_count:	
   453  0036                     	ds	1
   454  0037                     _tape_size_low:	
   455  0037                     	ds	1
   456  0038                     _tape_size_high:	
   457  0038                     	ds	1
   458  0039                     _gen_count6:	
   459  0039                     	ds	1
   460  003A                     _gen_count5:	
   461  003A                     	ds	1
   462  003B                     _gen_count4:	
   463  003B                     	ds	1
   464  003C                     _gen_count3:	
   465  003C                     	ds	1
   466  003D                     _gen_count2:	
   467  003D                     	ds	1
   468  003E                     _gen_count:	
   469  003E                     	ds	1
   470  003F                     _ldel_count:	
   471  003F                     	ds	1
   472  0040                     _sdel_count:	
   473  0040                     	ds	1
   474  0041                     _ram_address_l:	
   475  0041                     	ds	1
   476  0042                     _ram_address_h:	
   477  0042                     	ds	1
   478  0043                     _temp5:	
   479  0043                     	ds	1
   480  0044                     _temp4:	
   481  0044                     	ds	1
   482  0045                     _temp3:	
   483  0045                     	ds	1
   484  0046                     _temp2:	
   485  0046                     	ds	1
   486  0047                     _temp1:	
   487  0047                     	ds	1
   488                           
   489                           	psect	dataBANK0
   490  0053                     __pdataBANK0:	
   491  0053                     _tape_name:	
   492  0053                     	ds	8
   493                           
   494                           	psect	bssBANK1
   495  00A0                     __pbssBANK1:	
   496  00A0                     _fifo_bank_A:	
   497  00A0                     	ds	64
   498                           
   499                           	psect	bssBANK3
   500  0190                     __pbssBANK3:	
   501  0190                     _fifo_bank_B:	
   502  0190                     	ds	96
   503                           
   504                           	psect	bssBANK2
   505  0110                     __pbssBANK2:	
   506  0110                     _fifo_bank_C:	
   507  0110                     	ds	96
   508                           
   509                           	psect	clrtext
   510  05EF                     clear_ram0:	
   511                           ;	Called with FSR containing the base address, and
   512                           ;	W with the last address+1
   513                           
   514  05EF  0064               	clrwdt	;clear the watchdog before getting into this loop
   515  05F0                     clrloop0:	
   516  05F0  0180               	clrf	0	;clear RAM location pointed to by FSR
   517  05F1  0A84               	incf	4,f	;increment pointer
   518  05F2  0604               	xorwf	4,w	;XOR with final address
   519  05F3  1903               	btfsc	3,2	;have we reached the end yet?
   520  05F4  3400               	retlw	0	;all done for this memory range, return
   521  05F5  0604               	xorwf	4,w	;XOR again to restore value
   522  05F6  2DF0               	goto	clrloop0	;do the next byte
   523                           
   524                           	psect	cstackCOMMON
   525  0077                     __pcstackCOMMON:	
   526  0077                     ?_lcd_putc:	
   527  0077                     ??_lcd_putc:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0077                     ?_uart_send:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0077                     ??_uart_send:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0077                     ?_usb_disk_capacity:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0077                     ??_usb_disk_capacity:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0077                     ?_usb_disk_query:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0077                     ??_usb_disk_query:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0077                     ?_usb_check_exists:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0077                     ??_usb_check_exists:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0077                     ?_usb_get_version:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0077                     ??_usb_get_version:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0077                     ?_usb_set_mode:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0077                     ??_usb_set_mode:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0077                     ?_delay_millis:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0077                     ??_delay_millis:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0077                     ?_usb_disk_connect:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0077                     ??_usb_disk_connect:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0077                     ?_usb_disk_mount:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0077                     ??_usb_disk_mount:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0077                     ?_usb_get_status:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0077                     ??_usb_get_status:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0077                     ?_initialize:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0077                     ??_initialize:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0077                     ?_lcd_line2:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0077                     ??_lcd_line2:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0077                     ?_uart_read:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0077                     ??_uart_read:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0077                     ?_usb_reset_all:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0077                     ??_usb_reset_all:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0077                     ?_usb_set_file_name:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0077                     ??_usb_set_file_name:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0077                     ?_print_name:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0077                     ??_print_name:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0077                     ?_usb_file_open:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0077                     ??_usb_file_open:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0077                     ?_usb_file_close:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0077                     ??_usb_file_close:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0077                     ?_usb_get_file_size:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0077                     ??_usb_get_file_size:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0077                     ?_usb_file_read:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0077                     ??_usb_file_read:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0077                     ?_usb_file_create:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0077                     ??_usb_file_create:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0077                     ?_usb_file_write:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0077                     ??_usb_file_write:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0077                     ?_usb_write_test_data:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0077                     ??_usb_write_test_data:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0077                     ?_mem_clear:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0077                     ??_mem_clear:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0077                     ?_mem_dump:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0077                     ??_mem_dump:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0077                     ?_file_dump:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0077                     ??_file_dump:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0077                     ?_print_test_data:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0077                     ??_print_test_data:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0077                     ?_lcd_clear2:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0077                     ??_lcd_clear2:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0077                     ?_fifo_push:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0077                     ??_fifo_push:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0077                     ?_fifo_pop:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0077                     ?_byte_to_hex:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0077                     ?_print_string_lcd:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0077                     ?_print_string_serial:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0077                     ?_print_capacity:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0077                     ??_print_capacity:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0077                     ?_print_query:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0077                     ??_print_query:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0077                     ?_usb_autoconfig:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0077                     ?_main:	
   732                           ; 1 bytes @ 0x0
   733                           
   734                           
   735                           ; 1 bytes @ 0x0
   736  0077                     	ds	1
   737  0078                     fifo_push@data:	
   738                           
   739                           ; 1 bytes @ 0x1
   740  0078                     	ds	1
   741  0079                     ??_fifo_pop:	
   742                           
   743                           ; 1 bytes @ 0x2
   744  0079                     	ds	1
   745  007A                     fifo_pop@temp:	
   746                           
   747                           ; 1 bytes @ 0x3
   748  007A                     	ds	1
   749                           
   750                           	psect	cstackBANK0
   751  0048                     __pcstackBANK0:	
   752  0048                     ??_byte_to_hex:	
   753                           
   754                           ; 1 bytes @ 0x0
   755  0048                     	ds	2
   756  004A                     byte_to_hex@data:	
   757                           
   758                           ; 1 bytes @ 0x2
   759  004A                     	ds	1
   760  004B                     ??_print_string_lcd:	
   761  004B                     ??_print_string_serial:	
   762                           ; 1 bytes @ 0x3
   763                           
   764                           
   765                           ; 1 bytes @ 0x3
   766  004B                     	ds	1
   767  004C                     print_string_lcd@string:	
   768  004C                     print_string_serial@i:	
   769                           ; 1 bytes @ 0x4
   770                           
   771                           
   772                           ; 1 bytes @ 0x4
   773  004C                     	ds	1
   774  004D                     print_string_lcd@i:	
   775  004D                     print_string_serial@string:	
   776                           ; 1 bytes @ 0x5
   777                           
   778                           
   779                           ; 1 bytes @ 0x5
   780  004D                     	ds	1
   781  004E                     ??_usb_autoconfig:	
   782                           
   783                           ; 1 bytes @ 0x6
   784  004E                     	ds	1
   785  004F                     usb_autoconfig@temp:	
   786                           
   787                           ; 1 bytes @ 0x7
   788  004F                     	ds	1
   789  0050                     ??_main:	
   790                           
   791                           ; 1 bytes @ 0x8
   792  0050                     	ds	1
   793  0051                     main@state:	
   794                           
   795                           ; 1 bytes @ 0x9
   796  0051                     	ds	1
   797  0052                     main@temp:	
   798                           
   799                           ; 1 bytes @ 0xA
   800  0052                     	ds	1
   801                           
   802                           	psect	maintext
   803  046A                     __pmaintext:	
   804 ;;
   805 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   806 ;;
   807 ;; *************** function _main *****************
   808 ;; Defined at:
   809 ;;		line 311 in file "main.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  temp            1   10[BANK0 ] unsigned char 
   814 ;;  state           1    9[BANK0 ] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : B00/0
   821 ;;		On exit  : 300/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         0       2       0       0       0
   826 ;;      Temps:          0       1       0       0       0
   827 ;;      Totals:         0       3       0       0       0
   828 ;;Total ram usage:        3 bytes
   829 ;; Hardware stack levels required when called:    6
   830 ;; This function calls:
   831 ;;		_byte_to_hex
   832 ;;		_file_dump
   833 ;;		_initialize
   834 ;;		_lcd_clear2
   835 ;;		_lcd_line2
   836 ;;		_lcd_putc
   837 ;;		_mem_clear
   838 ;;		_mem_dump
   839 ;;		_print_capacity
   840 ;;		_print_name
   841 ;;		_print_query
   842 ;;		_print_string_lcd
   843 ;;		_print_string_serial
   844 ;;		_print_test_data
   845 ;;		_uart_read
   846 ;;		_uart_send
   847 ;;		_usb_autoconfig
   848 ;;		_usb_disk_connect
   849 ;;		_usb_disk_mount
   850 ;;		_usb_file_close
   851 ;;		_usb_file_create
   852 ;;		_usb_file_open
   853 ;;		_usb_file_read
   854 ;;		_usb_file_write
   855 ;;		_usb_get_file_size
   856 ;;		_usb_get_status
   857 ;;		_usb_get_version
   858 ;;		_usb_reset_all
   859 ;;		_usb_set_file_name
   860 ;;		_usb_set_mode
   861 ;;		_usb_write_test_data
   862 ;; This function is called by:
   863 ;;		Startup code after reset
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function _main
   869  046A                     _main:	
   870                           
   871                           ;main.c: 313: unsigned char state = 0;
   872                           
   873                           ;incstack = 0
   874                           ; Regs used in _main: [allreg]
   875  046A  01D1               	clrf	main@state
   876                           
   877                           ;main.c: 314: initialize();
   878  046B  118A  2049  118A   	fcall	_initialize
   879                           
   880                           ;main.c: 320: print_string_lcd("Dragons");
   881  046E  3091               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   882  046F  118A  27DE  118A   	fcall	_print_string_lcd
   883                           
   884                           ;main.c: 321: lcd_line2();
   885  0472  118A  214F  118A   	fcall	_lcd_line2
   886                           
   887                           ;main.c: 323: print_string_serial("deadbeef\n");
   888  0475  3074               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   889  0476  158A  2788  118A   	fcall	_print_string_serial
   890                           
   891                           ;main.c: 330: switch(state)
   892  0479  2D8E               	goto	l2192
   893  047A                     l2194:	
   894                           
   895                           ;main.c: 333: if(temp == 0xDE)
   896  047A  30DE               	movlw	222
   897  047B  0652               	xorwf	main@temp,w
   898  047C  1D03               	btfss	3,2
   899  047D  2D8E               	goto	l2192
   900                           
   901                           ;main.c: 334: state = 1;
   902  047E  01D1               	clrf	main@state
   903  047F  0AD1               	incf	main@state,f
   904  0480  2D8E               	goto	l2192
   905  0481                     l2198:	
   906                           
   907                           ;main.c: 337: if(temp == 0xAD)
   908  0481  30AD               	movlw	173
   909  0482  0652               	xorwf	main@temp,w
   910  0483  1D03               	btfss	3,2
   911  0484  2C87               	goto	l2202
   912                           
   913                           ;main.c: 338: state = 2;
   914  0485  3002               	movlw	2
   915  0486  2C98               	goto	L2
   916  0487                     l2202:	
   917                           
   918                           ;main.c: 339: else;main.c: 340: state = 0;
   919  0487  01D1               	clrf	main@state
   920  0488  2D8E               	goto	l2192
   921  0489                     l2204:	
   922                           
   923                           ;main.c: 343: if(temp == 0xBE)
   924  0489  30BE               	movlw	190
   925  048A  0652               	xorwf	main@temp,w
   926  048B  1D03               	btfss	3,2
   927  048C  2C87               	goto	l2202
   928                           
   929                           ;main.c: 344: state = 3;
   930  048D  3003               	movlw	3
   931  048E  2C98               	goto	L2
   932  048F                     l2210:	
   933                           
   934                           ;main.c: 349: if(temp == 0xEF)
   935  048F  30EF               	movlw	239
   936  0490  0652               	xorwf	main@temp,w
   937  0491  1D03               	btfss	3,2
   938  0492  2C97               	goto	l2214
   939                           
   940                           ;main.c: 350: print_string_serial(str_cmd_mode);
   941  0493  3011               	movlw	(low ((_str_cmd_mode-__stringbase)| (0+32768)))& (0+255)
   942  0494  158A  2788  118A   	fcall	_print_string_serial
   943  0497                     l2214:	
   944                           
   945                           ;main.c: 351: state = 4;
   946  0497  3004               	movlw	4
   947  0498                     L2:	
   948  0498  00D0               	movwf	??_main
   949  0499  0850               	movf	??_main,w
   950  049A  00D1               	movwf	main@state
   951                           
   952                           ;main.c: 352: break;
   953  049B  2D8E               	goto	l2192
   954  049C                     l2216:	
   955                           
   956                           ;main.c: 357: usb_reset_all();
   957  049C  118A  225B  118A   	fcall	_usb_reset_all
   958                           
   959                           ;main.c: 358: break;
   960  049F  2D75               	goto	l2278
   961  04A0                     l2218:	
   962                           
   963                           ;main.c: 360: usb_autoconfig();
   964  04A0  118A  269E  118A   	fcall	_usb_autoconfig
   965                           
   966                           ;main.c: 361: break;
   967  04A3  2D75               	goto	l2278
   968  04A4                     l2220:	
   969                           
   970                           ;main.c: 363: temp = usb_get_version();
   971  04A4  118A  22E5  118A   	fcall	_usb_get_version
   972  04A7  2D03               	goto	L4
   973  04A8                     l2222:	
   974                           ;main.c: 364: break;
   975                           
   976                           
   977                           ;main.c: 366: usb_set_mode(0x05);
   978  04A8  3005               	movlw	5
   979  04A9  118A  22DD  118A   	fcall	_usb_set_mode
   980                           
   981                           ;main.c: 367: break;
   982  04AC  2D75               	goto	l2278
   983  04AD                     l2224:	
   984                           
   985                           ;main.c: 369: usb_set_mode(0x06);
   986  04AD  3006               	movlw	6
   987  04AE  118A  22DD  118A   	fcall	_usb_set_mode
   988                           
   989                           ;main.c: 370: break;
   990  04B1  2D75               	goto	l2278
   991  04B2                     l2226:	
   992                           
   993                           ;main.c: 372: usb_set_mode(0x07);
   994  04B2  3007               	movlw	7
   995  04B3  118A  22DD  118A   	fcall	_usb_set_mode
   996                           
   997                           ;main.c: 373: break;
   998  04B6  2D75               	goto	l2278
   999  04B7                     l2228:	
  1000                           
  1001                           ;main.c: 375: usb_disk_connect();
  1002  04B7  118A  22D8  118A   	fcall	_usb_disk_connect
  1003                           
  1004                           ;main.c: 376: break;
  1005  04BA  2D75               	goto	l2278
  1006  04BB                     l2230:	
  1007                           
  1008                           ;main.c: 378: usb_disk_mount();
  1009  04BB  118A  22D3  118A   	fcall	_usb_disk_mount
  1010                           
  1011                           ;main.c: 379: break;
  1012  04BE  2D75               	goto	l2278
  1013  04BF                     l2232:	
  1014                           
  1015                           ;main.c: 381: temp = usb_get_status();
  1016  04BF  118A  22CC  118A   	fcall	_usb_get_status
  1017  04C2  2D03               	goto	L4
  1018  04C3                     l2234:	
  1019                           ;main.c: 382: break;
  1020                           
  1021                           
  1022                           ;main.c: 384: print_query();
  1023  04C3  118A  2724  118A   	fcall	_print_query
  1024                           
  1025                           ;main.c: 385: break;
  1026  04C6  2D75               	goto	l2278
  1027  04C7                     l2236:	
  1028                           
  1029                           ;main.c: 387: print_capacity();
  1030  04C7  158A  27C8  118A   	fcall	_print_capacity
  1031                           
  1032                           ;main.c: 388: break;
  1033  04CA  2D75               	goto	l2278
  1034  04CB                     l2238:	
  1035                           
  1036                           ;main.c: 390: usb_set_file_name();
  1037  04CB  118A  2260  118A   	fcall	_usb_set_file_name
  1038                           
  1039                           ;main.c: 391: print_name();
  1040  04CE  118A  2180  118A   	fcall	_print_name
  1041                           
  1042                           ;main.c: 392: break;
  1043  04D1  2D75               	goto	l2278
  1044  04D2                     l2240:	
  1045                           
  1046                           ;main.c: 394: usb_file_open();
  1047  04D2  118A  2273  118A   	fcall	_usb_file_open
  1048                           
  1049                           ;main.c: 395: break;
  1050  04D5  2D75               	goto	l2278
  1051  04D6                     l2242:	
  1052                           
  1053                           ;main.c: 397: usb_file_close();
  1054  04D6  118A  2278  118A   	fcall	_usb_file_close
  1055                           
  1056                           ;main.c: 398: break;
  1057  04D9  2D75               	goto	l2278
  1058  04DA                     l2244:	
  1059                           
  1060                           ;main.c: 400: usb_get_file_size();
  1061  04DA  118A  229E  118A   	fcall	_usb_get_file_size
  1062                           
  1063                           ;main.c: 401: print_string_serial("File size: ");
  1064  04DD  3068               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1065  04DE  158A  2788  118A   	fcall	_print_string_serial
  1066                           
  1067                           ;main.c: 402: byte_to_hex(usb_file_size_high);
  1068  04E1  0833               	movf	_usb_file_size_high,w
  1069  04E2  158A  27A5  118A   	fcall	_byte_to_hex
  1070                           
  1071                           ;main.c: 403: uart_send(hex_char_high);
  1072  04E5  0876               	movf	_hex_char_high,w
  1073  04E6  118A  20B6  118A   	fcall	_uart_send
  1074                           
  1075                           ;main.c: 404: uart_send(hex_char_low);
  1076  04E9  0875               	movf	_hex_char_low,w
  1077  04EA  118A  20B6  118A   	fcall	_uart_send
  1078                           
  1079                           ;main.c: 405: byte_to_hex(usb_file_size_low);
  1080  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1081  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1082  04EF  0832               	movf	_usb_file_size_low,w
  1083  04F0  158A  27A5  118A   	fcall	_byte_to_hex
  1084                           
  1085                           ;main.c: 406: uart_send(hex_char_high);
  1086  04F3  0876               	movf	_hex_char_high,w
  1087  04F4  118A  20B6  118A   	fcall	_uart_send
  1088                           
  1089                           ;main.c: 407: uart_send(hex_char_low);
  1090  04F7  0875               	movf	_hex_char_low,w
  1091  04F8  118A  20B6  118A   	fcall	_uart_send
  1092                           
  1093                           ;main.c: 408: uart_send('\n');
  1094  04FB  300A               	movlw	10
  1095  04FC  118A  20B6  118A   	fcall	_uart_send
  1096                           
  1097                           ;main.c: 409: break;
  1098  04FF  2D75               	goto	l2278
  1099  0500                     l2254:	
  1100                           
  1101                           ;main.c: 411: temp = usb_file_read();
  1102  0500  118A  2426  118A   	fcall	_usb_file_read
  1103  0503                     L4:	
  1104  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1105  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1106  0505  00D0               	movwf	??_main
  1107  0506  0850               	movf	??_main,w
  1108  0507  00D2               	movwf	main@temp
  1109                           
  1110                           ;main.c: 412: break;
  1111  0508  2D75               	goto	l2278
  1112  0509                     l2256:	
  1113                           
  1114                           ;main.c: 414: usb_file_create();
  1115  0509  118A  22B9  118A   	fcall	_usb_file_create
  1116                           
  1117                           ;main.c: 415: break;
  1118  050C  2D75               	goto	l2278
  1119  050D                     l2258:	
  1120                           
  1121                           ;main.c: 417: usb_file_write();
  1122  050D  118A  23B5  118A   	fcall	_usb_file_write
  1123                           
  1124                           ;main.c: 418: break;
  1125  0510  2D75               	goto	l2278
  1126  0511                     l2260:	
  1127                           
  1128                           ;main.c: 420: usb_write_test_data();
  1129  0511  118A  2350  118A   	fcall	_usb_write_test_data
  1130                           
  1131                           ;main.c: 421: break;
  1132  0514  2D75               	goto	l2278
  1133  0515                     l2262:	
  1134                           
  1135                           ;main.c: 423: mem_clear();
  1136  0515  118A  2083  118A   	fcall	_mem_clear
  1137                           
  1138                           ;main.c: 424: break;
  1139  0518  2D75               	goto	l2278
  1140  0519                     l2264:	
  1141                           
  1142                           ;main.c: 426: mem_dump();
  1143  0519  118A  2091  118A   	fcall	_mem_dump
  1144                           
  1145                           ;main.c: 427: break;
  1146  051C  2D75               	goto	l2278
  1147  051D                     l2266:	
  1148                           
  1149                           ;main.c: 429: file_dump();
  1150  051D  118A  209F  118A   	fcall	_file_dump
  1151                           
  1152                           ;main.c: 430: break;
  1153  0520  2D75               	goto	l2278
  1154  0521                     l2268:	
  1155                           
  1156                           ;main.c: 432: print_test_data();
  1157  0521  118A  223E  118A   	fcall	_print_test_data
  1158                           
  1159                           ;main.c: 433: break;
  1160  0524  2D75               	goto	l2278
  1161  0525                     l2270:	
  1162                           
  1163                           ;main.c: 435: usb_file_size_low = 16;
  1164  0525  3010               	movlw	16
  1165  0526  00D0               	movwf	??_main
  1166  0527  0850               	movf	??_main,w
  1167  0528  00B2               	movwf	_usb_file_size_low
  1168                           
  1169                           ;main.c: 436: usb_file_size_high = 0;
  1170  0529  01B3               	clrf	_usb_file_size_high
  1171  052A  2D1D               	goto	l2266
  1172  052B                     l2276:	
  1173  052B  0852               	movf	main@temp,w
  1174                           
  1175                           ; Switch size 1, requested type "simple"
  1176                           ; Number of cases is 24, Range of values is 0 to 36
  1177                           ; switch strategies available:
  1178                           ; Name         Instructions Cycles
  1179                           ; simple_byte           73    37 (average)
  1180                           ; direct_byte           81     7 (fixed)
  1181                           ; jumptable            260     6 (fixed)
  1182                           ;	Chosen strategy is simple_byte
  1183  052C  3A00               	xorlw	0	; case 0
  1184  052D  1903               	skipnz
  1185  052E  2C9C               	goto	l2216
  1186  052F  3A01               	xorlw	1	; case 1
  1187  0530  1903               	skipnz
  1188  0531  2CA0               	goto	l2218
  1189  0532  3A03               	xorlw	3	; case 2
  1190  0533  1903               	skipnz
  1191  0534  2CA4               	goto	l2220
  1192  0535  3A01               	xorlw	1	; case 3
  1193  0536  1903               	skipnz
  1194  0537  2CA8               	goto	l2222
  1195  0538  3A07               	xorlw	7	; case 4
  1196  0539  1903               	skipnz
  1197  053A  2CAD               	goto	l2224
  1198  053B  3A01               	xorlw	1	; case 5
  1199  053C  1903               	skipnz
  1200  053D  2CB2               	goto	l2226
  1201  053E  3A03               	xorlw	3	; case 6
  1202  053F  1903               	skipnz
  1203  0540  2CB7               	goto	l2228
  1204  0541  3A01               	xorlw	1	; case 7
  1205  0542  1903               	skipnz
  1206  0543  2CBB               	goto	l2230
  1207  0544  3A0F               	xorlw	15	; case 8
  1208  0545  1903               	skipnz
  1209  0546  2CBF               	goto	l2232
  1210  0547  3A01               	xorlw	1	; case 9
  1211  0548  1903               	skipnz
  1212  0549  2CC3               	goto	l2234
  1213  054A  3A03               	xorlw	3	; case 10
  1214  054B  1903               	skipnz
  1215  054C  2CC7               	goto	l2236
  1216  054D  3A01               	xorlw	1	; case 11
  1217  054E  1903               	skipnz
  1218  054F  2CCB               	goto	l2238
  1219  0550  3A07               	xorlw	7	; case 12
  1220  0551  1903               	skipnz
  1221  0552  2CD2               	goto	l2240
  1222  0553  3A01               	xorlw	1	; case 13
  1223  0554  1903               	skipnz
  1224  0555  2CD6               	goto	l2242
  1225  0556  3A03               	xorlw	3	; case 14
  1226  0557  1903               	skipnz
  1227  0558  2CDA               	goto	l2244
  1228  0559  3A01               	xorlw	1	; case 15
  1229  055A  1903               	skipnz
  1230  055B  2D00               	goto	l2254
  1231  055C  3A1F               	xorlw	31	; case 16
  1232  055D  1903               	skipnz
  1233  055E  2D09               	goto	l2256
  1234  055F  3A01               	xorlw	1	; case 17
  1235  0560  1903               	skipnz
  1236  0561  2D0D               	goto	l2258
  1237  0562  3A03               	xorlw	3	; case 18
  1238  0563  1903               	skipnz
  1239  0564  2D11               	goto	l2260
  1240  0565  3A32               	xorlw	50	; case 32
  1241  0566  1903               	skipnz
  1242  0567  2D15               	goto	l2262
  1243  0568  3A01               	xorlw	1	; case 33
  1244  0569  1903               	skipnz
  1245  056A  2D19               	goto	l2264
  1246  056B  3A03               	xorlw	3	; case 34
  1247  056C  1903               	skipnz
  1248  056D  2D1D               	goto	l2266
  1249  056E  3A01               	xorlw	1	; case 35
  1250  056F  1903               	skipnz
  1251  0570  2D21               	goto	l2268
  1252  0571  3A07               	xorlw	7	; case 36
  1253  0572  1903               	skipnz
  1254  0573  2D25               	goto	l2270
  1255  0574  2D75               	goto	l2278
  1256  0575                     l2278:	
  1257                           
  1258                           ;main.c: 439: byte_to_hex(temp);
  1259  0575  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0576  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0577  0852               	movf	main@temp,w
  1262  0578  158A  27A5  118A   	fcall	_byte_to_hex
  1263                           
  1264                           ;main.c: 440: uart_send(hex_char_high);
  1265  057B  0876               	movf	_hex_char_high,w
  1266  057C  118A  20B6  118A   	fcall	_uart_send
  1267                           
  1268                           ;main.c: 441: uart_send(hex_char_low);
  1269  057F  0875               	movf	_hex_char_low,w
  1270  0580  118A  20B6  118A   	fcall	_uart_send
  1271                           
  1272                           ;main.c: 442: lcd_clear2();
  1273  0583  118A  2168  118A   	fcall	_lcd_clear2
  1274                           
  1275                           ;main.c: 443: lcd_putc(hex_char_high);
  1276  0586  0876               	movf	_hex_char_high,w
  1277  0587  118A  211C  118A   	fcall	_lcd_putc
  1278                           
  1279                           ;main.c: 444: lcd_putc(hex_char_low);
  1280  058A  0875               	movf	_hex_char_low,w
  1281  058B  118A  211C  118A   	fcall	_lcd_putc
  1282  058E                     l2192:	
  1283                           ;main.c: 445: break;
  1284                           
  1285                           
  1286                           ;main.c: 327: {;main.c: 328: temp = uart_read();
  1287  058E  118A  20B2  118A   	fcall	_uart_read
  1288  0591  1283               	bcf	3,5	;RP0=0, select bank0
  1289  0592  1303               	bcf	3,6	;RP1=0, select bank0
  1290  0593  00D0               	movwf	??_main
  1291  0594  0850               	movf	??_main,w
  1292  0595  00D2               	movwf	main@temp
  1293  0596  0851               	movf	main@state,w
  1294                           
  1295                           ; Switch size 1, requested type "simple"
  1296                           ; Number of cases is 5, Range of values is 0 to 4
  1297                           ; switch strategies available:
  1298                           ; Name         Instructions Cycles
  1299                           ; simple_byte           16     9 (average)
  1300                           ; direct_byte           17     7 (fixed)
  1301                           ; jumptable            260     6 (fixed)
  1302                           ;	Chosen strategy is simple_byte
  1303  0597  3A00               	xorlw	0	; case 0
  1304  0598  1903               	skipnz
  1305  0599  2C7A               	goto	l2194
  1306  059A  3A01               	xorlw	1	; case 1
  1307  059B  1903               	skipnz
  1308  059C  2C81               	goto	l2198
  1309  059D  3A03               	xorlw	3	; case 2
  1310  059E  1903               	skipnz
  1311  059F  2C89               	goto	l2204
  1312  05A0  3A01               	xorlw	1	; case 3
  1313  05A1  1903               	skipnz
  1314  05A2  2C8F               	goto	l2210
  1315  05A3  3A07               	xorlw	7	; case 4
  1316  05A4  1903               	skipnz
  1317  05A5  2D2B               	goto	l2276
  1318  05A6  2D8E               	goto	l2192
  1319  05A7  118A  2805         	ljmp	start
  1320  05A9                     __end_of_main:	
  1321                           
  1322                           	psect	text1
  1323  069E                     __ptext1:	
  1324 ;; *************** function _usb_autoconfig *****************
  1325 ;; Defined at:
  1326 ;;		line 270 in file "main.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  temp            1    7[BANK0 ] unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 300/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1340 ;;      Params:         0       0       0       0       0
  1341 ;;      Locals:         0       1       0       0       0
  1342 ;;      Temps:          0       1       0       0       0
  1343 ;;      Totals:         0       2       0       0       0
  1344 ;;Total ram usage:        2 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:    5
  1347 ;; This function calls:
  1348 ;;		_byte_to_hex
  1349 ;;		_delay_millis
  1350 ;;		_print_query
  1351 ;;		_print_string_serial
  1352 ;;		_uart_send
  1353 ;;		_usb_check_exists
  1354 ;;		_usb_disk_connect
  1355 ;;		_usb_disk_mount
  1356 ;;		_usb_get_status
  1357 ;;		_usb_get_version
  1358 ;;		_usb_set_mode
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           
  1365                           ;psect for function _usb_autoconfig
  1366  069E                     _usb_autoconfig:	
  1367                           
  1368                           ;main.c: 272: unsigned char temp;;main.c: 273: print_string_serial("USB Autoconfig:\n");
  1369                           
  1370                           ;incstack = 0
  1371                           ; Regs used in _usb_autoconfig: [allreg]
  1372  069E  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1373  069F  158A  2788  118A   	fcall	_print_string_serial
  1374                           
  1375                           ;main.c: 274: temp = usb_check_exists(0x55);
  1376  06A2  3055               	movlw	85
  1377  06A3  118A  22AF  118A   	fcall	_usb_check_exists
  1378  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  1379  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  1380  06A8  00CE               	movwf	??_usb_autoconfig
  1381  06A9  084E               	movf	??_usb_autoconfig,w
  1382  06AA  00CF               	movwf	usb_autoconfig@temp
  1383                           
  1384                           ;main.c: 275: byte_to_hex(temp);
  1385  06AB  084F               	movf	usb_autoconfig@temp,w
  1386  06AC  158A  27A5  118A   	fcall	_byte_to_hex
  1387                           
  1388                           ;main.c: 276: uart_send(hex_char_high);
  1389  06AF  0876               	movf	_hex_char_high,w
  1390  06B0  118A  20B6  118A   	fcall	_uart_send
  1391                           
  1392                           ;main.c: 277: uart_send(hex_char_low);
  1393  06B3  0875               	movf	_hex_char_low,w
  1394  06B4  118A  20B6  118A   	fcall	_uart_send
  1395                           
  1396                           ;main.c: 278: uart_send('\n');
  1397  06B7  300A               	movlw	10
  1398  06B8  118A  20B6  118A   	fcall	_uart_send
  1399                           
  1400                           ;main.c: 280: temp = usb_get_version();
  1401  06BB  118A  22E5  118A   	fcall	_usb_get_version
  1402  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1403  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1404  06C0  00CE               	movwf	??_usb_autoconfig
  1405  06C1  084E               	movf	??_usb_autoconfig,w
  1406  06C2  00CF               	movwf	usb_autoconfig@temp
  1407                           
  1408                           ;main.c: 281: byte_to_hex(temp);
  1409  06C3  084F               	movf	usb_autoconfig@temp,w
  1410  06C4  158A  27A5  118A   	fcall	_byte_to_hex
  1411                           
  1412                           ;main.c: 282: print_string_serial("Version: ");
  1413  06C7  307E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1414  06C8  158A  2788  118A   	fcall	_print_string_serial
  1415                           
  1416                           ;main.c: 283: uart_send(hex_char_high);
  1417  06CB  0876               	movf	_hex_char_high,w
  1418  06CC  118A  20B6  118A   	fcall	_uart_send
  1419                           
  1420                           ;main.c: 284: uart_send(hex_char_low);
  1421  06CF  0875               	movf	_hex_char_low,w
  1422  06D0  118A  20B6  118A   	fcall	_uart_send
  1423                           
  1424                           ;main.c: 285: uart_send('\n');
  1425  06D3  300A               	movlw	10
  1426  06D4  118A  20B6  118A   	fcall	_uart_send
  1427                           
  1428                           ;main.c: 287: usb_set_mode(0x05);
  1429  06D7  3005               	movlw	5
  1430  06D8  118A  22DD  118A   	fcall	_usb_set_mode
  1431                           
  1432                           ;main.c: 288: delay_millis(1);
  1433  06DB  3001               	movlw	1
  1434  06DC  118A  2232  118A   	fcall	_delay_millis
  1435                           
  1436                           ;main.c: 289: usb_set_mode(0x07);
  1437  06DF  3007               	movlw	7
  1438  06E0  118A  22DD  118A   	fcall	_usb_set_mode
  1439                           
  1440                           ;main.c: 290: delay_millis(1);
  1441  06E3  3001               	movlw	1
  1442  06E4  118A  2232  118A   	fcall	_delay_millis
  1443                           
  1444                           ;main.c: 291: usb_set_mode(0x06);
  1445  06E7  3006               	movlw	6
  1446  06E8  118A  22DD  118A   	fcall	_usb_set_mode
  1447                           
  1448                           ;main.c: 292: delay_millis(1);
  1449  06EB  3001               	movlw	1
  1450  06EC  118A  2232  118A   	fcall	_delay_millis
  1451                           
  1452                           ;main.c: 293: usb_disk_connect();
  1453  06EF  118A  22D8  118A   	fcall	_usb_disk_connect
  1454                           
  1455                           ;main.c: 294: delay_millis(250);
  1456  06F2  30FA               	movlw	250
  1457  06F3  118A  2232  118A   	fcall	_delay_millis
  1458                           
  1459                           ;main.c: 295: delay_millis(250);
  1460  06F6  30FA               	movlw	250
  1461  06F7  118A  2232  118A   	fcall	_delay_millis
  1462                           
  1463                           ;main.c: 296: usb_disk_mount();
  1464  06FA  118A  22D3  118A   	fcall	_usb_disk_mount
  1465                           
  1466                           ;main.c: 297: delay_millis(250);
  1467  06FD  30FA               	movlw	250
  1468  06FE  118A  2232  118A   	fcall	_delay_millis
  1469                           
  1470                           ;main.c: 298: delay_millis(250);
  1471  0701  30FA               	movlw	250
  1472  0702  118A  2232  118A   	fcall	_delay_millis
  1473                           
  1474                           ;main.c: 300: temp = usb_get_status();
  1475  0705  118A  22CC  118A   	fcall	_usb_get_status
  1476  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0709  1303               	bcf	3,6	;RP1=0, select bank0
  1478  070A  00CE               	movwf	??_usb_autoconfig
  1479  070B  084E               	movf	??_usb_autoconfig,w
  1480  070C  00CF               	movwf	usb_autoconfig@temp
  1481                           
  1482                           ;main.c: 301: byte_to_hex(temp);
  1483  070D  084F               	movf	usb_autoconfig@temp,w
  1484  070E  158A  27A5  118A   	fcall	_byte_to_hex
  1485                           
  1486                           ;main.c: 302: print_string_serial("Status: ");
  1487  0711  3088               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1488  0712  158A  2788  118A   	fcall	_print_string_serial
  1489                           
  1490                           ;main.c: 303: uart_send(hex_char_high);
  1491  0715  0876               	movf	_hex_char_high,w
  1492  0716  118A  20B6  118A   	fcall	_uart_send
  1493                           
  1494                           ;main.c: 304: uart_send(hex_char_low);
  1495  0719  0875               	movf	_hex_char_low,w
  1496  071A  118A  20B6  118A   	fcall	_uart_send
  1497                           
  1498                           ;main.c: 305: uart_send('\n');
  1499  071D  300A               	movlw	10
  1500  071E  118A  20B6  118A   	fcall	_uart_send
  1501                           
  1502                           ;main.c: 307: print_query();
  1503  0721  118A  2724         	fcall	_print_query
  1504  0723  0008               	return
  1505  0724                     __end_of_usb_autoconfig:	
  1506                           
  1507                           	psect	text2
  1508  0724                     __ptext2:	
  1509 ;; *************** function _print_query *****************
  1510 ;; Defined at:
  1511 ;;		line 238 in file "main.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1525 ;;      Params:         0       0       0       0       0
  1526 ;;      Locals:         0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0
  1528 ;;      Totals:         0       0       0       0       0
  1529 ;;Total ram usage:        0 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    4
  1532 ;; This function calls:
  1533 ;;		_byte_to_hex
  1534 ;;		_print_string_serial
  1535 ;;		_uart_send
  1536 ;;		_usb_disk_query
  1537 ;; This function is called by:
  1538 ;;		_usb_autoconfig
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           
  1544                           ;psect for function _print_query
  1545  0724                     _print_query:	
  1546                           
  1547                           ;main.c: 240: usb_disk_query();
  1548                           
  1549                           ;incstack = 0
  1550                           ; Regs used in _print_query: [allreg]
  1551  0724  118A  231F  118A   	fcall	_usb_disk_query
  1552                           
  1553                           ;main.c: 241: print_string_serial("Logical bytes: ");
  1554  0727  304B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1555  0728  158A  2788  118A   	fcall	_print_string_serial
  1556                           
  1557                           ;main.c: 242: byte_to_hex(usb_logical_bytes3);
  1558  072B  082A               	movf	_usb_logical_bytes3,w
  1559  072C  158A  27A5  118A   	fcall	_byte_to_hex
  1560                           
  1561                           ;main.c: 243: uart_send(hex_char_high);
  1562  072F  0876               	movf	_hex_char_high,w
  1563  0730  118A  20B6  118A   	fcall	_uart_send
  1564                           
  1565                           ;main.c: 244: uart_send(hex_char_low);
  1566  0733  0875               	movf	_hex_char_low,w
  1567  0734  118A  20B6  118A   	fcall	_uart_send
  1568                           
  1569                           ;main.c: 245: byte_to_hex(usb_logical_bytes2);
  1570  0737  1283               	bcf	3,5	;RP0=0, select bank0
  1571  0738  1303               	bcf	3,6	;RP1=0, select bank0
  1572  0739  082B               	movf	_usb_logical_bytes2,w
  1573  073A  158A  27A5  118A   	fcall	_byte_to_hex
  1574                           
  1575                           ;main.c: 246: uart_send(hex_char_high);
  1576  073D  0876               	movf	_hex_char_high,w
  1577  073E  118A  20B6  118A   	fcall	_uart_send
  1578                           
  1579                           ;main.c: 247: uart_send(hex_char_low);
  1580  0741  0875               	movf	_hex_char_low,w
  1581  0742  118A  20B6  118A   	fcall	_uart_send
  1582                           
  1583                           ;main.c: 248: byte_to_hex(usb_logical_bytes1);
  1584  0745  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0746  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0747  082C               	movf	_usb_logical_bytes1,w
  1587  0748  158A  27A5  118A   	fcall	_byte_to_hex
  1588                           
  1589                           ;main.c: 249: uart_send(hex_char_high);
  1590  074B  0876               	movf	_hex_char_high,w
  1591  074C  118A  20B6  118A   	fcall	_uart_send
  1592                           
  1593                           ;main.c: 250: uart_send(hex_char_low);
  1594  074F  0875               	movf	_hex_char_low,w
  1595  0750  118A  20B6  118A   	fcall	_uart_send
  1596                           
  1597                           ;main.c: 251: uart_send('0');
  1598  0753  3030               	movlw	48
  1599  0754  118A  20B6  118A   	fcall	_uart_send
  1600                           
  1601                           ;main.c: 252: uart_send('0');
  1602  0757  3030               	movlw	48
  1603  0758  118A  20B6  118A   	fcall	_uart_send
  1604                           
  1605                           ;main.c: 253: uart_send('\n');
  1606  075B  300A               	movlw	10
  1607  075C  118A  20B6  118A   	fcall	_uart_send
  1608                           
  1609                           ;main.c: 254: print_string_serial("Free bytes: ");
  1610  075F  305B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1611  0760  158A  2788  118A   	fcall	_print_string_serial
  1612                           
  1613                           ;main.c: 255: byte_to_hex(usb_free_space3);
  1614  0763  082D               	movf	_usb_free_space3,w
  1615  0764  158A  27A5  118A   	fcall	_byte_to_hex
  1616                           
  1617                           ;main.c: 256: uart_send(hex_char_high);
  1618  0767  0876               	movf	_hex_char_high,w
  1619  0768  118A  20B6  118A   	fcall	_uart_send
  1620                           
  1621                           ;main.c: 257: uart_send(hex_char_low);
  1622  076B  0875               	movf	_hex_char_low,w
  1623  076C  118A  20B6  118A   	fcall	_uart_send
  1624                           
  1625                           ;main.c: 258: byte_to_hex(usb_free_space2);
  1626  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1627  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1628  0771  082E               	movf	_usb_free_space2,w
  1629  0772  158A  27A5  118A   	fcall	_byte_to_hex
  1630                           
  1631                           ;main.c: 259: uart_send(hex_char_high);
  1632  0775  0876               	movf	_hex_char_high,w
  1633  0776  118A  20B6  118A   	fcall	_uart_send
  1634                           
  1635                           ;main.c: 260: uart_send(hex_char_low);
  1636  0779  0875               	movf	_hex_char_low,w
  1637  077A  118A  20B6  118A   	fcall	_uart_send
  1638                           
  1639                           ;main.c: 261: byte_to_hex(usb_free_space1);
  1640  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1641  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1642  077F  082F               	movf	_usb_free_space1,w
  1643  0780  158A  27A5  118A   	fcall	_byte_to_hex
  1644                           
  1645                           ;main.c: 262: uart_send(hex_char_high);
  1646  0783  0876               	movf	_hex_char_high,w
  1647  0784  118A  20B6  118A   	fcall	_uart_send
  1648                           
  1649                           ;main.c: 263: uart_send(hex_char_low);
  1650  0787  0875               	movf	_hex_char_low,w
  1651  0788  118A  20B6  118A   	fcall	_uart_send
  1652                           
  1653                           ;main.c: 264: uart_send('0');
  1654  078B  3030               	movlw	48
  1655  078C  118A  20B6  118A   	fcall	_uart_send
  1656                           
  1657                           ;main.c: 265: uart_send('0');
  1658  078F  3030               	movlw	48
  1659  0790  118A  20B6  118A   	fcall	_uart_send
  1660                           
  1661                           ;main.c: 266: uart_send('\n');
  1662  0793  300A               	movlw	10
  1663  0794  118A  20B6  118A   	fcall	_uart_send
  1664  0797  0008               	return
  1665  0798                     __end_of_print_query:	
  1666                           
  1667                           	psect	text3
  1668  07DE                     __ptext3:	
  1669 ;; *************** function _print_string_lcd *****************
  1670 ;; Defined at:
  1671 ;;		line 188 in file "main.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  string          1    wreg     PTR const unsigned char 
  1674 ;;		 -> STR_7(8), 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  string          1    4[BANK0 ] PTR const unsigned char 
  1677 ;;		 -> STR_7(8), 
  1678 ;;  i               1    5[BANK0 ] unsigned char 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 300/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         0       0       0       0       0
  1689 ;;      Locals:         0       2       0       0       0
  1690 ;;      Temps:          0       1       0       0       0
  1691 ;;      Totals:         0       3       0       0       0
  1692 ;;Total ram usage:        3 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    3
  1695 ;; This function calls:
  1696 ;;		_lcd_putc
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           
  1703                           ;psect for function _print_string_lcd
  1704  07DE                     _print_string_lcd:	
  1705                           
  1706                           ;incstack = 0
  1707                           ; Regs used in _print_string_lcd: [allreg]
  1708                           ;print_string_lcd@string stored from wreg
  1709  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1710  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1711  07E0  00CC               	movwf	print_string_lcd@string
  1712                           
  1713                           ;main.c: 190: unsigned char i = 0;
  1714  07E1  01CD               	clrf	print_string_lcd@i
  1715  07E2                     l1288:	
  1716                           ;main.c: 191: while(string[i])
  1717                           
  1718  07E2  084D               	movf	print_string_lcd@i,w
  1719  07E3  074C               	addwf	print_string_lcd@string,w
  1720  07E4  0084               	movwf	4
  1721  07E5  118A  2600  118A   	fcall	stringdir
  1722  07E8  3A00               	xorlw	0
  1723  07E9  1903               	btfsc	3,2
  1724  07EA  0008               	return
  1725                           
  1726                           ;main.c: 192: {;main.c: 193: lcd_putc(string[i]);
  1727  07EB  084D               	movf	print_string_lcd@i,w
  1728  07EC  074C               	addwf	print_string_lcd@string,w
  1729  07ED  0084               	movwf	4
  1730  07EE  118A  2600  118A   	fcall	stringdir
  1731  07F1  118A  211C  118A   	fcall	_lcd_putc
  1732                           
  1733                           ;main.c: 194: ++i;
  1734  07F4  3001               	movlw	1
  1735  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  1736  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  1737  07F7  00CB               	movwf	??_print_string_lcd
  1738  07F8  084B               	movf	??_print_string_lcd,w
  1739  07F9  07CD               	addwf	print_string_lcd@i,f
  1740  07FA  2FE2               	goto	l1288
  1741  07FB                     __end_of_print_string_lcd:	
  1742                           
  1743                           	psect	text4
  1744  0FC8                     __ptext4:	
  1745 ;; *************** function _print_capacity *****************
  1746 ;; Defined at:
  1747 ;;		line 220 in file "main.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 300/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         0       0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0
  1764 ;;      Totals:         0       0       0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    4
  1768 ;; This function calls:
  1769 ;;		_byte_to_hex
  1770 ;;		_print_string_serial
  1771 ;;		_uart_send
  1772 ;;		_usb_disk_capacity
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           
  1779                           ;psect for function _print_capacity
  1780  0FC8                     _print_capacity:	
  1781                           
  1782                           ;main.c: 222: usb_disk_capacity();
  1783                           
  1784                           ;incstack = 0
  1785                           ; Regs used in _print_capacity: [allreg]
  1786  0FC8  118A  22FD  158A   	fcall	_usb_disk_capacity
  1787                           
  1788                           ;main.c: 223: print_string_serial("Physical bytes: ");
  1789  0FCB  303A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1790  0FCC  158A  2788  158A   	fcall	_print_string_serial
  1791                           
  1792                           ;main.c: 224: byte_to_hex(usb_drive_size3);
  1793  0FCF  0872               	movf	_usb_drive_size3,w
  1794  0FD0  158A  27A5  158A   	fcall	_byte_to_hex
  1795                           
  1796                           ;main.c: 225: uart_send(hex_char_high);
  1797  0FD3  0876               	movf	_hex_char_high,w
  1798  0FD4  118A  20B6  158A   	fcall	_uart_send
  1799                           
  1800                           ;main.c: 226: uart_send(hex_char_low);
  1801  0FD7  0875               	movf	_hex_char_low,w
  1802  0FD8  118A  20B6  158A   	fcall	_uart_send
  1803                           
  1804                           ;main.c: 227: byte_to_hex(usb_drive_size2);
  1805  0FDB  0873               	movf	_usb_drive_size2,w
  1806  0FDC  158A  27A5  158A   	fcall	_byte_to_hex
  1807                           
  1808                           ;main.c: 228: uart_send(hex_char_high);
  1809  0FDF  0876               	movf	_hex_char_high,w
  1810  0FE0  118A  20B6  158A   	fcall	_uart_send
  1811                           
  1812                           ;main.c: 229: uart_send(hex_char_low);
  1813  0FE3  0875               	movf	_hex_char_low,w
  1814  0FE4  118A  20B6  158A   	fcall	_uart_send
  1815                           
  1816                           ;main.c: 230: byte_to_hex(usb_drive_size1);
  1817  0FE7  0874               	movf	_usb_drive_size1,w
  1818  0FE8  158A  27A5  158A   	fcall	_byte_to_hex
  1819                           
  1820                           ;main.c: 231: uart_send(hex_char_high);
  1821  0FEB  0876               	movf	_hex_char_high,w
  1822  0FEC  118A  20B6  158A   	fcall	_uart_send
  1823                           
  1824                           ;main.c: 232: uart_send(hex_char_low);
  1825  0FEF  0875               	movf	_hex_char_low,w
  1826  0FF0  118A  20B6  158A   	fcall	_uart_send
  1827                           
  1828                           ;main.c: 233: uart_send('0');
  1829  0FF3  3030               	movlw	48
  1830  0FF4  118A  20B6  158A   	fcall	_uart_send
  1831                           
  1832                           ;main.c: 234: uart_send('0');
  1833  0FF7  3030               	movlw	48
  1834  0FF8  118A  20B6  158A   	fcall	_uart_send
  1835                           
  1836                           ;main.c: 235: uart_send('\n');
  1837  0FFB  300A               	movlw	10
  1838  0FFC  118A  20B6  158A   	fcall	_uart_send
  1839  0FFF  0008               	return
  1840  1000                     __end_of_print_capacity:	
  1841                           
  1842                           	psect	text5
  1843  0F88                     __ptext5:	
  1844 ;; *************** function _print_string_serial *****************
  1845 ;; Defined at:
  1846 ;;		line 199 in file "main.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  string          1    wreg     PTR const unsigned char 
  1849 ;;		 -> STR_9(12), str_cmd_mode(14), STR_8(10), STR_6(9), 
  1850 ;;		 -> STR_5(10), STR_4(17), STR_3(13), STR_2(16), 
  1851 ;;		 -> STR_1(17), str_timeout(10), 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  string          1    5[BANK0 ] PTR const unsigned char 
  1854 ;;		 -> STR_9(12), str_cmd_mode(14), STR_8(10), STR_6(9), 
  1855 ;;		 -> STR_5(10), STR_4(17), STR_3(13), STR_2(16), 
  1856 ;;		 -> STR_1(17), str_timeout(10), 
  1857 ;;  i               1    4[BANK0 ] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 300/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1867 ;;      Params:         0       0       0       0       0
  1868 ;;      Locals:         0       2       0       0       0
  1869 ;;      Temps:          0       1       0       0       0
  1870 ;;      Totals:         0       3       0       0       0
  1871 ;;Total ram usage:        3 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    3
  1874 ;; This function calls:
  1875 ;;		_uart_send
  1876 ;; This function is called by:
  1877 ;;		_print_capacity
  1878 ;;		_print_query
  1879 ;;		_usb_autoconfig
  1880 ;;		_main
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           
  1885                           ;psect for function _print_string_serial
  1886  0F88                     _print_string_serial:	
  1887                           
  1888                           ;incstack = 0
  1889                           ; Regs used in _print_string_serial: [allreg]
  1890                           ;print_string_serial@string stored from wreg
  1891  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0F8A  00CD               	movwf	print_string_serial@string
  1894                           
  1895                           ;main.c: 201: unsigned char i = 0;
  1896  0F8B  01CC               	clrf	print_string_serial@i
  1897  0F8C                     l1244:	
  1898                           ;main.c: 202: while(string[i])
  1899                           
  1900  0F8C  084C               	movf	print_string_serial@i,w
  1901  0F8D  074D               	addwf	print_string_serial@string,w
  1902  0F8E  0084               	movwf	4
  1903  0F8F  118A  2600  158A   	fcall	stringdir
  1904  0F92  3A00               	xorlw	0
  1905  0F93  1903               	btfsc	3,2
  1906  0F94  0008               	return
  1907                           
  1908                           ;main.c: 203: {;main.c: 204: uart_send(string[i]);
  1909  0F95  084C               	movf	print_string_serial@i,w
  1910  0F96  074D               	addwf	print_string_serial@string,w
  1911  0F97  0084               	movwf	4
  1912  0F98  118A  2600  158A   	fcall	stringdir
  1913  0F9B  118A  20B6  158A   	fcall	_uart_send
  1914                           
  1915                           ;main.c: 205: ++i;
  1916  0F9E  3001               	movlw	1
  1917  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0FA1  00CB               	movwf	??_print_string_serial
  1920  0FA2  084B               	movf	??_print_string_serial,w
  1921  0FA3  07CC               	addwf	print_string_serial@i,f
  1922  0FA4  2F8C               	goto	l1244
  1923  0FA5                     __end_of_print_string_serial:	
  1924                           
  1925                           	psect	text6
  1926  0798                     __ptext6:	
  1927 ;; *************** function _fifo_push *****************
  1928 ;; Defined at:
  1929 ;;		line 123 in file "main.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  data            1    wreg     unsigned char 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  data            1    1[COMMON] unsigned char 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      unsigned char 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 300/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1943 ;;      Params:         0       0       0       0       0
  1944 ;;      Locals:         1       0       0       0       0
  1945 ;;      Temps:          1       0       0       0       0
  1946 ;;      Totals:         2       0       0       0       0
  1947 ;;Total ram usage:        2 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		Interrupt level 1
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           
  1957                           ;psect for function _fifo_push
  1958  0798                     _fifo_push:	
  1959                           
  1960                           ;incstack = 0
  1961                           ; Regs used in _fifo_push: [wreg-fsr0h+status,2+status,0]
  1962                           ;fifo_push@data stored from wreg
  1963  0798  00F8               	movwf	fifo_push@data
  1964                           
  1965                           ;main.c: 125: switch(fifo_write_bank)
  1966  0799  2FB0               	goto	l1084
  1967  079A                     l1076:	
  1968                           
  1969                           ;main.c: 128: case 1:;main.c: 129: fifo_bank_A[fifo_write_idx] = data;
  1970  079A  0878               	movf	fifo_push@data,w
  1971  079B  00F7               	movwf	??_fifo_push
  1972  079C  0870               	movf	_fifo_write_idx,w
  1973  079D  3EA0               	addlw	(low (_fifo_bank_A| 0))& (0+255)
  1974  079E  0084               	movwf	4
  1975  079F  0877               	movf	??_fifo_push,w
  1976  07A0  1383               	bcf	3,7	;select IRP bank1
  1977  07A1  2FAE               	goto	L6
  1978  07A2                     l1078:	
  1979                           ;main.c: 130: break;
  1980                           
  1981                           
  1982                           ;main.c: 132: case 3:;main.c: 133: case 4:;main.c: 134: fifo_bank_B[fifo_write_idx - 64]
      +                           = data;
  1983  07A2  0878               	movf	fifo_push@data,w
  1984  07A3  00F7               	movwf	??_fifo_push
  1985  07A4  0870               	movf	_fifo_write_idx,w
  1986  07A5  3E50               	addlw	(low ((_fifo_bank_B| (0+256)+192)))& (0+255)
  1987  07A6  2FAB               	goto	L7
  1988  07A7                     l1080:	
  1989                           ;main.c: 135: break;
  1990                           
  1991                           
  1992                           ;main.c: 137: case 6:;main.c: 138: case 7:;main.c: 139: fifo_bank_C[fifo_write_idx - (64
      +                           + 96)] = data;
  1993  07A7  0878               	movf	fifo_push@data,w
  1994  07A8  00F7               	movwf	??_fifo_push
  1995  07A9  0870               	movf	_fifo_write_idx,w
  1996  07AA  3E70               	addlw	(low ((_fifo_bank_C| (0+256)+96)))& (0+255)
  1997  07AB                     L7:	
  1998  07AB  0084               	movwf	4
  1999  07AC  0877               	movf	??_fifo_push,w
  2000  07AD  1783               	bsf	3,7	;select IRP bank2
  2001  07AE                     L6:	
  2002  07AE  0080               	movwf	0
  2003                           
  2004                           ;main.c: 140: break;
  2005  07AF  2FCC               	goto	l1086
  2006  07B0                     l1084:	
  2007  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  2008  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  2009  07B2  0821               	movf	_fifo_write_bank,w
  2010                           
  2011                           ; Switch size 1, requested type "simple"
  2012                           ; Number of cases is 8, Range of values is 0 to 7
  2013                           ; switch strategies available:
  2014                           ; Name         Instructions Cycles
  2015                           ; direct_byte           23     7 (fixed)
  2016                           ; simple_byte           25    13 (average)
  2017                           ; jumptable            260     6 (fixed)
  2018                           ;	Chosen strategy is simple_byte
  2019  07B3  3A00               	xorlw	0	; case 0
  2020  07B4  1903               	skipnz
  2021  07B5  2F9A               	goto	l1076
  2022  07B6  3A01               	xorlw	1	; case 1
  2023  07B7  1903               	skipnz
  2024  07B8  2F9A               	goto	l1076
  2025  07B9  3A03               	xorlw	3	; case 2
  2026  07BA  1903               	skipnz
  2027  07BB  2FA2               	goto	l1078
  2028  07BC  3A01               	xorlw	1	; case 3
  2029  07BD  1903               	skipnz
  2030  07BE  2FA2               	goto	l1078
  2031  07BF  3A07               	xorlw	7	; case 4
  2032  07C0  1903               	skipnz
  2033  07C1  2FA2               	goto	l1078
  2034  07C2  3A01               	xorlw	1	; case 5
  2035  07C3  1903               	skipnz
  2036  07C4  2FA7               	goto	l1080
  2037  07C5  3A03               	xorlw	3	; case 6
  2038  07C6  1903               	skipnz
  2039  07C7  2FA7               	goto	l1080
  2040  07C8  3A01               	xorlw	1	; case 7
  2041  07C9  1903               	skipnz
  2042  07CA  2FA7               	goto	l1080
  2043  07CB  2FCC               	goto	l1086
  2044  07CC                     l1086:	
  2045                           
  2046                           ;main.c: 142: ++fifo_write_idx;
  2047  07CC  3001               	movlw	1
  2048  07CD  00F7               	movwf	??_fifo_push
  2049  07CE  0877               	movf	??_fifo_push,w
  2050  07CF  07F0               	addwf	_fifo_write_idx,f
  2051                           
  2052                           ;main.c: 143: if(!(fifo_write_idx & 0x1F))
  2053  07D0  0870               	movf	_fifo_write_idx,w
  2054  07D1  391F               	andlw	31
  2055  07D2  1D03               	btfss	3,2
  2056  07D3  2FD8               	goto	l179
  2057                           
  2058                           ;main.c: 144: {;main.c: 145: ++fifo_write_bank;
  2059  07D4  3001               	movlw	1
  2060  07D5  00F7               	movwf	??_fifo_push
  2061  07D6  0877               	movf	??_fifo_push,w
  2062  07D7  07A1               	addwf	_fifo_write_bank,f
  2063  07D8                     l179:	
  2064                           
  2065                           ;main.c: 146: };main.c: 147: ++fifo_num_bytes;
  2066  07D8  3001               	movlw	1
  2067  07D9  00F7               	movwf	??_fifo_push
  2068  07DA  0877               	movf	??_fifo_push,w
  2069  07DB  07A0               	addwf	_fifo_num_bytes,f
  2070                           
  2071                           ;main.c: 148: return fifo_num_bytes;
  2072  07DC  0820               	movf	_fifo_num_bytes,w
  2073  07DD  0008               	return
  2074  07DE                     __end_of_fifo_push:	
  2075                           
  2076                           	psect	text7
  2077  05A9                     __ptext7:	
  2078 ;; *************** function _fifo_pop *****************
  2079 ;; Defined at:
  2080 ;;		line 151 in file "main.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  temp            1    3[COMMON] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      unsigned char 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 300/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         0       0       0       0       0
  2095 ;;      Locals:         1       0       0       0       0
  2096 ;;      Temps:          1       0       0       0       0
  2097 ;;      Totals:         2       0       0       0       0
  2098 ;;Total ram usage:        2 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		Interrupt level 1
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function _fifo_pop
  2109  05A9                     _fifo_pop:	
  2110                           
  2111                           ;main.c: 153: unsigned char temp;;main.c: 154: switch(fifo_read_bank)
  2112                           
  2113                           ;incstack = 0
  2114                           ; Regs used in _fifo_pop: [wreg-fsr0h+status,2+status,0]
  2115  05A9  2DBB               	goto	l1106
  2116  05AA                     l1098:	
  2117                           
  2118                           ;main.c: 157: case 1:;main.c: 158: temp = fifo_bank_A[fifo_read_idx];
  2119  05AA  0871               	movf	_fifo_read_idx,w
  2120  05AB  3EA0               	addlw	(low (_fifo_bank_A| 0))& (0+255)
  2121  05AC  0084               	movwf	4
  2122  05AD  1383               	bcf	3,7	;select IRP bank1
  2123  05AE  2DB6               	goto	L9
  2124  05AF                     l1100:	
  2125                           ;main.c: 159: break;
  2126                           
  2127                           
  2128                           ;main.c: 161: case 3:;main.c: 162: case 4:;main.c: 163: temp = fifo_bank_B[fifo_read_idx
      +                           - 64];
  2129  05AF  0871               	movf	_fifo_read_idx,w
  2130  05B0  3E50               	addlw	(low ((_fifo_bank_B| (0+256)+192)))& (0+255)
  2131  05B1  2DB4               	goto	L10
  2132  05B2                     l1102:	
  2133                           ;main.c: 164: break;
  2134                           
  2135                           
  2136                           ;main.c: 166: case 6:;main.c: 167: case 7:;main.c: 168: temp = fifo_bank_C[fifo_read_idx
      +                           - (64 + 96)];
  2137  05B2  0871               	movf	_fifo_read_idx,w
  2138  05B3  3E70               	addlw	(low ((_fifo_bank_C| (0+256)+96)))& (0+255)
  2139  05B4                     L10:	
  2140  05B4  0084               	movwf	4
  2141  05B5  1783               	bsf	3,7	;select IRP bank2
  2142  05B6                     L9:	
  2143  05B6  0800               	movf	0,w
  2144  05B7  00F9               	movwf	??_fifo_pop
  2145  05B8  0879               	movf	??_fifo_pop,w
  2146  05B9  00FA               	movwf	fifo_pop@temp
  2147                           
  2148                           ;main.c: 169: break;
  2149  05BA  2DD7               	goto	l1108
  2150  05BB                     l1106:	
  2151  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2152  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2153  05BD  0822               	movf	_fifo_read_bank,w
  2154                           
  2155                           ; Switch size 1, requested type "simple"
  2156                           ; Number of cases is 8, Range of values is 0 to 7
  2157                           ; switch strategies available:
  2158                           ; Name         Instructions Cycles
  2159                           ; direct_byte           23     7 (fixed)
  2160                           ; simple_byte           25    13 (average)
  2161                           ; jumptable            260     6 (fixed)
  2162                           ;	Chosen strategy is simple_byte
  2163  05BE  3A00               	xorlw	0	; case 0
  2164  05BF  1903               	skipnz
  2165  05C0  2DAA               	goto	l1098
  2166  05C1  3A01               	xorlw	1	; case 1
  2167  05C2  1903               	skipnz
  2168  05C3  2DAA               	goto	l1098
  2169  05C4  3A03               	xorlw	3	; case 2
  2170  05C5  1903               	skipnz
  2171  05C6  2DAF               	goto	l1100
  2172  05C7  3A01               	xorlw	1	; case 3
  2173  05C8  1903               	skipnz
  2174  05C9  2DAF               	goto	l1100
  2175  05CA  3A07               	xorlw	7	; case 4
  2176  05CB  1903               	skipnz
  2177  05CC  2DAF               	goto	l1100
  2178  05CD  3A01               	xorlw	1	; case 5
  2179  05CE  1903               	skipnz
  2180  05CF  2DB2               	goto	l1102
  2181  05D0  3A03               	xorlw	3	; case 6
  2182  05D1  1903               	skipnz
  2183  05D2  2DB2               	goto	l1102
  2184  05D3  3A01               	xorlw	1	; case 7
  2185  05D4  1903               	skipnz
  2186  05D5  2DB2               	goto	l1102
  2187  05D6  2DD7               	goto	l1108
  2188  05D7                     l1108:	
  2189                           
  2190                           ;main.c: 171: ++fifo_read_idx;
  2191  05D7  3001               	movlw	1
  2192  05D8  00F9               	movwf	??_fifo_pop
  2193  05D9  0879               	movf	??_fifo_pop,w
  2194  05DA  07F1               	addwf	_fifo_read_idx,f
  2195                           
  2196                           ;main.c: 172: if(!(fifo_read_idx & 0x1F))
  2197  05DB  0871               	movf	_fifo_read_idx,w
  2198  05DC  391F               	andlw	31
  2199  05DD  1D03               	btfss	3,2
  2200  05DE  2DE3               	goto	l193
  2201                           
  2202                           ;main.c: 173: {;main.c: 174: ++fifo_read_bank;
  2203  05DF  3001               	movlw	1
  2204  05E0  00F9               	movwf	??_fifo_pop
  2205  05E1  0879               	movf	??_fifo_pop,w
  2206  05E2  07A2               	addwf	_fifo_read_bank,f
  2207  05E3                     l193:	
  2208                           
  2209                           ;main.c: 175: };main.c: 176: --fifo_num_bytes;
  2210  05E3  3001               	movlw	1
  2211  05E4  02A0               	subwf	_fifo_num_bytes,f
  2212                           
  2213                           ;main.c: 177: return temp;
  2214  05E5  087A               	movf	fifo_pop@temp,w
  2215  05E6  0008               	return
  2216  05E7                     __end_of_fifo_pop:	
  2217                           
  2218                           	psect	text8
  2219  0FA5                     __ptext8:	
  2220 ;; *************** function _byte_to_hex *****************
  2221 ;; Defined at:
  2222 ;;		line 180 in file "main.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  data            1    wreg     unsigned char 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  data            1    2[BANK0 ] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 300/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         0       0       0       0       0
  2237 ;;      Locals:         0       1       0       0       0
  2238 ;;      Temps:          0       2       0       0       0
  2239 ;;      Totals:         0       3       0       0       0
  2240 ;;Total ram usage:        3 bytes
  2241 ;; Hardware stack levels used:    2
  2242 ;; Hardware stack levels required when called:    2
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_print_capacity
  2247 ;;		_print_query
  2248 ;;		_usb_autoconfig
  2249 ;;		_main
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           
  2254                           ;psect for function _byte_to_hex
  2255  0FA5                     _byte_to_hex:	
  2256                           
  2257                           ;incstack = 0
  2258 ;; using string table level
  2259                           ; Regs used in _byte_to_hex: [wreg-fsr0h+status,2+status,0+pclath]
  2260                           ;byte_to_hex@data stored from wreg
  2261  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0FA7  00CA               	movwf	byte_to_hex@data
  2264                           
  2265                           ;main.c: 182: hex_char_low = hex_table[data & (unsigned char)0x0F];
  2266  0FA8  084A               	movf	byte_to_hex@data,w
  2267  0FA9  390F               	andlw	15
  2268  0FAA  3E01               	addlw	low ((_hex_table-__stringbase)| (0+32768))
  2269  0FAB  0084               	movwf	4
  2270  0FAC  118A  2600  158A   	fcall	stringdir
  2271  0FAF  00C8               	movwf	??_byte_to_hex
  2272  0FB0  0848               	movf	??_byte_to_hex,w
  2273  0FB1  00F5               	movwf	_hex_char_low
  2274                           
  2275                           ;main.c: 183: data = data >> 4;
  2276  0FB2  084A               	movf	byte_to_hex@data,w
  2277  0FB3  00C8               	movwf	??_byte_to_hex
  2278  0FB4  3004               	movlw	4
  2279  0FB5                     u41_25:	
  2280  0FB5  1003               	clrc
  2281  0FB6  0CC8               	rrf	??_byte_to_hex,f
  2282  0FB7  3EFF               	addlw	-1
  2283  0FB8  1D03               	skipz
  2284  0FB9  2FB5               	goto	u41_25
  2285  0FBA  0848               	movf	??_byte_to_hex,w
  2286  0FBB  00C9               	movwf	??_byte_to_hex+1
  2287  0FBC  0849               	movf	??_byte_to_hex+1,w
  2288  0FBD  00CA               	movwf	byte_to_hex@data
  2289                           
  2290                           ;main.c: 184: hex_char_high = hex_table[data & (unsigned char)0x0F];
  2291  0FBE  084A               	movf	byte_to_hex@data,w
  2292  0FBF  390F               	andlw	15
  2293  0FC0  3E01               	addlw	low ((_hex_table-__stringbase)| (0+32768))
  2294  0FC1  0084               	movwf	4
  2295  0FC2  118A  2600         	fcall	stringdir
  2296  0FC4  00C8               	movwf	??_byte_to_hex
  2297  0FC5  0848               	movf	??_byte_to_hex,w
  2298  0FC6  00F6               	movwf	_hex_char_high
  2299  0FC7  0008               	return
  2300  0FC8                     __end_of_byte_to_hex:	
  2301  007E                     btemp	set	126	;btemp
  2302  007E                     wtemp0	set	126


Data Sizes:
    Strings     112
    Constant    40
    Data        8
    BSS         303
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      11
    BANK0            80     11      59
    BANK1            80      0      64
    BANK3            96      0      96
    BANK2            96      0      96

Pointer List with Targets:

    print_string_serial@string	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_9(CODE[12]), str_cmd_mode(CODE[14]), STR_8(CODE[10]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[17]), STR_3(CODE[13]), STR_2(CODE[16]), 
		 -> STR_1(CODE[17]), str_timeout(CODE[10]), 

    print_string_lcd@string	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_7(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _fifo_push in COMMON

    None.

Critical Paths under _fifo_pop in COMMON

    None.

Critical Paths under _byte_to_hex in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_usb_autoconfig
    _usb_autoconfig->_print_string_serial
    _print_query->_print_string_serial
    _print_capacity->_print_string_serial

Critical Paths under _fifo_push in BANK0

    None.

Critical Paths under _fifo_pop in BANK0

    None.

Critical Paths under _byte_to_hex in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fifo_push in BANK1

    None.

Critical Paths under _fifo_pop in BANK1

    None.

Critical Paths under _byte_to_hex in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fifo_push in BANK3

    None.

Critical Paths under _fifo_pop in BANK3

    None.

Critical Paths under _byte_to_hex in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fifo_push in BANK2

    None.

Critical Paths under _fifo_pop in BANK2

    None.

Critical Paths under _byte_to_hex in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5190
                                              8 BANK0      3     3      0
                        _byte_to_hex
                          _file_dump
                         _initialize
                         _lcd_clear2
                          _lcd_line2
                           _lcd_putc
                          _mem_clear
                           _mem_dump
                     _print_capacity
                         _print_name
                        _print_query
                   _print_string_lcd
                _print_string_serial
                    _print_test_data
                          _uart_read
                          _uart_send
                     _usb_autoconfig
                   _usb_disk_connect
                     _usb_disk_mount
                     _usb_file_close
                    _usb_file_create
                      _usb_file_open
                      _usb_file_read
                     _usb_file_write
                  _usb_get_file_size
                     _usb_get_status
                    _usb_get_version
                      _usb_reset_all
                  _usb_set_file_name
                       _usb_set_mode
                _usb_write_test_data
 ---------------------------------------------------------------------------------
 (1) _usb_write_test_data                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_set_file_name                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_reset_all                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_file_size                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_write                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_read                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_open                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_create                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_close                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_autoconfig                                       2     2      0    1868
                                              6 BANK0      2     2      0
                        _byte_to_hex
                       _delay_millis
                        _print_query
                _print_string_serial
                          _uart_send
                   _usb_check_exists
                   _usb_disk_connect
                     _usb_disk_mount
                     _usb_get_status
                    _usb_get_version
                       _usb_set_mode
 ---------------------------------------------------------------------------------
 (1) _usb_set_mode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_version                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_status                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_disk_mount                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_disk_connect                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _usb_check_exists                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _print_query                                          0     0      0     772
                        _byte_to_hex
                _print_string_serial
                          _uart_send
                     _usb_disk_query
 ---------------------------------------------------------------------------------
 (3) _usb_disk_query                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _delay_millis                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_test_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_string_lcd                                     3     3      0     166
                                              3 BANK0      3     3      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_name                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_capacity                                       0     0      0     772
                        _byte_to_hex
                _print_string_serial
                          _uart_send
                  _usb_disk_capacity
 ---------------------------------------------------------------------------------
 (2) _usb_disk_capacity                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _print_string_serial                                  3     3      0     490
                                              3 BANK0      3     3      0
                          _uart_send
 ---------------------------------------------------------------------------------
 (2) _uart_send                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _byte_to_hex                                          3     3      0     282
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _mem_dump                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mem_clear                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_line2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_clear2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _file_dump                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fifo_push                                            2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fifo_pop                                             2     2      0      25
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _byte_to_hex                                          3     3      0     282
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _byte_to_hex
   _file_dump
   _initialize
   _lcd_clear2
   _lcd_line2
   _lcd_putc
   _mem_clear
   _mem_dump
   _print_capacity
     _byte_to_hex
     _print_string_serial
       _uart_send
     _uart_send
     _usb_disk_capacity
   _print_name
   _print_query
     _byte_to_hex
     _print_string_serial
       _uart_send
     _uart_send
     _usb_disk_query
   _print_string_lcd
     _lcd_putc
   _print_string_serial
     _uart_send
   _print_test_data
   _uart_read
   _uart_send
   _usb_autoconfig
     _byte_to_hex
     _delay_millis
     _print_query
       _byte_to_hex
       _print_string_serial
         _uart_send
       _uart_send
       _usb_disk_query
     _print_string_serial
       _uart_send
     _uart_send
     _usb_check_exists
     _usb_disk_connect
     _usb_disk_mount
     _usb_get_status
     _usb_get_version
     _usb_set_mode
   _usb_disk_connect
   _usb_disk_mount
   _usb_file_close
   _usb_file_create
   _usb_file_open
   _usb_file_read
   _usb_file_write
   _usb_get_file_size
   _usb_get_status
   _usb_get_version
   _usb_reset_all
   _usb_set_file_name
   _usb_set_mode
   _usb_write_test_data

 _fifo_push (ROOT)

 _fifo_pop (ROOT)

 _byte_to_hex (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      60      10      100.0%
BITBANK3            60      0       0       9        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      60      12      100.0%
BITBANK2            60      0       0      11        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       8       80.0%
BITBANK1            50      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      3B       5       73.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     146       6        0.0%
ABS                  0      0     146       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jun 10 16:15:36 2023

                           pc 0002                   __CFG_CP$OFF 0000                            fsr 0004  
               _hex_char_high 0076                 _usb_file_read 0426                 _usb_file_open 0273  
                         l193 05E3                           l179 07D8              ?_print_test_data 0077  
                         fsr0 0004                           indf 0000                  __CFG_BORV$42 0000  
                __CFG_FOSC$XT 0000           _usb_bytes_read_high 0031                _usb_file_close 0278  
                _usb_set_mode 02DD                _usb_file_write 03B5                          l1100 05AF  
                        l1102 05B2                          l1106 05BB                          l1108 05D7  
                        l1080 07A7                          l2210 048F                          l2202 0487  
                        l1076 079A                          l1084 07B0                          l1244 0F8C  
                        l2220 04A4                          l2204 0489                          l1078 07A2  
                        l1086 07CC                          l2230 04BB                          l2222 04A8  
                        l2214 0497                          l2240 04D2                          l2232 04BF  
                        l2224 04AD                          l2216 049C                          l1098 05AA  
                        l2242 04D6                          l2234 04C3                          l2226 04B2  
                        l2218 04A0                          l2260 0511                          l2244 04DA  
                        l2236 04C7                          l2228 04B7                _usb_disk_mount 02D3  
                        l2270 0525                          l2262 0515                          l2254 0500  
                        l2238 04CB                          l1288 07E2                          l2264 0519  
                        l2256 0509                          l2192 058E                          l2266 051D  
                        l2258 050D                          l2194 047A                          l2276 052B  
                        l2268 0521                          l2278 0575                          l2198 0481  
              _usb_disk_query 031F                          STR_1 063F                          STR_2 0650  
                        STR_3 0660                          STR_4 062E                          STR_5 0683  
                        STR_6 068D                          STR_7 0696                          STR_8 0679  
                        STR_9 066D                _usb_get_status 02CC                          _main 046A  
          usb_autoconfig@temp 004F                          btemp 007E                 __CFG_BOREN$ON 0000  
         _usb_bytes_sent_high 0035                          start 0005                 __CFG_IESO$OFF 0000  
                 _str_timeout 0624                 __CFG_MCLRE$ON 0000               _usb_file_create 02B9  
               _usb_reset_all 025B                _usb_autoconfig 069E                ?_usb_file_read 0077  
              ?_usb_file_open 0077                         ?_main 0077                  ?_byte_to_hex 0077  
               __CFG_WDTE$OFF 0000                  _str_cmd_mode 0616                         u41_25 0FB5  
               __CFG_PWRTE$ON 0000             ?_print_string_lcd 0077                __CFG_FCMEN$OFF 0000  
             _usb_get_version 02E5            ??_print_string_lcd 004B                         _temp1 0047  
                       _temp2 0046                         _temp3 0045                         _temp4 0044  
                       _temp5 0043                         pclath 000A                         status 0003  
                       wtemp0 007E               _usb_free_space1 002F               _usb_free_space2 002E  
             _usb_free_space3 002D             _usb_target_status 0029               __initialization 0007  
      __end_of_usb_autoconfig 0724                ?_usb_reset_all 0077                  __end_of_main 05A9  
             _usb_drive_size1 0074               _usb_drive_size2 0073               _usb_drive_size3 0072  
           _usb_set_file_name 0260            ?_usb_set_file_name 0077                        ??_main 0050  
            _usb_disk_connect 02D8               ?_usb_file_close 0077           ??_usb_set_file_name 0077  
             __CFG_CCP2MX$RC1 0000               ?_usb_file_write 0077               ?_usb_disk_mount 0077  
             ?_usb_disk_query 0077               ?_usb_get_status 0077   __end_of_print_string_serial 0FA5  
            __end_of_fifo_pop 05E7               ?_usb_autoconfig 0077               ??_usb_file_read 0077  
             ??_usb_file_open 0077              ??_print_capacity 0077               __CFG_BORSEN$OFF 0000  
     __end_of__initialization 0046                  ?_print_query 0077                _tape_size_high 0038  
             ??_usb_reset_all 0077                __pcstackCOMMON 0077                  __pidataBANK0 05E7  
        __size_of_byte_to_hex 0023            __size_of_fifo_push 0046             _usb_disk_capacity 02FD  
          ?_usb_disk_capacity 0077                    __pbssBANK0 0020                    __pbssBANK1 00A0  
                  __pbssBANK2 0110                    __pbssBANK3 0190             _usb_file_size_low 0032  
            ?_usb_file_create 0077           ??_usb_disk_capacity 0077                  _delay_millis 0232  
           _usb_get_file_size 029E                    __pmaintext 046A           _usb_write_test_data 0350  
          ?_usb_get_file_size 0077                    _gen_count2 003D                    _gen_count3 003C  
                  _gen_count4 003B                    _gen_count5 003A                    _gen_count6 0039  
            ?_usb_get_version 0077           ??_usb_get_file_size 0077               byte_to_hex@data 004A  
                  _lcd_clear2 0168                 _ram_address_h 0042                 _ram_address_l 0041  
        ?_usb_write_test_data 0077                     ?_fifo_pop 0077                     ?_lcd_putc 0077  
                  __stringtab 0600                    _ldel_count 003F                     ?_mem_dump 0077  
   __size_of_print_string_lcd 001D             __end_of_fifo_push 07DE        print_string_lcd@string 004C  
           __end_of_hex_table 0616              ??_usb_file_close 0077                    _initialize 0049  
            ??_usb_file_write 0077                       __ptext1 069E                       __ptext2 0724  
                     __ptext3 07DE                       __ptext4 0FC8                       __ptext5 0F88  
                     __ptext6 0798                       __ptext7 05A9                       __ptext8 0FA5  
            ??_usb_disk_mount 0077              ??_usb_disk_query 0077              ??_usb_get_status 0077  
       ??_usb_write_test_data 0077                    _s_reg_high 0028                    _sdel_count 0040  
                  ??_fifo_pop 0079                       clrloop0 05F0                    ??_lcd_putc 0077  
        end_of_initialization 0046                    ??_mem_dump 0077              ??_usb_autoconfig 004E  
        __size_of_print_query 0074             ?_usb_check_exists 0077            ??_usb_check_exists 0077  
                  _print_name 0180                   ?_lcd_clear2 0077                  _hex_char_low 0075  
             _fifo_write_bank 0021            _usb_bytes_read_low 0030             ??_print_test_data 0077  
          _usb_bytes_sent_low 0034  __size_of_print_string_serial 001D                   ?_initialize 0077  
         start_initialization 0007                 ?_usb_set_mode 0077              _print_string_lcd 07DE  
                 __pdataBANK0 0053                 ??_byte_to_hex 0048                   ?_print_name 0077  
          _usb_file_size_high 0033                 _tape_size_low 0037                   __pbssCOMMON 0070  
                   ___latbits 0001                ??_usb_set_mode 0077          print_string_serial@i 004C  
               __pcstackBANK0 0048                 _delay_counter 0024       __size_of_print_capacity 0038  
           __size_of_fifo_pop 003E             ?_usb_disk_connect 0077            ??_usb_disk_connect 0077  
                   _bit_count 0036                     _gen_count 003E                     _file_dump 009F  
                   _fifo_push 0798                     _lcd_line2 014F            _usb_logical_bytes1 002C  
          _usb_logical_bytes2 002B            _usb_logical_bytes3 002A                     __pstrings 0600  
              _fifo_read_bank 0022                     _hex_table 0606                     _mem_clear 0083  
           print_string_lcd@i 004D                   _fifo_bank_A 00A0                   _fifo_bank_B 0190  
                 _fifo_bank_C 0110           __end_of_byte_to_hex 0FC8                     _s_reg_low 0027  
              _fifo_num_bytes 0020                     clear_ram0 05EF                     _tape_name 0053  
                   _uart_read 00B2                     _uart_send 00B6                    ?_file_dump 0077  
                  ?_fifo_push 0077                    ?_lcd_line2 0077                   __stringbase 0605  
                ??_lcd_clear2 0077                _fifo_write_idx 0070                     main@state 0051  
                  ?_mem_clear 0077           _print_string_serial 0F88               _print_test_data 023E  
               ??_print_query 0077          ?_print_string_serial 0077                    ?_uart_read 0077  
                  ?_uart_send 0077                  ??_initialize 0077     print_string_serial@string 004D  
          __end_of__stringtab 0606                   _byte_to_hex 0FA5             ??_usb_file_create 0077  
    __end_of_print_string_lcd 07FB                      _flag_reg 0023                      _fifo_pop 05A9  
              _print_capacity 0FC8                      _lcd_putc 011C                 _fifo_read_idx 0071  
                    _mem_dump 0091          __end_of_str_cmd_mode 0624                 __size_of_main 013F  
               ?_delay_millis 0077             ??_usb_get_version 0077         ??_print_string_serial 004B  
         __end_of_print_query 0798                   ??_file_dump 0077       __size_of_usb_autoconfig 0086  
                 ??_fifo_push 0077                   ??_lcd_line2 0077                      main@temp 0052  
                ??_print_name 0077                   ??_mem_clear 0077        __end_of_print_capacity 1000  
                    intlevel1 0000                ??_delay_millis 0077                     stringcode 0600  
                 ??_uart_read 0077                   ??_uart_send 0077           __end_of_str_timeout 062E  
                _timeout_high 0026                      stringdir 0600                      stringtab 0600  
             ?_print_capacity 0077              _usb_check_exists 02AF                   _timeout_low 0025  
                 _print_query 0724                  fifo_pop@temp 007A                 fifo_push@data 0078  

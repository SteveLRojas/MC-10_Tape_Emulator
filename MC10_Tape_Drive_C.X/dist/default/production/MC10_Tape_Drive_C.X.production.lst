

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon May 29 16:41:31 2023

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	16F747
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.05
    28                           ; Generated 20/12/2018 GMT
    29                           ; 
    30                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F747 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  018C                     	;# 
   129                           
   130                           	psect	idataBANK0
   131  0141                     __pidataBANK0:	
   132                           
   133                           ;initializer for _tape_name
   134  0141  3444               	retlw	68
   135  0142  3445               	retlw	69
   136  0143  3452               	retlw	82
   137  0144  3447               	retlw	71
   138  0145  3441               	retlw	65
   139  0146  344E               	retlw	78
   140  0147  3451               	retlw	81
   141  0148  3451               	retlw	81
   142                           
   143                           	psect	strings
   144  0002                     __pstrings:	
   145  0002                     stringtab:	
   146  0002                     __stringtab:	
   147  0002                     stringcode:	
   148                           ;	String table - string pointers are 1 byte each
   149                           
   150  0002                     stringdir:	
   151  0002  3000               	movlw	high stringdir
   152  0003  008A               	movwf	10
   153  0004  0804               	movf	4,w
   154  0005  0A84               	incf	4,f
   155  0006  0782               	addwf	2,f
   156  0007                     __stringbase:	
   157  0007  3400               	retlw	0
   158  0008                     __end_of__stringtab:	
   159  0008                     _hex_table:	
   160  0008  3430               	retlw	48
   161  0009  3431               	retlw	49
   162  000A  3432               	retlw	50
   163  000B  3433               	retlw	51
   164  000C  3434               	retlw	52
   165  000D  3435               	retlw	53
   166  000E  3436               	retlw	54
   167  000F  3437               	retlw	55
   168  0010  3438               	retlw	56
   169  0011  3439               	retlw	57
   170  0012  3441               	retlw	65
   171  0013  3442               	retlw	66
   172  0014  3443               	retlw	67
   173  0015  3444               	retlw	68
   174  0016  3445               	retlw	69
   175  0017  3446               	retlw	70
   176  0018                     __end_of_hex_table:	
   177  0018                     _str_cmd_mode:	
   178  0018  3443               	retlw	67
   179  0019  346F               	retlw	111
   180  001A  346D               	retlw	109
   181  001B  346D               	retlw	109
   182  001C  3461               	retlw	97
   183  001D  346E               	retlw	110
   184  001E  3464               	retlw	100
   185  001F  3420               	retlw	32
   186  0020  346D               	retlw	109
   187  0021  346F               	retlw	111
   188  0022  3464               	retlw	100
   189  0023  3465               	retlw	101
   190  0024  340A               	retlw	10
   191  0025  3400               	retlw	0
   192  0026                     __end_of_str_cmd_mode:	
   193  0026                     _str_timeout:	
   194  0026  3454               	retlw	84
   195  0027  3469               	retlw	105
   196  0028  346D               	retlw	109
   197  0029  3465               	retlw	101
   198  002A  346F               	retlw	111
   199  002B  3475               	retlw	117
   200  002C  3474               	retlw	116
   201  002D  343A               	retlw	58
   202  002E  3420               	retlw	32
   203  002F  3400               	retlw	0
   204  0030                     __end_of_str_timeout:	
   205  0030                     STR_4:	
   206  0030  3455               	retlw	85	;'U'
   207  0031  3453               	retlw	83	;'S'
   208  0032  3442               	retlw	66	;'B'
   209  0033  3420               	retlw	32	;' '
   210  0034  3441               	retlw	65	;'A'
   211  0035  3475               	retlw	117	;'u'
   212  0036  3474               	retlw	116	;'t'
   213  0037  346F               	retlw	111	;'o'
   214  0038  3463               	retlw	99	;'c'
   215  0039  346F               	retlw	111	;'o'
   216  003A  346E               	retlw	110	;'n'
   217  003B  3466               	retlw	102	;'f'
   218  003C  3469               	retlw	105	;'i'
   219  003D  3467               	retlw	103	;'g'
   220  003E  343A               	retlw	58	;':'
   221  003F  340A               	retlw	10
   222  0040  3400               	retlw	0
   223  0041                     STR_1:	
   224  0041  3450               	retlw	80	;'P'
   225  0042  3468               	retlw	104	;'h'
   226  0043  3479               	retlw	121	;'y'
   227  0044  3473               	retlw	115	;'s'
   228  0045  3469               	retlw	105	;'i'
   229  0046  3463               	retlw	99	;'c'
   230  0047  3461               	retlw	97	;'a'
   231  0048  346C               	retlw	108	;'l'
   232  0049  3420               	retlw	32	;' '
   233  004A  3462               	retlw	98	;'b'
   234  004B  3479               	retlw	121	;'y'
   235  004C  3474               	retlw	116	;'t'
   236  004D  3465               	retlw	101	;'e'
   237  004E  3473               	retlw	115	;'s'
   238  004F  343A               	retlw	58	;':'
   239  0050  3420               	retlw	32	;' '
   240  0051  3400               	retlw	0
   241  0052                     STR_2:	
   242  0052  344C               	retlw	76	;'L'
   243  0053  346F               	retlw	111	;'o'
   244  0054  3467               	retlw	103	;'g'
   245  0055  3469               	retlw	105	;'i'
   246  0056  3463               	retlw	99	;'c'
   247  0057  3461               	retlw	97	;'a'
   248  0058  346C               	retlw	108	;'l'
   249  0059  3420               	retlw	32	;' '
   250  005A  3462               	retlw	98	;'b'
   251  005B  3479               	retlw	121	;'y'
   252  005C  3474               	retlw	116	;'t'
   253  005D  3465               	retlw	101	;'e'
   254  005E  3473               	retlw	115	;'s'
   255  005F  343A               	retlw	58	;':'
   256  0060  3420               	retlw	32	;' '
   257  0061  3400               	retlw	0
   258  0062                     STR_3:	
   259  0062  3446               	retlw	70	;'F'
   260  0063  3472               	retlw	114	;'r'
   261  0064  3465               	retlw	101	;'e'
   262  0065  3465               	retlw	101	;'e'
   263  0066  3420               	retlw	32	;' '
   264  0067  3462               	retlw	98	;'b'
   265  0068  3479               	retlw	121	;'y'
   266  0069  3474               	retlw	116	;'t'
   267  006A  3465               	retlw	101	;'e'
   268  006B  3473               	retlw	115	;'s'
   269  006C  343A               	retlw	58	;':'
   270  006D  3420               	retlw	32	;' '
   271  006E  3400               	retlw	0
   272  006F                     STR_9:	
   273  006F  3446               	retlw	70	;'F'
   274  0070  3469               	retlw	105	;'i'
   275  0071  346C               	retlw	108	;'l'
   276  0072  3465               	retlw	101	;'e'
   277  0073  3420               	retlw	32	;' '
   278  0074  3473               	retlw	115	;'s'
   279  0075  3469               	retlw	105	;'i'
   280  0076  347A               	retlw	122	;'z'
   281  0077  3465               	retlw	101	;'e'
   282  0078  343A               	retlw	58	;':'
   283  0079  3420               	retlw	32	;' '
   284  007A  3400               	retlw	0
   285  007B                     STR_8:	
   286  007B  3464               	retlw	100	;'d'
   287  007C  3465               	retlw	101	;'e'
   288  007D  3461               	retlw	97	;'a'
   289  007E  3464               	retlw	100	;'d'
   290  007F  3462               	retlw	98	;'b'
   291  0080  3465               	retlw	101	;'e'
   292  0081  3465               	retlw	101	;'e'
   293  0082  3466               	retlw	102	;'f'
   294  0083  340A               	retlw	10
   295  0084  3400               	retlw	0
   296  0085                     STR_5:	
   297  0085  3456               	retlw	86	;'V'
   298  0086  3465               	retlw	101	;'e'
   299  0087  3472               	retlw	114	;'r'
   300  0088  3473               	retlw	115	;'s'
   301  0089  3469               	retlw	105	;'i'
   302  008A  346F               	retlw	111	;'o'
   303  008B  346E               	retlw	110	;'n'
   304  008C  343A               	retlw	58	;':'
   305  008D  3420               	retlw	32	;' '
   306  008E  3400               	retlw	0
   307  008F                     STR_6:	
   308  008F  3453               	retlw	83	;'S'
   309  0090  3474               	retlw	116	;'t'
   310  0091  3461               	retlw	97	;'a'
   311  0092  3474               	retlw	116	;'t'
   312  0093  3475               	retlw	117	;'u'
   313  0094  3473               	retlw	115	;'s'
   314  0095  343A               	retlw	58	;':'
   315  0096  3420               	retlw	32	;' '
   316  0097  3400               	retlw	0
   317  0098                     STR_7:	
   318  0098  3444               	retlw	68	;'D'
   319  0099  3472               	retlw	114	;'r'
   320  009A  3461               	retlw	97	;'a'
   321  009B  3467               	retlw	103	;'g'
   322  009C  346F               	retlw	111	;'o'
   323  009D  346E               	retlw	110	;'n'
   324  009E  3473               	retlw	115	;'s'
   325  009F  3400               	retlw	0
   326                           
   327                           ; #config settings
   328  0000                     
   329                           	psect	cinit
   330  07BE                     start_initialization:	
   331  07BE                     __initialization:	
   332                           
   333                           ; Initialize objects allocated to BANK0
   334  07BE  118A  2141  118A   	fcall	__pidataBANK0	;fetch initializer
   335  07C1  00D0               	movwf	__pdataBANK0& (0+127)
   336  07C2  118A  2142  118A   	fcall	__pidataBANK0+1	;fetch initializer
   337  07C5  00D1               	movwf	(__pdataBANK0+1)& (0+127)
   338  07C6  118A  2143  118A   	fcall	__pidataBANK0+2	;fetch initializer
   339  07C9  00D2               	movwf	(__pdataBANK0+2)& (0+127)
   340  07CA  118A  2144  118A   	fcall	__pidataBANK0+3	;fetch initializer
   341  07CD  00D3               	movwf	(__pdataBANK0+3)& (0+127)
   342  07CE  118A  2145  118A   	fcall	__pidataBANK0+4	;fetch initializer
   343  07D1  00D4               	movwf	(__pdataBANK0+4)& (0+127)
   344  07D2  118A  2146  118A   	fcall	__pidataBANK0+5	;fetch initializer
   345  07D5  00D5               	movwf	(__pdataBANK0+5)& (0+127)
   346  07D6  118A  2147  118A   	fcall	__pidataBANK0+6	;fetch initializer
   347  07D9  00D6               	movwf	(__pdataBANK0+6)& (0+127)
   348  07DA  118A  2148  118A   	fcall	__pidataBANK0+7	;fetch initializer
   349  07DD  00D7               	movwf	(__pdataBANK0+7)& (0+127)
   350                           
   351                           ; Clear objects allocated to BANK3
   352  07DE  1783               	bsf	3,7	;select IRP bank2
   353  07DF  3090               	movlw	low __pbssBANK3
   354  07E0  0084               	movwf	4
   355  07E1  30F0               	movlw	low (__pbssBANK3+96)
   356  07E2  118A  2139  118A   	fcall	clear_ram0
   357                           
   358                           ; Clear objects allocated to BANK2
   359  07E5  3010               	movlw	low __pbssBANK2
   360  07E6  0084               	movwf	4
   361  07E7  3070               	movlw	low (__pbssBANK2+96)
   362  07E8  118A  2139  118A   	fcall	clear_ram0
   363                           
   364                           ; Clear objects allocated to BANK1
   365  07EB  1383               	bcf	3,7	;select IRP bank0
   366  07EC  30A0               	movlw	low __pbssBANK1
   367  07ED  0084               	movwf	4
   368  07EE  30E0               	movlw	low (__pbssBANK1+64)
   369  07EF  118A  2139  118A   	fcall	clear_ram0
   370                           
   371                           ; Clear objects allocated to BANK0
   372  07F2  3020               	movlw	low __pbssBANK0
   373  07F3  0084               	movwf	4
   374  07F4  3045               	movlw	low (__pbssBANK0+37)
   375  07F5  118A  2139  118A   	fcall	clear_ram0
   376                           
   377                           ; Clear objects allocated to COMMON
   378  07F8  3070               	movlw	low __pbssCOMMON
   379  07F9  0084               	movwf	4
   380  07FA  3077               	movlw	low (__pbssCOMMON+7)
   381  07FB  118A  2139         	fcall	clear_ram0
   382  07FD                     end_of_initialization:	
   383                           ;End of C runtime variable initialization code
   384                           
   385  07FD                     __end_of__initialization:	
   386  07FD  0183               	clrf	3
   387  07FE  118A  2B5C         	ljmp	_main	;jump to C main() function
   388                           
   389                           	psect	bssCOMMON
   390  0070                     __pbssCOMMON:	
   391  0070                     _fifo_write_idx:	
   392  0070                     	ds	1
   393  0071                     _fifo_read_idx:	
   394  0071                     	ds	1
   395  0072                     _usb_drive_size3:	
   396  0072                     	ds	1
   397  0073                     _usb_drive_size2:	
   398  0073                     	ds	1
   399  0074                     _usb_drive_size1:	
   400  0074                     	ds	1
   401  0075                     _hex_char_low:	
   402  0075                     	ds	1
   403  0076                     _hex_char_high:	
   404  0076                     	ds	1
   405                           
   406                           	psect	bssBANK0
   407  0020                     __pbssBANK0:	
   408  0020                     _fifo_num_bytes:	
   409  0020                     	ds	1
   410  0021                     _fifo_write_bank:	
   411  0021                     	ds	1
   412  0022                     _fifo_read_bank:	
   413  0022                     	ds	1
   414  0023                     _flag_reg:	
   415  0023                     	ds	1
   416  0024                     _delay_counter:	
   417  0024                     	ds	1
   418  0025                     _timeout_low:	
   419  0025                     	ds	1
   420  0026                     _timeout_high:	
   421  0026                     	ds	1
   422  0027                     _s_reg_low:	
   423  0027                     	ds	1
   424  0028                     _s_reg_high:	
   425  0028                     	ds	1
   426  0029                     _usb_target_status:	
   427  0029                     	ds	1
   428  002A                     _usb_logical_bytes3:	
   429  002A                     	ds	1
   430  002B                     _usb_logical_bytes2:	
   431  002B                     	ds	1
   432  002C                     _usb_logical_bytes1:	
   433  002C                     	ds	1
   434  002D                     _usb_free_space3:	
   435  002D                     	ds	1
   436  002E                     _usb_free_space2:	
   437  002E                     	ds	1
   438  002F                     _usb_free_space1:	
   439  002F                     	ds	1
   440  0030                     _usb_bytes_read_low:	
   441  0030                     	ds	1
   442  0031                     _usb_bytes_read_high:	
   443  0031                     	ds	1
   444  0032                     _usb_file_size_low:	
   445  0032                     	ds	1
   446  0033                     _usb_file_size_high:	
   447  0033                     	ds	1
   448  0034                     _usb_bytes_sent_low:	
   449  0034                     	ds	1
   450  0035                     _usb_bytes_sent_high:	
   451  0035                     	ds	1
   452  0036                     _tape_size_low:	
   453  0036                     	ds	1
   454  0037                     _tape_size_high:	
   455  0037                     	ds	1
   456  0038                     _gen_count6:	
   457  0038                     	ds	1
   458  0039                     _gen_count5:	
   459  0039                     	ds	1
   460  003A                     _gen_count4:	
   461  003A                     	ds	1
   462  003B                     _gen_count3:	
   463  003B                     	ds	1
   464  003C                     _gen_count2:	
   465  003C                     	ds	1
   466  003D                     _gen_count:	
   467  003D                     	ds	1
   468  003E                     _ldel_count:	
   469  003E                     	ds	1
   470  003F                     _sdel_count:	
   471  003F                     	ds	1
   472  0040                     _ram_address_l:	
   473  0040                     	ds	1
   474  0041                     _ram_address_h:	
   475  0041                     	ds	1
   476  0042                     _temp5:	
   477  0042                     	ds	1
   478  0043                     _temp4:	
   479  0043                     	ds	1
   480  0044                     _temp3:	
   481  0044                     	ds	1
   482                           
   483                           	psect	dataBANK0
   484  0050                     __pdataBANK0:	
   485  0050                     _tape_name:	
   486  0050                     	ds	8
   487                           
   488                           	psect	bssBANK1
   489  00A0                     __pbssBANK1:	
   490  00A0                     _fifo_bank_A:	
   491  00A0                     	ds	64
   492                           
   493                           	psect	bssBANK3
   494  0190                     __pbssBANK3:	
   495  0190                     _fifo_bank_B:	
   496  0190                     	ds	96
   497                           
   498                           	psect	bssBANK2
   499  0110                     __pbssBANK2:	
   500  0110                     _fifo_bank_C:	
   501  0110                     	ds	96
   502                           
   503                           	psect	clrtext
   504  0139                     clear_ram0:	
   505                           ;	Called with FSR containing the base address, and
   506                           ;	W with the last address+1
   507                           
   508  0139  0064               	clrwdt	;clear the watchdog before getting into this loop
   509  013A                     clrloop0:	
   510  013A  0180               	clrf	0	;clear RAM location pointed to by FSR
   511  013B  0A84               	incf	4,f	;increment pointer
   512  013C  0604               	xorwf	4,w	;XOR with final address
   513  013D  1903               	btfsc	3,2	;have we reached the end yet?
   514  013E  3400               	retlw	0	;all done for this memory range, return
   515  013F  0604               	xorwf	4,w	;XOR again to restore value
   516  0140  293A               	goto	clrloop0	;do the next byte
   517                           
   518                           	psect	cstackCOMMON
   519  0077                     __pcstackCOMMON:	
   520  0077                     ?_lcd_putc:	
   521  0077                     ??_lcd_putc:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0077                     ?_uart_send:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0077                     ??_uart_send:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0077                     ?_usb_disk_capacity:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0077                     ??_usb_disk_capacity:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0077                     ?_usb_disk_query:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0077                     ??_usb_disk_query:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0077                     ?_usb_check_exists:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0077                     ??_usb_check_exists:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0077                     ?_usb_get_version:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0077                     ??_usb_get_version:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0077                     ?_usb_set_mode:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0077                     ??_usb_set_mode:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0077                     ?_delay_millis:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0077                     ??_delay_millis:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0077                     ?_usb_disk_connect:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0077                     ??_usb_disk_connect:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0077                     ?_usb_disk_mount:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0077                     ??_usb_disk_mount:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0077                     ?_usb_get_status:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0077                     ??_usb_get_status:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0077                     ?_initialize:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0077                     ??_initialize:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0077                     ?_lcd_line2:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0077                     ??_lcd_line2:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0077                     ?_uart_read:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0077                     ??_uart_read:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0077                     ?_usb_reset_all:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0077                     ??_usb_reset_all:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0077                     ?_usb_set_file_name:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0077                     ??_usb_set_file_name:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0077                     ?_print_name:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0077                     ??_print_name:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0077                     ?_usb_file_open:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0077                     ??_usb_file_open:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0077                     ?_usb_file_close:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0077                     ??_usb_file_close:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0077                     ?_usb_get_file_size:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0077                     ??_usb_get_file_size:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0077                     ?_usb_file_read:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0077                     ??_usb_file_read:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0077                     ?_usb_file_create:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0077                     ??_usb_file_create:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0077                     ?_usb_write_test_data:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0077                     ??_usb_write_test_data:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0077                     ?_mem_clear:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0077                     ??_mem_clear:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0077                     ?_mem_dump:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0077                     ??_mem_dump:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0077                     ?_file_dump:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0077                     ??_file_dump:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0077                     ?_print_test_data:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0077                     ??_print_test_data:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0077                     ?_lcd_clear2:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0077                     ??_lcd_clear2:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0077                     ?_fifo_push:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0077                     ??_fifo_push:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0077                     ?_fifo_pop:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0077                     ?_byte_to_hex:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0077                     ?_print_string_lcd:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0077                     ?_print_string_serial:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0077                     ?_print_capacity:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0077                     ??_print_capacity:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0077                     ?_print_query:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0077                     ??_print_query:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0077                     ?_usb_autoconfig:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0077                     ?_main:	
   720                           ; 1 bytes @ 0x0
   721                           
   722                           
   723                           ; 1 bytes @ 0x0
   724  0077                     	ds	1
   725  0078                     fifo_push@data:	
   726                           
   727                           ; 1 bytes @ 0x1
   728  0078                     	ds	1
   729  0079                     ??_fifo_pop:	
   730                           
   731                           ; 1 bytes @ 0x2
   732  0079                     	ds	1
   733  007A                     fifo_pop@temp:	
   734                           
   735                           ; 1 bytes @ 0x3
   736  007A                     	ds	1
   737                           
   738                           	psect	cstackBANK0
   739  0045                     __pcstackBANK0:	
   740  0045                     ??_byte_to_hex:	
   741                           
   742                           ; 1 bytes @ 0x0
   743  0045                     	ds	2
   744  0047                     byte_to_hex@data:	
   745                           
   746                           ; 1 bytes @ 0x2
   747  0047                     	ds	1
   748  0048                     ??_print_string_lcd:	
   749  0048                     ??_print_string_serial:	
   750                           ; 1 bytes @ 0x3
   751                           
   752                           
   753                           ; 1 bytes @ 0x3
   754  0048                     	ds	1
   755  0049                     print_string_lcd@string:	
   756  0049                     print_string_serial@i:	
   757                           ; 1 bytes @ 0x4
   758                           
   759                           
   760                           ; 1 bytes @ 0x4
   761  0049                     	ds	1
   762  004A                     print_string_lcd@i:	
   763  004A                     print_string_serial@string:	
   764                           ; 1 bytes @ 0x5
   765                           
   766                           
   767                           ; 1 bytes @ 0x5
   768  004A                     	ds	1
   769  004B                     ??_usb_autoconfig:	
   770                           
   771                           ; 1 bytes @ 0x6
   772  004B                     	ds	1
   773  004C                     usb_autoconfig@temp:	
   774                           
   775                           ; 1 bytes @ 0x7
   776  004C                     	ds	1
   777  004D                     ??_main:	
   778                           
   779                           ; 1 bytes @ 0x8
   780  004D                     	ds	1
   781  004E                     main@state:	
   782                           
   783                           ; 1 bytes @ 0x9
   784  004E                     	ds	1
   785  004F                     main@temp:	
   786                           
   787                           ; 1 bytes @ 0xA
   788  004F                     	ds	1
   789                           
   790                           	psect	maintext
   791  035C                     __pmaintext:	
   792 ;;
   793 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   794 ;;
   795 ;; *************** function _main *****************
   796 ;; Defined at:
   797 ;;		line 307 in file "main.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  temp            1   10[BANK0 ] unsigned char 
   802 ;;  state           1    9[BANK0 ] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : B00/0
   809 ;;		On exit  : 300/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   812 ;;      Params:         0       0       0       0       0
   813 ;;      Locals:         0       2       0       0       0
   814 ;;      Temps:          0       1       0       0       0
   815 ;;      Totals:         0       3       0       0       0
   816 ;;Total ram usage:        3 bytes
   817 ;; Hardware stack levels required when called:    6
   818 ;; This function calls:
   819 ;;		_byte_to_hex
   820 ;;		_file_dump
   821 ;;		_initialize
   822 ;;		_lcd_clear2
   823 ;;		_lcd_line2
   824 ;;		_lcd_putc
   825 ;;		_mem_clear
   826 ;;		_mem_dump
   827 ;;		_print_capacity
   828 ;;		_print_name
   829 ;;		_print_query
   830 ;;		_print_string_lcd
   831 ;;		_print_string_serial
   832 ;;		_print_test_data
   833 ;;		_uart_read
   834 ;;		_uart_send
   835 ;;		_usb_autoconfig
   836 ;;		_usb_disk_connect
   837 ;;		_usb_disk_mount
   838 ;;		_usb_file_close
   839 ;;		_usb_file_create
   840 ;;		_usb_file_open
   841 ;;		_usb_file_read
   842 ;;		_usb_get_file_size
   843 ;;		_usb_get_status
   844 ;;		_usb_get_version
   845 ;;		_usb_reset_all
   846 ;;		_usb_set_file_name
   847 ;;		_usb_set_mode
   848 ;;		_usb_write_test_data
   849 ;; This function is called by:
   850 ;;		Startup code after reset
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _main
   856  035C                     _main:	
   857                           
   858                           ;main.c: 309: unsigned char state = 0;
   859                           
   860                           ;incstack = 0
   861                           ; Regs used in _main: [allreg]
   862  035C  01CE               	clrf	main@state
   863                           
   864                           ;main.c: 310: initialize();
   865  035D  118A  2494  118A   	fcall	_initialize
   866                           
   867                           ;main.c: 316: print_string_lcd("Dragons");
   868  0360  3091               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   869  0361  118A  2166  118A   	fcall	_print_string_lcd
   870                           
   871                           ;main.c: 317: lcd_line2();
   872  0364  118A  259A  118A   	fcall	_lcd_line2
   873                           
   874                           ;main.c: 319: print_string_serial("deadbeef\n");
   875  0367  3074               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   876  0368  118A  2149  118A   	fcall	_print_string_serial
   877                           
   878                           ;main.c: 326: switch(state)
   879  036B  2C79               	goto	l2171
   880  036C                     l2173:	
   881                           
   882                           ;main.c: 329: if(temp == 0xDE)
   883  036C  30DE               	movlw	222
   884  036D  064F               	xorwf	main@temp,w
   885  036E  1D03               	btfss	3,2
   886  036F  2C79               	goto	l2171
   887                           
   888                           ;main.c: 330: state = 1;
   889  0370  01CE               	clrf	main@state
   890  0371  0ACE               	incf	main@state,f
   891  0372  2C79               	goto	l2171
   892  0373                     l2177:	
   893                           
   894                           ;main.c: 333: if(temp == 0xAD)
   895  0373  30AD               	movlw	173
   896  0374  064F               	xorwf	main@temp,w
   897  0375  1D03               	btfss	3,2
   898  0376  2B79               	goto	l2181
   899                           
   900                           ;main.c: 334: state = 2;
   901  0377  3002               	movlw	2
   902  0378  2B8A               	goto	L2
   903  0379                     l2181:	
   904                           
   905                           ;main.c: 335: else;main.c: 336: state = 0;
   906  0379  01CE               	clrf	main@state
   907  037A  2C79               	goto	l2171
   908  037B                     l2183:	
   909                           
   910                           ;main.c: 339: if(temp == 0xBE)
   911  037B  30BE               	movlw	190
   912  037C  064F               	xorwf	main@temp,w
   913  037D  1D03               	btfss	3,2
   914  037E  2B79               	goto	l2181
   915                           
   916                           ;main.c: 340: state = 3;
   917  037F  3003               	movlw	3
   918  0380  2B8A               	goto	L2
   919  0381                     l2189:	
   920                           
   921                           ;main.c: 345: if(temp == 0xEF)
   922  0381  30EF               	movlw	239
   923  0382  064F               	xorwf	main@temp,w
   924  0383  1D03               	btfss	3,2
   925  0384  2B89               	goto	l2193
   926                           
   927                           ;main.c: 346: print_string_serial(str_cmd_mode);
   928  0385  3011               	movlw	(low ((_str_cmd_mode-__stringbase)| (0+32768)))& (0+255)
   929  0386  118A  2149  118A   	fcall	_print_string_serial
   930  0389                     l2193:	
   931                           
   932                           ;main.c: 347: state = 4;
   933  0389  3004               	movlw	4
   934  038A                     L2:	
   935  038A  00CD               	movwf	??_main
   936  038B  084D               	movf	??_main,w
   937  038C  00CE               	movwf	main@state
   938                           
   939                           ;main.c: 348: break;
   940  038D  2C79               	goto	l2171
   941  038E                     l2195:	
   942                           
   943                           ;main.c: 353: usb_reset_all();
   944  038E  118A  2620  118A   	fcall	_usb_reset_all
   945                           
   946                           ;main.c: 354: break;
   947  0391  2C60               	goto	l2255
   948  0392                     l2197:	
   949                           
   950                           ;main.c: 356: usb_autoconfig();
   951  0392  118A  22D6  118A   	fcall	_usb_autoconfig
   952                           
   953                           ;main.c: 357: break;
   954  0395  2C60               	goto	l2255
   955  0396                     l2199:	
   956                           
   957                           ;main.c: 359: temp = usb_get_version();
   958  0396  118A  26AA  118A   	fcall	_usb_get_version
   959  0399  2BF5               	goto	L4
   960  039A                     l2201:	
   961                           ;main.c: 360: break;
   962                           
   963                           
   964                           ;main.c: 362: usb_set_mode(0x05);
   965  039A  3005               	movlw	5
   966  039B  118A  26A2  118A   	fcall	_usb_set_mode
   967                           
   968                           ;main.c: 363: break;
   969  039E  2C60               	goto	l2255
   970  039F                     l2203:	
   971                           
   972                           ;main.c: 365: usb_set_mode(0x06);
   973  039F  3006               	movlw	6
   974  03A0  118A  26A2  118A   	fcall	_usb_set_mode
   975                           
   976                           ;main.c: 366: break;
   977  03A3  2C60               	goto	l2255
   978  03A4                     l2205:	
   979                           
   980                           ;main.c: 368: usb_set_mode(0x07);
   981  03A4  3007               	movlw	7
   982  03A5  118A  26A2  118A   	fcall	_usb_set_mode
   983                           
   984                           ;main.c: 369: break;
   985  03A8  2C60               	goto	l2255
   986  03A9                     l2207:	
   987                           
   988                           ;main.c: 371: usb_disk_connect();
   989  03A9  118A  269D  118A   	fcall	_usb_disk_connect
   990                           
   991                           ;main.c: 372: break;
   992  03AC  2C60               	goto	l2255
   993  03AD                     l2209:	
   994                           
   995                           ;main.c: 374: usb_disk_mount();
   996  03AD  118A  2698  118A   	fcall	_usb_disk_mount
   997                           
   998                           ;main.c: 375: break;
   999  03B0  2C60               	goto	l2255
  1000  03B1                     l2211:	
  1001                           
  1002                           ;main.c: 377: temp = usb_get_status();
  1003  03B1  118A  2691  118A   	fcall	_usb_get_status
  1004  03B4  2BF5               	goto	L4
  1005  03B5                     l2213:	
  1006                           ;main.c: 378: break;
  1007                           
  1008                           
  1009                           ;main.c: 380: print_query();
  1010  03B5  118A  2262  118A   	fcall	_print_query
  1011                           
  1012                           ;main.c: 381: break;
  1013  03B8  2C60               	goto	l2255
  1014  03B9                     l2215:	
  1015                           
  1016                           ;main.c: 383: print_capacity();
  1017  03B9  118A  21A6  118A   	fcall	_print_capacity
  1018                           
  1019                           ;main.c: 384: break;
  1020  03BC  2C60               	goto	l2255
  1021  03BD                     l2217:	
  1022                           
  1023                           ;main.c: 386: usb_set_file_name();
  1024  03BD  118A  2625  118A   	fcall	_usb_set_file_name
  1025                           
  1026                           ;main.c: 387: print_name();
  1027  03C0  118A  25CB  118A   	fcall	_print_name
  1028                           
  1029                           ;main.c: 388: break;
  1030  03C3  2C60               	goto	l2255
  1031  03C4                     l2219:	
  1032                           
  1033                           ;main.c: 390: usb_file_open();
  1034  03C4  118A  2638  118A   	fcall	_usb_file_open
  1035                           
  1036                           ;main.c: 391: break;
  1037  03C7  2C60               	goto	l2255
  1038  03C8                     l2221:	
  1039                           
  1040                           ;main.c: 393: usb_file_close();
  1041  03C8  118A  263D  118A   	fcall	_usb_file_close
  1042                           
  1043                           ;main.c: 394: break;
  1044  03CB  2C60               	goto	l2255
  1045  03CC                     l2223:	
  1046                           
  1047                           ;main.c: 396: usb_get_file_size();
  1048  03CC  118A  2663  118A   	fcall	_usb_get_file_size
  1049                           
  1050                           ;main.c: 397: print_string_serial("File size: ");
  1051  03CF  3068               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1052  03D0  118A  2149  118A   	fcall	_print_string_serial
  1053                           
  1054                           ;main.c: 398: byte_to_hex(usb_file_size_high);
  1055  03D3  0833               	movf	_usb_file_size_high,w
  1056  03D4  118A  2183  118A   	fcall	_byte_to_hex
  1057                           
  1058                           ;main.c: 399: uart_send(hex_char_high);
  1059  03D7  0876               	movf	_hex_char_high,w
  1060  03D8  118A  2501  118A   	fcall	_uart_send
  1061                           
  1062                           ;main.c: 400: uart_send(hex_char_low);
  1063  03DB  0875               	movf	_hex_char_low,w
  1064  03DC  118A  2501  118A   	fcall	_uart_send
  1065                           
  1066                           ;main.c: 401: byte_to_hex(usb_file_size_low);
  1067  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1068  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1069  03E1  0832               	movf	_usb_file_size_low,w
  1070  03E2  118A  2183  118A   	fcall	_byte_to_hex
  1071                           
  1072                           ;main.c: 402: uart_send(hex_char_high);
  1073  03E5  0876               	movf	_hex_char_high,w
  1074  03E6  118A  2501  118A   	fcall	_uart_send
  1075                           
  1076                           ;main.c: 403: uart_send(hex_char_low);
  1077  03E9  0875               	movf	_hex_char_low,w
  1078  03EA  118A  2501  118A   	fcall	_uart_send
  1079                           
  1080                           ;main.c: 404: uart_send('\n');
  1081  03ED  300A               	movlw	10
  1082  03EE  118A  2501  118A   	fcall	_uart_send
  1083                           
  1084                           ;main.c: 405: break;
  1085  03F1  2C60               	goto	l2255
  1086  03F2                     l2233:	
  1087                           
  1088                           ;main.c: 407: temp = usb_file_read();
  1089  03F2  118A  277A  118A   	fcall	_usb_file_read
  1090  03F5                     L4:	
  1091  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1092  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1093  03F7  00CD               	movwf	??_main
  1094  03F8  084D               	movf	??_main,w
  1095  03F9  00CF               	movwf	main@temp
  1096                           
  1097                           ;main.c: 408: break;
  1098  03FA  2C60               	goto	l2255
  1099  03FB                     l2235:	
  1100                           
  1101                           ;main.c: 410: usb_file_create();
  1102  03FB  118A  267E  118A   	fcall	_usb_file_create
  1103                           
  1104                           ;main.c: 411: break;
  1105  03FE  2C60               	goto	l2255
  1106  03FF                     l2237:	
  1107                           
  1108                           ;main.c: 416: usb_write_test_data();
  1109  03FF  118A  2715  118A   	fcall	_usb_write_test_data
  1110                           
  1111                           ;main.c: 417: break;
  1112  0402  2C60               	goto	l2255
  1113  0403                     l2239:	
  1114                           
  1115                           ;main.c: 419: mem_clear();
  1116  0403  118A  24CE  118A   	fcall	_mem_clear
  1117                           
  1118                           ;main.c: 420: break;
  1119  0406  2C60               	goto	l2255
  1120  0407                     l2241:	
  1121                           
  1122                           ;main.c: 422: mem_dump();
  1123  0407  118A  24DC  118A   	fcall	_mem_dump
  1124                           
  1125                           ;main.c: 423: break;
  1126  040A  2C60               	goto	l2255
  1127  040B                     l2243:	
  1128                           
  1129                           ;main.c: 425: file_dump();
  1130  040B  118A  24EA  118A   	fcall	_file_dump
  1131                           
  1132                           ;main.c: 426: break;
  1133  040E  2C60               	goto	l2255
  1134  040F                     l2245:	
  1135                           
  1136                           ;main.c: 428: print_test_data();
  1137  040F  118A  2607  118A   	fcall	_print_test_data
  1138                           
  1139                           ;main.c: 429: break;
  1140  0412  2C60               	goto	l2255
  1141  0413                     l2247:	
  1142                           
  1143                           ;main.c: 431: usb_file_size_low = 16;
  1144  0413  3010               	movlw	16
  1145  0414  00CD               	movwf	??_main
  1146  0415  084D               	movf	??_main,w
  1147  0416  00B2               	movwf	_usb_file_size_low
  1148                           
  1149                           ;main.c: 432: usb_file_size_high = 0;
  1150  0417  01B3               	clrf	_usb_file_size_high
  1151  0418  2C0B               	goto	l2243
  1152  0419                     l2253:	
  1153  0419  084F               	movf	main@temp,w
  1154                           
  1155                           ; Switch size 1, requested type "simple"
  1156                           ; Number of cases is 23, Range of values is 0 to 36
  1157                           ; switch strategies available:
  1158                           ; Name         Instructions Cycles
  1159                           ; simple_byte           70    36 (average)
  1160                           ; direct_byte           81     7 (fixed)
  1161                           ; jumptable            260     6 (fixed)
  1162                           ;	Chosen strategy is simple_byte
  1163  041A  3A00               	xorlw	0	; case 0
  1164  041B  1903               	skipnz
  1165  041C  2B8E               	goto	l2195
  1166  041D  3A01               	xorlw	1	; case 1
  1167  041E  1903               	skipnz
  1168  041F  2B92               	goto	l2197
  1169  0420  3A03               	xorlw	3	; case 2
  1170  0421  1903               	skipnz
  1171  0422  2B96               	goto	l2199
  1172  0423  3A01               	xorlw	1	; case 3
  1173  0424  1903               	skipnz
  1174  0425  2B9A               	goto	l2201
  1175  0426  3A07               	xorlw	7	; case 4
  1176  0427  1903               	skipnz
  1177  0428  2B9F               	goto	l2203
  1178  0429  3A01               	xorlw	1	; case 5
  1179  042A  1903               	skipnz
  1180  042B  2BA4               	goto	l2205
  1181  042C  3A03               	xorlw	3	; case 6
  1182  042D  1903               	skipnz
  1183  042E  2BA9               	goto	l2207
  1184  042F  3A01               	xorlw	1	; case 7
  1185  0430  1903               	skipnz
  1186  0431  2BAD               	goto	l2209
  1187  0432  3A0F               	xorlw	15	; case 8
  1188  0433  1903               	skipnz
  1189  0434  2BB1               	goto	l2211
  1190  0435  3A01               	xorlw	1	; case 9
  1191  0436  1903               	skipnz
  1192  0437  2BB5               	goto	l2213
  1193  0438  3A03               	xorlw	3	; case 10
  1194  0439  1903               	skipnz
  1195  043A  2BB9               	goto	l2215
  1196  043B  3A01               	xorlw	1	; case 11
  1197  043C  1903               	skipnz
  1198  043D  2BBD               	goto	l2217
  1199  043E  3A07               	xorlw	7	; case 12
  1200  043F  1903               	skipnz
  1201  0440  2BC4               	goto	l2219
  1202  0441  3A01               	xorlw	1	; case 13
  1203  0442  1903               	skipnz
  1204  0443  2BC8               	goto	l2221
  1205  0444  3A03               	xorlw	3	; case 14
  1206  0445  1903               	skipnz
  1207  0446  2BCC               	goto	l2223
  1208  0447  3A01               	xorlw	1	; case 15
  1209  0448  1903               	skipnz
  1210  0449  2BF2               	goto	l2233
  1211  044A  3A1F               	xorlw	31	; case 16
  1212  044B  1903               	skipnz
  1213  044C  2BFB               	goto	l2235
  1214  044D  3A02               	xorlw	2	; case 18
  1215  044E  1903               	skipnz
  1216  044F  2BFF               	goto	l2237
  1217  0450  3A32               	xorlw	50	; case 32
  1218  0451  1903               	skipnz
  1219  0452  2C03               	goto	l2239
  1220  0453  3A01               	xorlw	1	; case 33
  1221  0454  1903               	skipnz
  1222  0455  2C07               	goto	l2241
  1223  0456  3A03               	xorlw	3	; case 34
  1224  0457  1903               	skipnz
  1225  0458  2C0B               	goto	l2243
  1226  0459  3A01               	xorlw	1	; case 35
  1227  045A  1903               	skipnz
  1228  045B  2C0F               	goto	l2245
  1229  045C  3A07               	xorlw	7	; case 36
  1230  045D  1903               	skipnz
  1231  045E  2C13               	goto	l2247
  1232  045F  2C60               	goto	l2255
  1233  0460                     l2255:	
  1234                           
  1235                           ;main.c: 435: byte_to_hex(temp);
  1236  0460  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0461  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0462  084F               	movf	main@temp,w
  1239  0463  118A  2183  118A   	fcall	_byte_to_hex
  1240                           
  1241                           ;main.c: 436: uart_send(hex_char_high);
  1242  0466  0876               	movf	_hex_char_high,w
  1243  0467  118A  2501  118A   	fcall	_uart_send
  1244                           
  1245                           ;main.c: 437: uart_send(hex_char_low);
  1246  046A  0875               	movf	_hex_char_low,w
  1247  046B  118A  2501  118A   	fcall	_uart_send
  1248                           
  1249                           ;main.c: 438: lcd_clear2();
  1250  046E  118A  25B3  118A   	fcall	_lcd_clear2
  1251                           
  1252                           ;main.c: 439: lcd_putc(hex_char_high);
  1253  0471  0876               	movf	_hex_char_high,w
  1254  0472  118A  2567  118A   	fcall	_lcd_putc
  1255                           
  1256                           ;main.c: 440: lcd_putc(hex_char_low);
  1257  0475  0875               	movf	_hex_char_low,w
  1258  0476  118A  2567  118A   	fcall	_lcd_putc
  1259  0479                     l2171:	
  1260                           ;main.c: 441: break;
  1261                           
  1262                           
  1263                           ;main.c: 323: {;main.c: 324: temp = uart_read();
  1264  0479  118A  24FD  118A   	fcall	_uart_read
  1265  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1266  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1267  047E  00CD               	movwf	??_main
  1268  047F  084D               	movf	??_main,w
  1269  0480  00CF               	movwf	main@temp
  1270  0481  084E               	movf	main@state,w
  1271                           
  1272                           ; Switch size 1, requested type "simple"
  1273                           ; Number of cases is 5, Range of values is 0 to 4
  1274                           ; switch strategies available:
  1275                           ; Name         Instructions Cycles
  1276                           ; simple_byte           16     9 (average)
  1277                           ; direct_byte           17     7 (fixed)
  1278                           ; jumptable            260     6 (fixed)
  1279                           ;	Chosen strategy is simple_byte
  1280  0482  3A00               	xorlw	0	; case 0
  1281  0483  1903               	skipnz
  1282  0484  2B6C               	goto	l2173
  1283  0485  3A01               	xorlw	1	; case 1
  1284  0486  1903               	skipnz
  1285  0487  2B73               	goto	l2177
  1286  0488  3A03               	xorlw	3	; case 2
  1287  0489  1903               	skipnz
  1288  048A  2B7B               	goto	l2183
  1289  048B  3A01               	xorlw	1	; case 3
  1290  048C  1903               	skipnz
  1291  048D  2B81               	goto	l2189
  1292  048E  3A07               	xorlw	7	; case 4
  1293  048F  1903               	skipnz
  1294  0490  2C19               	goto	l2253
  1295  0491  2C79               	goto	l2171
  1296  0492  118A  2800         	ljmp	start
  1297  0494                     __end_of_main:	
  1298                           
  1299                           	psect	text1
  1300  02D6                     __ptext1:	
  1301 ;; *************** function _usb_autoconfig *****************
  1302 ;; Defined at:
  1303 ;;		line 266 in file "main.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  temp            1    7[BANK0 ] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 300/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1317 ;;      Params:         0       0       0       0       0
  1318 ;;      Locals:         0       1       0       0       0
  1319 ;;      Temps:          0       1       0       0       0
  1320 ;;      Totals:         0       2       0       0       0
  1321 ;;Total ram usage:        2 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    5
  1324 ;; This function calls:
  1325 ;;		_byte_to_hex
  1326 ;;		_delay_millis
  1327 ;;		_print_query
  1328 ;;		_print_string_serial
  1329 ;;		_uart_send
  1330 ;;		_usb_check_exists
  1331 ;;		_usb_disk_connect
  1332 ;;		_usb_disk_mount
  1333 ;;		_usb_get_status
  1334 ;;		_usb_get_version
  1335 ;;		_usb_set_mode
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _usb_autoconfig
  1343  02D6                     _usb_autoconfig:	
  1344                           
  1345                           ;main.c: 268: unsigned char temp;;main.c: 269: print_string_serial("USB Autoconfig:\n");
  1346                           
  1347                           ;incstack = 0
  1348                           ; Regs used in _usb_autoconfig: [allreg]
  1349  02D6  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1350  02D7  118A  2149  118A   	fcall	_print_string_serial
  1351                           
  1352                           ;main.c: 270: temp = usb_check_exists(0x55);
  1353  02DA  3055               	movlw	85
  1354  02DB  118A  2674  118A   	fcall	_usb_check_exists
  1355  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  1356  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  1357  02E0  00CB               	movwf	??_usb_autoconfig
  1358  02E1  084B               	movf	??_usb_autoconfig,w
  1359  02E2  00CC               	movwf	usb_autoconfig@temp
  1360                           
  1361                           ;main.c: 271: byte_to_hex(temp);
  1362  02E3  084C               	movf	usb_autoconfig@temp,w
  1363  02E4  118A  2183  118A   	fcall	_byte_to_hex
  1364                           
  1365                           ;main.c: 272: uart_send(hex_char_high);
  1366  02E7  0876               	movf	_hex_char_high,w
  1367  02E8  118A  2501  118A   	fcall	_uart_send
  1368                           
  1369                           ;main.c: 273: uart_send(hex_char_low);
  1370  02EB  0875               	movf	_hex_char_low,w
  1371  02EC  118A  2501  118A   	fcall	_uart_send
  1372                           
  1373                           ;main.c: 274: uart_send('\n');
  1374  02EF  300A               	movlw	10
  1375  02F0  118A  2501  118A   	fcall	_uart_send
  1376                           
  1377                           ;main.c: 276: temp = usb_get_version();
  1378  02F3  118A  26AA  118A   	fcall	_usb_get_version
  1379  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1380  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1381  02F8  00CB               	movwf	??_usb_autoconfig
  1382  02F9  084B               	movf	??_usb_autoconfig,w
  1383  02FA  00CC               	movwf	usb_autoconfig@temp
  1384                           
  1385                           ;main.c: 277: byte_to_hex(temp);
  1386  02FB  084C               	movf	usb_autoconfig@temp,w
  1387  02FC  118A  2183  118A   	fcall	_byte_to_hex
  1388                           
  1389                           ;main.c: 278: print_string_serial("Version: ");
  1390  02FF  307E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1391  0300  118A  2149  118A   	fcall	_print_string_serial
  1392                           
  1393                           ;main.c: 279: uart_send(hex_char_high);
  1394  0303  0876               	movf	_hex_char_high,w
  1395  0304  118A  2501  118A   	fcall	_uart_send
  1396                           
  1397                           ;main.c: 280: uart_send(hex_char_low);
  1398  0307  0875               	movf	_hex_char_low,w
  1399  0308  118A  2501  118A   	fcall	_uart_send
  1400                           
  1401                           ;main.c: 281: uart_send('\n');
  1402  030B  300A               	movlw	10
  1403  030C  118A  2501  118A   	fcall	_uart_send
  1404                           
  1405                           ;main.c: 283: usb_set_mode(0x05);
  1406  030F  3005               	movlw	5
  1407  0310  118A  26A2  118A   	fcall	_usb_set_mode
  1408                           
  1409                           ;main.c: 284: delay_millis(1);
  1410  0313  3001               	movlw	1
  1411  0314  118A  25FB  118A   	fcall	_delay_millis
  1412                           
  1413                           ;main.c: 285: usb_set_mode(0x07);
  1414  0317  3007               	movlw	7
  1415  0318  118A  26A2  118A   	fcall	_usb_set_mode
  1416                           
  1417                           ;main.c: 286: delay_millis(1);
  1418  031B  3001               	movlw	1
  1419  031C  118A  25FB  118A   	fcall	_delay_millis
  1420                           
  1421                           ;main.c: 287: usb_set_mode(0x06);
  1422  031F  3006               	movlw	6
  1423  0320  118A  26A2  118A   	fcall	_usb_set_mode
  1424                           
  1425                           ;main.c: 288: delay_millis(1);
  1426  0323  3001               	movlw	1
  1427  0324  118A  25FB  118A   	fcall	_delay_millis
  1428                           
  1429                           ;main.c: 289: usb_disk_connect();
  1430  0327  118A  269D  118A   	fcall	_usb_disk_connect
  1431                           
  1432                           ;main.c: 290: delay_millis(250);
  1433  032A  30FA               	movlw	250
  1434  032B  118A  25FB  118A   	fcall	_delay_millis
  1435                           
  1436                           ;main.c: 291: delay_millis(250);
  1437  032E  30FA               	movlw	250
  1438  032F  118A  25FB  118A   	fcall	_delay_millis
  1439                           
  1440                           ;main.c: 292: usb_disk_mount();
  1441  0332  118A  2698  118A   	fcall	_usb_disk_mount
  1442                           
  1443                           ;main.c: 293: delay_millis(250);
  1444  0335  30FA               	movlw	250
  1445  0336  118A  25FB  118A   	fcall	_delay_millis
  1446                           
  1447                           ;main.c: 294: delay_millis(250);
  1448  0339  30FA               	movlw	250
  1449  033A  118A  25FB  118A   	fcall	_delay_millis
  1450                           
  1451                           ;main.c: 296: temp = usb_get_status();
  1452  033D  118A  2691  118A   	fcall	_usb_get_status
  1453  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0342  00CB               	movwf	??_usb_autoconfig
  1456  0343  084B               	movf	??_usb_autoconfig,w
  1457  0344  00CC               	movwf	usb_autoconfig@temp
  1458                           
  1459                           ;main.c: 297: byte_to_hex(temp);
  1460  0345  084C               	movf	usb_autoconfig@temp,w
  1461  0346  118A  2183  118A   	fcall	_byte_to_hex
  1462                           
  1463                           ;main.c: 298: print_string_serial("Status: ");
  1464  0349  3088               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1465  034A  118A  2149  118A   	fcall	_print_string_serial
  1466                           
  1467                           ;main.c: 299: uart_send(hex_char_high);
  1468  034D  0876               	movf	_hex_char_high,w
  1469  034E  118A  2501  118A   	fcall	_uart_send
  1470                           
  1471                           ;main.c: 300: uart_send(hex_char_low);
  1472  0351  0875               	movf	_hex_char_low,w
  1473  0352  118A  2501  118A   	fcall	_uart_send
  1474                           
  1475                           ;main.c: 301: uart_send('\n');
  1476  0355  300A               	movlw	10
  1477  0356  118A  2501  118A   	fcall	_uart_send
  1478                           
  1479                           ;main.c: 303: print_query();
  1480  0359  118A  2262         	fcall	_print_query
  1481  035B  0008               	return
  1482  035C                     __end_of_usb_autoconfig:	
  1483                           
  1484                           	psect	text2
  1485  0262                     __ptext2:	
  1486 ;; *************** function _print_query *****************
  1487 ;; Defined at:
  1488 ;;		line 234 in file "main.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       0       0       0       0
  1503 ;;      Locals:         0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0
  1505 ;;      Totals:         0       0       0       0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    4
  1509 ;; This function calls:
  1510 ;;		_byte_to_hex
  1511 ;;		_print_string_serial
  1512 ;;		_uart_send
  1513 ;;		_usb_disk_query
  1514 ;; This function is called by:
  1515 ;;		_usb_autoconfig
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           
  1521                           ;psect for function _print_query
  1522  0262                     _print_query:	
  1523                           
  1524                           ;main.c: 236: usb_disk_query();
  1525                           
  1526                           ;incstack = 0
  1527                           ; Regs used in _print_query: [allreg]
  1528  0262  118A  26E4  118A   	fcall	_usb_disk_query
  1529                           
  1530                           ;main.c: 237: print_string_serial("Logical bytes: ");
  1531  0265  304B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1532  0266  118A  2149  118A   	fcall	_print_string_serial
  1533                           
  1534                           ;main.c: 238: byte_to_hex(usb_logical_bytes3);
  1535  0269  082A               	movf	_usb_logical_bytes3,w
  1536  026A  118A  2183  118A   	fcall	_byte_to_hex
  1537                           
  1538                           ;main.c: 239: uart_send(hex_char_high);
  1539  026D  0876               	movf	_hex_char_high,w
  1540  026E  118A  2501  118A   	fcall	_uart_send
  1541                           
  1542                           ;main.c: 240: uart_send(hex_char_low);
  1543  0271  0875               	movf	_hex_char_low,w
  1544  0272  118A  2501  118A   	fcall	_uart_send
  1545                           
  1546                           ;main.c: 241: byte_to_hex(usb_logical_bytes2);
  1547  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0277  082B               	movf	_usb_logical_bytes2,w
  1550  0278  118A  2183  118A   	fcall	_byte_to_hex
  1551                           
  1552                           ;main.c: 242: uart_send(hex_char_high);
  1553  027B  0876               	movf	_hex_char_high,w
  1554  027C  118A  2501  118A   	fcall	_uart_send
  1555                           
  1556                           ;main.c: 243: uart_send(hex_char_low);
  1557  027F  0875               	movf	_hex_char_low,w
  1558  0280  118A  2501  118A   	fcall	_uart_send
  1559                           
  1560                           ;main.c: 244: byte_to_hex(usb_logical_bytes1);
  1561  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0285  082C               	movf	_usb_logical_bytes1,w
  1564  0286  118A  2183  118A   	fcall	_byte_to_hex
  1565                           
  1566                           ;main.c: 245: uart_send(hex_char_high);
  1567  0289  0876               	movf	_hex_char_high,w
  1568  028A  118A  2501  118A   	fcall	_uart_send
  1569                           
  1570                           ;main.c: 246: uart_send(hex_char_low);
  1571  028D  0875               	movf	_hex_char_low,w
  1572  028E  118A  2501  118A   	fcall	_uart_send
  1573                           
  1574                           ;main.c: 247: uart_send('0');
  1575  0291  3030               	movlw	48
  1576  0292  118A  2501  118A   	fcall	_uart_send
  1577                           
  1578                           ;main.c: 248: uart_send('0');
  1579  0295  3030               	movlw	48
  1580  0296  118A  2501  118A   	fcall	_uart_send
  1581                           
  1582                           ;main.c: 249: uart_send('\n');
  1583  0299  300A               	movlw	10
  1584  029A  118A  2501  118A   	fcall	_uart_send
  1585                           
  1586                           ;main.c: 250: print_string_serial("Free bytes: ");
  1587  029D  305B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1588  029E  118A  2149  118A   	fcall	_print_string_serial
  1589                           
  1590                           ;main.c: 251: byte_to_hex(usb_free_space3);
  1591  02A1  082D               	movf	_usb_free_space3,w
  1592  02A2  118A  2183  118A   	fcall	_byte_to_hex
  1593                           
  1594                           ;main.c: 252: uart_send(hex_char_high);
  1595  02A5  0876               	movf	_hex_char_high,w
  1596  02A6  118A  2501  118A   	fcall	_uart_send
  1597                           
  1598                           ;main.c: 253: uart_send(hex_char_low);
  1599  02A9  0875               	movf	_hex_char_low,w
  1600  02AA  118A  2501  118A   	fcall	_uart_send
  1601                           
  1602                           ;main.c: 254: byte_to_hex(usb_free_space2);
  1603  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1604  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1605  02AF  082E               	movf	_usb_free_space2,w
  1606  02B0  118A  2183  118A   	fcall	_byte_to_hex
  1607                           
  1608                           ;main.c: 255: uart_send(hex_char_high);
  1609  02B3  0876               	movf	_hex_char_high,w
  1610  02B4  118A  2501  118A   	fcall	_uart_send
  1611                           
  1612                           ;main.c: 256: uart_send(hex_char_low);
  1613  02B7  0875               	movf	_hex_char_low,w
  1614  02B8  118A  2501  118A   	fcall	_uart_send
  1615                           
  1616                           ;main.c: 257: byte_to_hex(usb_free_space1);
  1617  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1618  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1619  02BD  082F               	movf	_usb_free_space1,w
  1620  02BE  118A  2183  118A   	fcall	_byte_to_hex
  1621                           
  1622                           ;main.c: 258: uart_send(hex_char_high);
  1623  02C1  0876               	movf	_hex_char_high,w
  1624  02C2  118A  2501  118A   	fcall	_uart_send
  1625                           
  1626                           ;main.c: 259: uart_send(hex_char_low);
  1627  02C5  0875               	movf	_hex_char_low,w
  1628  02C6  118A  2501  118A   	fcall	_uart_send
  1629                           
  1630                           ;main.c: 260: uart_send('0');
  1631  02C9  3030               	movlw	48
  1632  02CA  118A  2501  118A   	fcall	_uart_send
  1633                           
  1634                           ;main.c: 261: uart_send('0');
  1635  02CD  3030               	movlw	48
  1636  02CE  118A  2501  118A   	fcall	_uart_send
  1637                           
  1638                           ;main.c: 262: uart_send('\n');
  1639  02D1  300A               	movlw	10
  1640  02D2  118A  2501  118A   	fcall	_uart_send
  1641  02D5  0008               	return
  1642  02D6                     __end_of_print_query:	
  1643                           
  1644                           	psect	text3
  1645  0166                     __ptext3:	
  1646 ;; *************** function _print_string_lcd *****************
  1647 ;; Defined at:
  1648 ;;		line 184 in file "main.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  string          1    wreg     PTR const unsigned char 
  1651 ;;		 -> STR_7(8), 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  string          1    4[BANK0 ] PTR const unsigned char 
  1654 ;;		 -> STR_7(8), 
  1655 ;;  i               1    5[BANK0 ] unsigned char 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 300/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1665 ;;      Params:         0       0       0       0       0
  1666 ;;      Locals:         0       2       0       0       0
  1667 ;;      Temps:          0       1       0       0       0
  1668 ;;      Totals:         0       3       0       0       0
  1669 ;;Total ram usage:        3 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    3
  1672 ;; This function calls:
  1673 ;;		_lcd_putc
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           
  1680                           ;psect for function _print_string_lcd
  1681  0166                     _print_string_lcd:	
  1682                           
  1683                           ;incstack = 0
  1684                           ; Regs used in _print_string_lcd: [allreg]
  1685                           ;print_string_lcd@string stored from wreg
  1686  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0168  00C9               	movwf	print_string_lcd@string
  1689                           
  1690                           ;main.c: 186: unsigned char i = 0;
  1691  0169  01CA               	clrf	print_string_lcd@i
  1692  016A                     l1275:	
  1693                           ;main.c: 187: while(string[i])
  1694                           
  1695  016A  084A               	movf	print_string_lcd@i,w
  1696  016B  0749               	addwf	print_string_lcd@string,w
  1697  016C  0084               	movwf	4
  1698  016D  118A  2002  118A   	fcall	stringdir
  1699  0170  3A00               	xorlw	0
  1700  0171  1903               	btfsc	3,2
  1701  0172  0008               	return
  1702                           
  1703                           ;main.c: 188: {;main.c: 189: lcd_putc(string[i]);
  1704  0173  084A               	movf	print_string_lcd@i,w
  1705  0174  0749               	addwf	print_string_lcd@string,w
  1706  0175  0084               	movwf	4
  1707  0176  118A  2002  118A   	fcall	stringdir
  1708  0179  118A  2567  118A   	fcall	_lcd_putc
  1709                           
  1710                           ;main.c: 190: ++i;
  1711  017C  3001               	movlw	1
  1712  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1713  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1714  017F  00C8               	movwf	??_print_string_lcd
  1715  0180  0848               	movf	??_print_string_lcd,w
  1716  0181  07CA               	addwf	print_string_lcd@i,f
  1717  0182  296A               	goto	l1275
  1718  0183                     __end_of_print_string_lcd:	
  1719                           
  1720                           	psect	text4
  1721  01A6                     __ptext4:	
  1722 ;; *************** function _print_capacity *****************
  1723 ;; Defined at:
  1724 ;;		line 216 in file "main.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 300/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1738 ;;      Params:         0       0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0
  1741 ;;      Totals:         0       0       0       0       0
  1742 ;;Total ram usage:        0 bytes
  1743 ;; Hardware stack levels used:    1
  1744 ;; Hardware stack levels required when called:    4
  1745 ;; This function calls:
  1746 ;;		_byte_to_hex
  1747 ;;		_print_string_serial
  1748 ;;		_uart_send
  1749 ;;		_usb_disk_capacity
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           
  1756                           ;psect for function _print_capacity
  1757  01A6                     _print_capacity:	
  1758                           
  1759                           ;main.c: 218: usb_disk_capacity();
  1760                           
  1761                           ;incstack = 0
  1762                           ; Regs used in _print_capacity: [allreg]
  1763  01A6  118A  26C2  118A   	fcall	_usb_disk_capacity
  1764                           
  1765                           ;main.c: 219: print_string_serial("Physical bytes: ");
  1766  01A9  303A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1767  01AA  118A  2149  118A   	fcall	_print_string_serial
  1768                           
  1769                           ;main.c: 220: byte_to_hex(usb_drive_size3);
  1770  01AD  0872               	movf	_usb_drive_size3,w
  1771  01AE  118A  2183  118A   	fcall	_byte_to_hex
  1772                           
  1773                           ;main.c: 221: uart_send(hex_char_high);
  1774  01B1  0876               	movf	_hex_char_high,w
  1775  01B2  118A  2501  118A   	fcall	_uart_send
  1776                           
  1777                           ;main.c: 222: uart_send(hex_char_low);
  1778  01B5  0875               	movf	_hex_char_low,w
  1779  01B6  118A  2501  118A   	fcall	_uart_send
  1780                           
  1781                           ;main.c: 223: byte_to_hex(usb_drive_size2);
  1782  01B9  0873               	movf	_usb_drive_size2,w
  1783  01BA  118A  2183  118A   	fcall	_byte_to_hex
  1784                           
  1785                           ;main.c: 224: uart_send(hex_char_high);
  1786  01BD  0876               	movf	_hex_char_high,w
  1787  01BE  118A  2501  118A   	fcall	_uart_send
  1788                           
  1789                           ;main.c: 225: uart_send(hex_char_low);
  1790  01C1  0875               	movf	_hex_char_low,w
  1791  01C2  118A  2501  118A   	fcall	_uart_send
  1792                           
  1793                           ;main.c: 226: byte_to_hex(usb_drive_size1);
  1794  01C5  0874               	movf	_usb_drive_size1,w
  1795  01C6  118A  2183  118A   	fcall	_byte_to_hex
  1796                           
  1797                           ;main.c: 227: uart_send(hex_char_high);
  1798  01C9  0876               	movf	_hex_char_high,w
  1799  01CA  118A  2501  118A   	fcall	_uart_send
  1800                           
  1801                           ;main.c: 228: uart_send(hex_char_low);
  1802  01CD  0875               	movf	_hex_char_low,w
  1803  01CE  118A  2501  118A   	fcall	_uart_send
  1804                           
  1805                           ;main.c: 229: uart_send('0');
  1806  01D1  3030               	movlw	48
  1807  01D2  118A  2501  118A   	fcall	_uart_send
  1808                           
  1809                           ;main.c: 230: uart_send('0');
  1810  01D5  3030               	movlw	48
  1811  01D6  118A  2501  118A   	fcall	_uart_send
  1812                           
  1813                           ;main.c: 231: uart_send('\n');
  1814  01D9  300A               	movlw	10
  1815  01DA  118A  2501  118A   	fcall	_uart_send
  1816  01DD  0008               	return
  1817  01DE                     __end_of_print_capacity:	
  1818                           
  1819                           	psect	text5
  1820  0149                     __ptext5:	
  1821 ;; *************** function _print_string_serial *****************
  1822 ;; Defined at:
  1823 ;;		line 195 in file "main.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  string          1    wreg     PTR const unsigned char 
  1826 ;;		 -> STR_9(12), str_cmd_mode(14), STR_8(10), STR_6(9), 
  1827 ;;		 -> STR_5(10), STR_4(17), STR_3(13), STR_2(16), 
  1828 ;;		 -> STR_1(17), str_timeout(10), 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  string          1    5[BANK0 ] PTR const unsigned char 
  1831 ;;		 -> STR_9(12), str_cmd_mode(14), STR_8(10), STR_6(9), 
  1832 ;;		 -> STR_5(10), STR_4(17), STR_3(13), STR_2(16), 
  1833 ;;		 -> STR_1(17), str_timeout(10), 
  1834 ;;  i               1    4[BANK0 ] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 300/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         0       0       0       0       0
  1845 ;;      Locals:         0       2       0       0       0
  1846 ;;      Temps:          0       1       0       0       0
  1847 ;;      Totals:         0       3       0       0       0
  1848 ;;Total ram usage:        3 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    3
  1851 ;; This function calls:
  1852 ;;		_uart_send
  1853 ;; This function is called by:
  1854 ;;		_print_capacity
  1855 ;;		_print_query
  1856 ;;		_usb_autoconfig
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           
  1862                           ;psect for function _print_string_serial
  1863  0149                     _print_string_serial:	
  1864                           
  1865                           ;incstack = 0
  1866                           ; Regs used in _print_string_serial: [allreg]
  1867                           ;print_string_serial@string stored from wreg
  1868  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1869  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1870  014B  00CA               	movwf	print_string_serial@string
  1871                           
  1872                           ;main.c: 197: unsigned char i = 0;
  1873  014C  01C9               	clrf	print_string_serial@i
  1874  014D                     l1231:	
  1875                           ;main.c: 198: while(string[i])
  1876                           
  1877  014D  0849               	movf	print_string_serial@i,w
  1878  014E  074A               	addwf	print_string_serial@string,w
  1879  014F  0084               	movwf	4
  1880  0150  118A  2002  118A   	fcall	stringdir
  1881  0153  3A00               	xorlw	0
  1882  0154  1903               	btfsc	3,2
  1883  0155  0008               	return
  1884                           
  1885                           ;main.c: 199: {;main.c: 200: uart_send(string[i]);
  1886  0156  0849               	movf	print_string_serial@i,w
  1887  0157  074A               	addwf	print_string_serial@string,w
  1888  0158  0084               	movwf	4
  1889  0159  118A  2002  118A   	fcall	stringdir
  1890  015C  118A  2501  118A   	fcall	_uart_send
  1891                           
  1892                           ;main.c: 201: ++i;
  1893  015F  3001               	movlw	1
  1894  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1895  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1896  0162  00C8               	movwf	??_print_string_serial
  1897  0163  0848               	movf	??_print_string_serial,w
  1898  0164  07C9               	addwf	print_string_serial@i,f
  1899  0165  294D               	goto	l1231
  1900  0166                     __end_of_print_string_serial:	
  1901                           
  1902                           	psect	text6
  1903  021C                     __ptext6:	
  1904 ;; *************** function _fifo_push *****************
  1905 ;; Defined at:
  1906 ;;		line 119 in file "main.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  data            1    wreg     unsigned char 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  data            1    1[COMMON] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      unsigned char 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 300/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1920 ;;      Params:         0       0       0       0       0
  1921 ;;      Locals:         1       0       0       0       0
  1922 ;;      Temps:          1       0       0       0       0
  1923 ;;      Totals:         2       0       0       0       0
  1924 ;;Total ram usage:        2 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		Interrupt level 1
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _fifo_push
  1935  021C                     _fifo_push:	
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _fifo_push: [wreg-fsr0h+status,2+status,0]
  1939                           ;fifo_push@data stored from wreg
  1940  021C  00F8               	movwf	fifo_push@data
  1941                           
  1942                           ;main.c: 121: switch(fifo_write_bank)
  1943  021D  2A34               	goto	l1073
  1944  021E                     l1065:	
  1945                           
  1946                           ;main.c: 124: case 1:;main.c: 125: fifo_bank_A[fifo_write_idx] = data;
  1947  021E  0878               	movf	fifo_push@data,w
  1948  021F  00F7               	movwf	??_fifo_push
  1949  0220  0870               	movf	_fifo_write_idx,w
  1950  0221  3EA0               	addlw	(low (_fifo_bank_A| 0))& (0+255)
  1951  0222  0084               	movwf	4
  1952  0223  0877               	movf	??_fifo_push,w
  1953  0224  1383               	bcf	3,7	;select IRP bank1
  1954  0225  2A32               	goto	L6
  1955  0226                     l1067:	
  1956                           ;main.c: 126: break;
  1957                           
  1958                           
  1959                           ;main.c: 128: case 3:;main.c: 129: case 4:;main.c: 130: fifo_bank_B[fifo_write_idx - 64]
      +                           = data;
  1960  0226  0878               	movf	fifo_push@data,w
  1961  0227  00F7               	movwf	??_fifo_push
  1962  0228  0870               	movf	_fifo_write_idx,w
  1963  0229  3E50               	addlw	(low ((_fifo_bank_B| (0+256)+192)))& (0+255)
  1964  022A  2A2F               	goto	L7
  1965  022B                     l1069:	
  1966                           ;main.c: 131: break;
  1967                           
  1968                           
  1969                           ;main.c: 133: case 6:;main.c: 134: case 7:;main.c: 135: fifo_bank_C[fifo_write_idx - (64
      +                           + 96)] = data;
  1970  022B  0878               	movf	fifo_push@data,w
  1971  022C  00F7               	movwf	??_fifo_push
  1972  022D  0870               	movf	_fifo_write_idx,w
  1973  022E  3E70               	addlw	(low ((_fifo_bank_C| (0+256)+96)))& (0+255)
  1974  022F                     L7:	
  1975  022F  0084               	movwf	4
  1976  0230  0877               	movf	??_fifo_push,w
  1977  0231  1783               	bsf	3,7	;select IRP bank2
  1978  0232                     L6:	
  1979  0232  0080               	movwf	0
  1980                           
  1981                           ;main.c: 136: break;
  1982  0233  2A50               	goto	l1075
  1983  0234                     l1073:	
  1984  0234  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0235  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0236  0821               	movf	_fifo_write_bank,w
  1987                           
  1988                           ; Switch size 1, requested type "simple"
  1989                           ; Number of cases is 8, Range of values is 0 to 7
  1990                           ; switch strategies available:
  1991                           ; Name         Instructions Cycles
  1992                           ; direct_byte           23     7 (fixed)
  1993                           ; simple_byte           25    13 (average)
  1994                           ; jumptable            260     6 (fixed)
  1995                           ;	Chosen strategy is simple_byte
  1996  0237  3A00               	xorlw	0	; case 0
  1997  0238  1903               	skipnz
  1998  0239  2A1E               	goto	l1065
  1999  023A  3A01               	xorlw	1	; case 1
  2000  023B  1903               	skipnz
  2001  023C  2A1E               	goto	l1065
  2002  023D  3A03               	xorlw	3	; case 2
  2003  023E  1903               	skipnz
  2004  023F  2A26               	goto	l1067
  2005  0240  3A01               	xorlw	1	; case 3
  2006  0241  1903               	skipnz
  2007  0242  2A26               	goto	l1067
  2008  0243  3A07               	xorlw	7	; case 4
  2009  0244  1903               	skipnz
  2010  0245  2A26               	goto	l1067
  2011  0246  3A01               	xorlw	1	; case 5
  2012  0247  1903               	skipnz
  2013  0248  2A2B               	goto	l1069
  2014  0249  3A03               	xorlw	3	; case 6
  2015  024A  1903               	skipnz
  2016  024B  2A2B               	goto	l1069
  2017  024C  3A01               	xorlw	1	; case 7
  2018  024D  1903               	skipnz
  2019  024E  2A2B               	goto	l1069
  2020  024F  2A50               	goto	l1075
  2021  0250                     l1075:	
  2022                           
  2023                           ;main.c: 138: ++fifo_write_idx;
  2024  0250  3001               	movlw	1
  2025  0251  00F7               	movwf	??_fifo_push
  2026  0252  0877               	movf	??_fifo_push,w
  2027  0253  07F0               	addwf	_fifo_write_idx,f
  2028                           
  2029                           ;main.c: 139: if(!(fifo_write_idx & 0x1F))
  2030  0254  0870               	movf	_fifo_write_idx,w
  2031  0255  391F               	andlw	31
  2032  0256  1D03               	btfss	3,2
  2033  0257  2A5C               	goto	l171
  2034                           
  2035                           ;main.c: 140: {;main.c: 141: ++fifo_write_bank;
  2036  0258  3001               	movlw	1
  2037  0259  00F7               	movwf	??_fifo_push
  2038  025A  0877               	movf	??_fifo_push,w
  2039  025B  07A1               	addwf	_fifo_write_bank,f
  2040  025C                     l171:	
  2041                           
  2042                           ;main.c: 142: };main.c: 143: ++fifo_num_bytes;
  2043  025C  3001               	movlw	1
  2044  025D  00F7               	movwf	??_fifo_push
  2045  025E  0877               	movf	??_fifo_push,w
  2046  025F  07A0               	addwf	_fifo_num_bytes,f
  2047                           
  2048                           ;main.c: 144: return fifo_num_bytes;
  2049  0260  0820               	movf	_fifo_num_bytes,w
  2050  0261  0008               	return
  2051  0262                     __end_of_fifo_push:	
  2052                           
  2053                           	psect	text7
  2054  01DE                     __ptext7:	
  2055 ;; *************** function _fifo_pop *****************
  2056 ;; Defined at:
  2057 ;;		line 147 in file "main.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  temp            1    3[COMMON] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      unsigned char 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 300/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2071 ;;      Params:         0       0       0       0       0
  2072 ;;      Locals:         1       0       0       0       0
  2073 ;;      Temps:          1       0       0       0       0
  2074 ;;      Totals:         2       0       0       0       0
  2075 ;;Total ram usage:        2 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		Interrupt level 1
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           
  2085                           ;psect for function _fifo_pop
  2086  01DE                     _fifo_pop:	
  2087                           
  2088                           ;main.c: 149: unsigned char temp;;main.c: 150: switch(fifo_read_bank)
  2089                           
  2090                           ;incstack = 0
  2091                           ; Regs used in _fifo_pop: [wreg-fsr0h+status,2+status,0]
  2092  01DE  29F0               	goto	l1095
  2093  01DF                     l1087:	
  2094                           
  2095                           ;main.c: 153: case 1:;main.c: 154: temp = fifo_bank_A[fifo_read_idx];
  2096  01DF  0871               	movf	_fifo_read_idx,w
  2097  01E0  3EA0               	addlw	(low (_fifo_bank_A| 0))& (0+255)
  2098  01E1  0084               	movwf	4
  2099  01E2  1383               	bcf	3,7	;select IRP bank1
  2100  01E3  29EB               	goto	L9
  2101  01E4                     l1089:	
  2102                           ;main.c: 155: break;
  2103                           
  2104                           
  2105                           ;main.c: 157: case 3:;main.c: 158: case 4:;main.c: 159: temp = fifo_bank_B[fifo_read_idx
      +                           - 64];
  2106  01E4  0871               	movf	_fifo_read_idx,w
  2107  01E5  3E50               	addlw	(low ((_fifo_bank_B| (0+256)+192)))& (0+255)
  2108  01E6  29E9               	goto	L10
  2109  01E7                     l1091:	
  2110                           ;main.c: 160: break;
  2111                           
  2112                           
  2113                           ;main.c: 162: case 6:;main.c: 163: case 7:;main.c: 164: temp = fifo_bank_C[fifo_read_idx
      +                           - (64 + 96)];
  2114  01E7  0871               	movf	_fifo_read_idx,w
  2115  01E8  3E70               	addlw	(low ((_fifo_bank_C| (0+256)+96)))& (0+255)
  2116  01E9                     L10:	
  2117  01E9  0084               	movwf	4
  2118  01EA  1783               	bsf	3,7	;select IRP bank2
  2119  01EB                     L9:	
  2120  01EB  0800               	movf	0,w
  2121  01EC  00F9               	movwf	??_fifo_pop
  2122  01ED  0879               	movf	??_fifo_pop,w
  2123  01EE  00FA               	movwf	fifo_pop@temp
  2124                           
  2125                           ;main.c: 165: break;
  2126  01EF  2A0C               	goto	l1097
  2127  01F0                     l1095:	
  2128  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2129  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2130  01F2  0822               	movf	_fifo_read_bank,w
  2131                           
  2132                           ; Switch size 1, requested type "simple"
  2133                           ; Number of cases is 8, Range of values is 0 to 7
  2134                           ; switch strategies available:
  2135                           ; Name         Instructions Cycles
  2136                           ; direct_byte           23     7 (fixed)
  2137                           ; simple_byte           25    13 (average)
  2138                           ; jumptable            260     6 (fixed)
  2139                           ;	Chosen strategy is simple_byte
  2140  01F3  3A00               	xorlw	0	; case 0
  2141  01F4  1903               	skipnz
  2142  01F5  29DF               	goto	l1087
  2143  01F6  3A01               	xorlw	1	; case 1
  2144  01F7  1903               	skipnz
  2145  01F8  29DF               	goto	l1087
  2146  01F9  3A03               	xorlw	3	; case 2
  2147  01FA  1903               	skipnz
  2148  01FB  29E4               	goto	l1089
  2149  01FC  3A01               	xorlw	1	; case 3
  2150  01FD  1903               	skipnz
  2151  01FE  29E4               	goto	l1089
  2152  01FF  3A07               	xorlw	7	; case 4
  2153  0200  1903               	skipnz
  2154  0201  29E4               	goto	l1089
  2155  0202  3A01               	xorlw	1	; case 5
  2156  0203  1903               	skipnz
  2157  0204  29E7               	goto	l1091
  2158  0205  3A03               	xorlw	3	; case 6
  2159  0206  1903               	skipnz
  2160  0207  29E7               	goto	l1091
  2161  0208  3A01               	xorlw	1	; case 7
  2162  0209  1903               	skipnz
  2163  020A  29E7               	goto	l1091
  2164  020B  2A0C               	goto	l1097
  2165  020C                     l1097:	
  2166                           
  2167                           ;main.c: 167: ++fifo_read_idx;
  2168  020C  3001               	movlw	1
  2169  020D  00F9               	movwf	??_fifo_pop
  2170  020E  0879               	movf	??_fifo_pop,w
  2171  020F  07F1               	addwf	_fifo_read_idx,f
  2172                           
  2173                           ;main.c: 168: if(!(fifo_read_idx & 0x1F))
  2174  0210  0871               	movf	_fifo_read_idx,w
  2175  0211  391F               	andlw	31
  2176  0212  1D03               	btfss	3,2
  2177  0213  2A18               	goto	l185
  2178                           
  2179                           ;main.c: 169: {;main.c: 170: ++fifo_read_bank;
  2180  0214  3001               	movlw	1
  2181  0215  00F9               	movwf	??_fifo_pop
  2182  0216  0879               	movf	??_fifo_pop,w
  2183  0217  07A2               	addwf	_fifo_read_bank,f
  2184  0218                     l185:	
  2185                           
  2186                           ;main.c: 171: };main.c: 172: --fifo_num_bytes;
  2187  0218  3001               	movlw	1
  2188  0219  02A0               	subwf	_fifo_num_bytes,f
  2189                           
  2190                           ;main.c: 173: return temp;
  2191  021A  087A               	movf	fifo_pop@temp,w
  2192  021B  0008               	return
  2193  021C                     __end_of_fifo_pop:	
  2194                           
  2195                           	psect	text8
  2196  0183                     __ptext8:	
  2197 ;; *************** function _byte_to_hex *****************
  2198 ;; Defined at:
  2199 ;;		line 176 in file "main.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  data            1    wreg     unsigned char 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  data            1    2[BANK0 ] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 300/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2213 ;;      Params:         0       0       0       0       0
  2214 ;;      Locals:         0       1       0       0       0
  2215 ;;      Temps:          0       2       0       0       0
  2216 ;;      Totals:         0       3       0       0       0
  2217 ;;Total ram usage:        3 bytes
  2218 ;; Hardware stack levels used:    2
  2219 ;; Hardware stack levels required when called:    2
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_print_capacity
  2224 ;;		_print_query
  2225 ;;		_usb_autoconfig
  2226 ;;		_main
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           
  2231                           ;psect for function _byte_to_hex
  2232  0183                     _byte_to_hex:	
  2233                           
  2234                           ;incstack = 0
  2235 ;; using string table level
  2236                           ; Regs used in _byte_to_hex: [wreg-fsr0h+status,2+status,0+pclath]
  2237                           ;byte_to_hex@data stored from wreg
  2238  0183  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0184  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0185  00C7               	movwf	byte_to_hex@data
  2241                           
  2242                           ;main.c: 178: hex_char_low = hex_table[data & (unsigned char)0x0F];
  2243  0186  0847               	movf	byte_to_hex@data,w
  2244  0187  390F               	andlw	15
  2245  0188  3E01               	addlw	low ((_hex_table-__stringbase)| (0+32768))
  2246  0189  0084               	movwf	4
  2247  018A  118A  2002  118A   	fcall	stringdir
  2248  018D  00C5               	movwf	??_byte_to_hex
  2249  018E  0845               	movf	??_byte_to_hex,w
  2250  018F  00F5               	movwf	_hex_char_low
  2251                           
  2252                           ;main.c: 179: data = data >> 4;
  2253  0190  0847               	movf	byte_to_hex@data,w
  2254  0191  00C5               	movwf	??_byte_to_hex
  2255  0192  3004               	movlw	4
  2256  0193                     u41_25:	
  2257  0193  1003               	clrc
  2258  0194  0CC5               	rrf	??_byte_to_hex,f
  2259  0195  3EFF               	addlw	-1
  2260  0196  1D03               	skipz
  2261  0197  2993               	goto	u41_25
  2262  0198  0845               	movf	??_byte_to_hex,w
  2263  0199  00C6               	movwf	??_byte_to_hex+1
  2264  019A  0846               	movf	??_byte_to_hex+1,w
  2265  019B  00C7               	movwf	byte_to_hex@data
  2266                           
  2267                           ;main.c: 180: hex_char_high = hex_table[data & (unsigned char)0x0F];
  2268  019C  0847               	movf	byte_to_hex@data,w
  2269  019D  390F               	andlw	15
  2270  019E  3E01               	addlw	low ((_hex_table-__stringbase)| (0+32768))
  2271  019F  0084               	movwf	4
  2272  01A0  118A  2002         	fcall	stringdir
  2273  01A2  00C5               	movwf	??_byte_to_hex
  2274  01A3  0845               	movf	??_byte_to_hex,w
  2275  01A4  00F6               	movwf	_hex_char_high
  2276  01A5  0008               	return
  2277  01A6                     __end_of_byte_to_hex:	
  2278  007E                     btemp	set	126	;btemp
  2279  007E                     wtemp0	set	126


Data Sizes:
    Strings     112
    Constant    40
    Data        8
    BSS         300
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      11
    BANK0            80     11      56
    BANK1            80      0      64
    BANK3            96      0      96
    BANK2            96      0      96

Pointer List with Targets:

    print_string_serial@string	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_9(CODE[12]), str_cmd_mode(CODE[14]), STR_8(CODE[10]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[17]), STR_3(CODE[13]), STR_2(CODE[16]), 
		 -> STR_1(CODE[17]), str_timeout(CODE[10]), 

    print_string_lcd@string	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_7(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _fifo_push in COMMON

    None.

Critical Paths under _fifo_pop in COMMON

    None.

Critical Paths under _byte_to_hex in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_usb_autoconfig
    _usb_autoconfig->_print_string_serial
    _print_query->_print_string_serial
    _print_capacity->_print_string_serial

Critical Paths under _fifo_push in BANK0

    None.

Critical Paths under _fifo_pop in BANK0

    None.

Critical Paths under _byte_to_hex in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fifo_push in BANK1

    None.

Critical Paths under _fifo_pop in BANK1

    None.

Critical Paths under _byte_to_hex in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fifo_push in BANK3

    None.

Critical Paths under _fifo_pop in BANK3

    None.

Critical Paths under _byte_to_hex in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fifo_push in BANK2

    None.

Critical Paths under _fifo_pop in BANK2

    None.

Critical Paths under _byte_to_hex in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5190
                                              8 BANK0      3     3      0
                        _byte_to_hex
                          _file_dump
                         _initialize
                         _lcd_clear2
                          _lcd_line2
                           _lcd_putc
                          _mem_clear
                           _mem_dump
                     _print_capacity
                         _print_name
                        _print_query
                   _print_string_lcd
                _print_string_serial
                    _print_test_data
                          _uart_read
                          _uart_send
                     _usb_autoconfig
                   _usb_disk_connect
                     _usb_disk_mount
                     _usb_file_close
                    _usb_file_create
                      _usb_file_open
                      _usb_file_read
                  _usb_get_file_size
                     _usb_get_status
                    _usb_get_version
                      _usb_reset_all
                  _usb_set_file_name
                       _usb_set_mode
                _usb_write_test_data
 ---------------------------------------------------------------------------------
 (1) _usb_write_test_data                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_set_file_name                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_reset_all                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_file_size                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_read                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_open                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_create                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_file_close                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_autoconfig                                       2     2      0    1868
                                              6 BANK0      2     2      0
                        _byte_to_hex
                       _delay_millis
                        _print_query
                _print_string_serial
                          _uart_send
                   _usb_check_exists
                   _usb_disk_connect
                     _usb_disk_mount
                     _usb_get_status
                    _usb_get_version
                       _usb_set_mode
 ---------------------------------------------------------------------------------
 (1) _usb_set_mode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_version                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_get_status                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_disk_mount                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _usb_disk_connect                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _usb_check_exists                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _print_query                                          0     0      0     772
                        _byte_to_hex
                _print_string_serial
                          _uart_send
                     _usb_disk_query
 ---------------------------------------------------------------------------------
 (3) _usb_disk_query                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _delay_millis                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_test_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_string_lcd                                     3     3      0     166
                                              3 BANK0      3     3      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_name                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_capacity                                       0     0      0     772
                        _byte_to_hex
                _print_string_serial
                          _uart_send
                  _usb_disk_capacity
 ---------------------------------------------------------------------------------
 (2) _usb_disk_capacity                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _print_string_serial                                  3     3      0     490
                                              3 BANK0      3     3      0
                          _uart_send
 ---------------------------------------------------------------------------------
 (2) _uart_send                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _byte_to_hex                                          3     3      0     282
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _mem_dump                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mem_clear                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_line2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_clear2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _file_dump                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fifo_push                                            2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _fifo_pop                                             2     2      0      25
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _byte_to_hex                                          3     3      0     282
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _byte_to_hex
   _file_dump
   _initialize
   _lcd_clear2
   _lcd_line2
   _lcd_putc
   _mem_clear
   _mem_dump
   _print_capacity
     _byte_to_hex
     _print_string_serial
       _uart_send
     _uart_send
     _usb_disk_capacity
   _print_name
   _print_query
     _byte_to_hex
     _print_string_serial
       _uart_send
     _uart_send
     _usb_disk_query
   _print_string_lcd
     _lcd_putc
   _print_string_serial
     _uart_send
   _print_test_data
   _uart_read
   _uart_send
   _usb_autoconfig
     _byte_to_hex
     _delay_millis
     _print_query
       _byte_to_hex
       _print_string_serial
         _uart_send
       _uart_send
       _usb_disk_query
     _print_string_serial
       _uart_send
     _uart_send
     _usb_check_exists
     _usb_disk_connect
     _usb_disk_mount
     _usb_get_status
     _usb_get_version
     _usb_set_mode
   _usb_disk_connect
   _usb_disk_mount
   _usb_file_close
   _usb_file_create
   _usb_file_open
   _usb_file_read
   _usb_get_file_size
   _usb_get_status
   _usb_get_version
   _usb_reset_all
   _usb_set_file_name
   _usb_set_mode
   _usb_write_test_data

 _fifo_push (ROOT)

 _fifo_pop (ROOT)

 _byte_to_hex (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      60      10      100.0%
BITBANK3            60      0       0       9        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      60      12      100.0%
BITBANK2            60      0       0      11        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       8       80.0%
BITBANK1            50      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     143       6        0.0%
ABS                  0      0     143       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon May 29 16:41:31 2023

                           pc 0002                   __CFG_CP$OFF 0000                            fsr 0004  
               _hex_char_high 0076                 _usb_file_read 077A                 _usb_file_open 0638  
                         l171 025C                           l185 0218              ?_print_test_data 0077  
                         fsr0 0004                           indf 0000                  __CFG_BORV$42 0000  
                __CFG_FOSC$XT 0000           _usb_bytes_read_high 0031                _usb_file_close 063D  
                _usb_set_mode 06A2                          l1231 014D                          l1065 021E  
                        l1073 0234                          l2201 039A                          l1091 01E7  
                        l1067 0226                          l1075 0250                          l2211 03B1  
                        l2203 039F                          l1069 022B                          l2221 03C8  
                        l2213 03B5                          l2205 03A4                          l1087 01DF  
                        l1095 01F0                          l2223 03CC                          l2215 03B9  
                        l2207 03A9                          l1089 01E4                          l1097 020C  
                        l2241 0407                          l2233 03F2                          l2217 03BD  
                        l2209 03AD                          l1275 016A                          l2243 040B  
                        l2235 03FB                          l2219 03C4                          l2171 0479  
              _usb_disk_mount 0698                          l2253 0419                          l2245 040F  
                        l2237 03FF                          l2181 0379                          l2173 036C  
                        l2247 0413                          l2239 0403                          l2255 0460  
                        l2183 037B                          l2193 0389                          l2177 0373  
                        l2195 038E                          l2197 0392                          l2189 0381  
                        l2199 0396                _usb_disk_query 06E4                          STR_1 0041  
                        STR_2 0052                          STR_3 0062                          STR_4 0030  
                        STR_5 0085                          STR_6 008F                          STR_7 0098  
                        STR_8 007B                          STR_9 006F                _usb_get_status 0691  
                        _main 035C            usb_autoconfig@temp 004C                          btemp 007E  
               __CFG_BOREN$ON 0000           _usb_bytes_sent_high 0035                          start 0000  
               __CFG_IESO$OFF 0000                   _str_timeout 0026                 __CFG_MCLRE$ON 0000  
             _usb_file_create 067E                 _usb_reset_all 0620                _usb_autoconfig 02D6  
              ?_usb_file_read 0077                ?_usb_file_open 0077                         ?_main 0077  
                ?_byte_to_hex 0077                 __CFG_WDTE$OFF 0000                  _str_cmd_mode 0018  
                       u41_25 0193                 __CFG_PWRTE$ON 0000             ?_print_string_lcd 0077  
              __CFG_FCMEN$OFF 0000               _usb_get_version 06AA            ??_print_string_lcd 0048  
                       _temp3 0044                         _temp4 0043                         _temp5 0042  
                       pclath 000A                         status 0003                         wtemp0 007E  
             _usb_free_space1 002F               _usb_free_space2 002E               _usb_free_space3 002D  
           _usb_target_status 0029               __initialization 07BE        __end_of_usb_autoconfig 035C  
              ?_usb_reset_all 0077                  __end_of_main 0494               _usb_drive_size1 0074  
             _usb_drive_size2 0073               _usb_drive_size3 0072             _usb_set_file_name 0625  
          ?_usb_set_file_name 0077                        ??_main 004D              _usb_disk_connect 069D  
             ?_usb_file_close 0077           ??_usb_set_file_name 0077               __CFG_CCP2MX$RC1 0000  
             ?_usb_disk_mount 0077               ?_usb_disk_query 0077               ?_usb_get_status 0077  
 __end_of_print_string_serial 0166              __end_of_fifo_pop 021C               ?_usb_autoconfig 0077  
             ??_usb_file_read 0077               ??_usb_file_open 0077              ??_print_capacity 0077  
             __CFG_BORSEN$OFF 0000       __end_of__initialization 07FD                  ?_print_query 0077  
              _tape_size_high 0037               ??_usb_reset_all 0077                __pcstackCOMMON 0077  
                __pidataBANK0 0141          __size_of_byte_to_hex 0023            __size_of_fifo_push 0046  
           _usb_disk_capacity 06C2            ?_usb_disk_capacity 0077                    __pbssBANK0 0020  
                  __pbssBANK1 00A0                    __pbssBANK2 0110                    __pbssBANK3 0190  
           _usb_file_size_low 0032              ?_usb_file_create 0077           ??_usb_disk_capacity 0077  
                _delay_millis 05FB             _usb_get_file_size 0663                    __pmaintext 035C  
         _usb_write_test_data 0715            ?_usb_get_file_size 0077                    _gen_count2 003C  
                  _gen_count3 003B                    _gen_count4 003A                    _gen_count5 0039  
                  _gen_count6 0038              ?_usb_get_version 0077           ??_usb_get_file_size 0077  
             byte_to_hex@data 0047                    _lcd_clear2 05B3                 _ram_address_h 0041  
               _ram_address_l 0040          ?_usb_write_test_data 0077                     ?_fifo_pop 0077  
                   ?_lcd_putc 0077                    __stringtab 0002                    _ldel_count 003E  
                   ?_mem_dump 0077     __size_of_print_string_lcd 001D             __end_of_fifo_push 0262  
      print_string_lcd@string 0049             __end_of_hex_table 0018              ??_usb_file_close 0077  
                  _initialize 0494                       __ptext1 02D6                       __ptext2 0262  
                     __ptext3 0166                       __ptext4 01A6                       __ptext5 0149  
                     __ptext6 021C                       __ptext7 01DE                       __ptext8 0183  
            ??_usb_disk_mount 0077              ??_usb_disk_query 0077              ??_usb_get_status 0077  
       ??_usb_write_test_data 0077                    _s_reg_high 0028                    _sdel_count 003F  
                  ??_fifo_pop 0079                       clrloop0 013A                    ??_lcd_putc 0077  
        end_of_initialization 07FD                    ??_mem_dump 0077              ??_usb_autoconfig 004B  
        __size_of_print_query 0074             ?_usb_check_exists 0077            ??_usb_check_exists 0077  
                  _print_name 05CB                   ?_lcd_clear2 0077                  _hex_char_low 0075  
             _fifo_write_bank 0021            _usb_bytes_read_low 0030             ??_print_test_data 0077  
          _usb_bytes_sent_low 0034  __size_of_print_string_serial 001D                   ?_initialize 0077  
         start_initialization 07BE                 ?_usb_set_mode 0077              _print_string_lcd 0166  
                 __pdataBANK0 0050                 ??_byte_to_hex 0045                   ?_print_name 0077  
          _usb_file_size_high 0033                 _tape_size_low 0036                   __pbssCOMMON 0070  
                   ___latbits 0001                ??_usb_set_mode 0077          print_string_serial@i 0049  
               __pcstackBANK0 0045                 _delay_counter 0024       __size_of_print_capacity 0038  
           __size_of_fifo_pop 003E             ?_usb_disk_connect 0077            ??_usb_disk_connect 0077  
                   _gen_count 003D                     _file_dump 04EA                     _fifo_push 021C  
                   _lcd_line2 059A            _usb_logical_bytes1 002C            _usb_logical_bytes2 002B  
          _usb_logical_bytes3 002A                     __pstrings 0002                _fifo_read_bank 0022  
                   _hex_table 0008                     _mem_clear 04CE             print_string_lcd@i 004A  
                 _fifo_bank_A 00A0                   _fifo_bank_B 0190                   _fifo_bank_C 0110  
         __end_of_byte_to_hex 01A6                     _s_reg_low 0027                _fifo_num_bytes 0020  
                   clear_ram0 0139                     _tape_name 0050                     _uart_read 04FD  
                   _uart_send 0501                    ?_file_dump 0077                    ?_fifo_push 0077  
                  ?_lcd_line2 0077                   __stringbase 0007                  ??_lcd_clear2 0077  
              _fifo_write_idx 0070                     main@state 004E                    ?_mem_clear 0077  
         _print_string_serial 0149               _print_test_data 0607                 ??_print_query 0077  
        ?_print_string_serial 0077                    ?_uart_read 0077                    ?_uart_send 0077  
                ??_initialize 0077     print_string_serial@string 004A            __end_of__stringtab 0008  
                 _byte_to_hex 0183             ??_usb_file_create 0077      __end_of_print_string_lcd 0183  
                    _flag_reg 0023                      _fifo_pop 01DE                _print_capacity 01A6  
                    _lcd_putc 0567                 _fifo_read_idx 0071                      _mem_dump 04DC  
        __end_of_str_cmd_mode 0026                 __size_of_main 0138                 ?_delay_millis 0077  
           ??_usb_get_version 0077         ??_print_string_serial 0048           __end_of_print_query 02D6  
                 ??_file_dump 0077       __size_of_usb_autoconfig 0086                   ??_fifo_push 0077  
                 ??_lcd_line2 0077                      main@temp 004F                  ??_print_name 0077  
                 ??_mem_clear 0077        __end_of_print_capacity 01DE                      intlevel1 0000  
              ??_delay_millis 0077                     stringcode 0002                   ??_uart_read 0077  
                 ??_uart_send 0077           __end_of_str_timeout 0030                  _timeout_high 0026  
                    stringdir 0002                      stringtab 0002               ?_print_capacity 0077  
            _usb_check_exists 0674                   _timeout_low 0025                   _print_query 0262  
                fifo_pop@temp 007A                 fifo_push@data 0078  
